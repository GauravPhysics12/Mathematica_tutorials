(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1162744,      21975]
NotebookOptionsPosition[   1136297,      21524]
NotebookOutlinePosition[   1136696,      21540]
CellTagsIndexPosition[   1136653,      21537]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chapter 1: Using and Understanding Mathematica ", "Title",
 CellChangeTimes->{{3.968938298149233*^9, 
  3.9689383129077253`*^9}},ExpressionUUID->"c22bb9c2-068d-4986-8f86-\
2fc12061bbc8"],

Cell["\<\
Main aim of this chapter is to provide reader with introduction to basic \
commands of Mathematica and motivation to use it \
\>", "Subtitle",
 CellChangeTimes->{{3.9689383154881496`*^9, 3.968938377512848*^9}, {
  3.968938930712494*^9, 
  3.9689389313488483`*^9}},ExpressionUUID->"60b570bd-f37b-49c7-9b54-\
5b7f98a5b12d"],

Cell[CellGroupData[{

Cell["So let\[CloseCurlyQuote]s start with a very basic calculation ", \
"Section",
 CellChangeTimes->{{3.968938396713407*^9, 
  3.968938440382402*^9}},ExpressionUUID->"ac48bca8-b724-40f9-8a03-\
b699ee36d271"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], ",", "10"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Sqrt", " ", "is", " ", "the", " ", "square", " ", "root", " ", "function",
     " ", "and", " ", 
    RowBox[{"N", "[", 
     RowBox[{",", 
      RowBox[{"(", "?", ")"}]}], "]"}], " ", "a", " ", "number", " ", "in", 
    " ", "the", " ", "second", " ", "bracket", " ", "will", " ", "give", " ", 
    "that", " ", "many", " ", "number", " ", "of", " ", "digits", " ", 
    "after", " ", "the", " ", "decimal", " ", "point"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.9689384423721113`*^9, 
  3.968938573930626*^9}},ExpressionUUID->"bd78cf76-a106-4653-aecf-\
41510a4c8f23"],

Cell[BoxData["1.41421356237309504880168872420969807857`10."], "Output",
 CellChangeTimes->{{3.968938544073779*^9, 3.968938547095357*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"4eacbb59-a6a6-49d6-9a09-002e8a39689b"]
}, Open  ]],

Cell["\<\
Interestingly Mathematica has very useful shortcut keys 
%  \[Rule] the last generated result
%%  \[Rule] the next to last generated result
% n \[Rule] the result in the output line n (look at the left side just below \
the command and it will be self-explanatory)\
\>", "Text",
 CellChangeTimes->{{3.968938222518764*^9, 3.968938223310678*^9}, {
  3.9689385860851173`*^9, 3.968938633384315*^9}, {3.9689386685358267`*^9, 
  3.968938788439054*^9}},ExpressionUUID->"af429fb5-923a-4817-84b6-\
6ffdd6884b94"],

Cell[CellGroupData[{

Cell[BoxData["%"], "Input",
 CellChangeTimes->{3.96893879788395*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"87c44d11-e834-4e77-85cf-4cf25248d795"],

Cell[BoxData["1.41421356237309504880168872420969807857`10."], "Output",
 CellChangeTimes->{3.9689387985407543`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7ce215ba-99fc-4150-bb69-3b97044139ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "^", "2"}]], "Input",
 CellChangeTimes->{{3.9689388001764402`*^9, 3.968938804463625*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"943bb4f6-86d7-4fa3-b6d6-ea87ad8a25bb"],

Cell[BoxData["2.`9.698970004336019"], "Output",
 CellChangeTimes->{{3.9689388006802273`*^9, 3.968938804932662*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"8cf263aa-5a55-4cdb-b39e-3940a5884778"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%5"], "Input",
 CellChangeTimes->{{3.968938811030984*^9, 3.968938812002804*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"39a9892c-93db-48f2-a1c2-6ff8bc720922"],

Cell[BoxData["2.`9.698970004336019"], "Output",
 CellChangeTimes->{3.968938812694216*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"50afe767-9e22-407b-bb2d-3b0943c3884f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Alright let\[CloseCurlyQuote]s move on to the next section where we will do \
some symbolic maths\
\>", "Section",
 CellChangeTimes->{{3.968938946152504*^9, 3.968939043406067*^9}, {
  3.968939130665831*^9, 
  3.96893913203852*^9}},ExpressionUUID->"a139f78b-43de-44b9-bb98-\
3248d02ffdbe"],

Cell[TextData[{
 "Here is the list of few commands that we are going to use\n\nExpand[ ] : It \
will expand the given compact expression \nFactor[ ]: It  will write \
expression as products of minimal factors \nSimplify[ ]: It will simplify the \
expression \nFullSimplify[ ]: It is just comprehensive version of Simplify \
(Honestly people just use this command when simplify doesn\[CloseCurlyQuote]t \
work lol )\nPowerExpand[ ]: It transform normal expression in the form of \
powers \n\nThere is one more command that is extensively used \n(Any \
mathematical function) /. (variable) \[Rule] value  and the function will \
take that value in place of variable. \n\n",
 StyleBox["Let\[CloseCurlyQuote]s move on to the playground!  ",
  FontSize->24]
}], "Text",
 CellChangeTimes->{{3.968939134991612*^9, 3.968939244300767*^9}, {
  3.9689393118974657`*^9, 3.968939501288258*^9}, {3.968939531804688*^9, 
  3.968939628614922*^9}, {3.968939703627486*^9, 
  3.968939705961852*^9}},ExpressionUUID->"30fcc52e-386d-46bc-afaf-\
3d37123d6b37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "^", "2"}], " ", "-", 
  RowBox[{"2", "x"}], "+", "1", " "}]], "Input",
 CellChangeTimes->{{3.968939672881769*^9, 3.968939685640881*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a21d794d-85af-4a4d-a386-df4754e4b570"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.968939686714403*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"60db0660-19dc-4f1f-b92e-49dffa5a5788"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", "-", 
   RowBox[{"2", "x"}], "+", "1"}], " ", "/.", 
  RowBox[{"x", "->", " ", 
   RowBox[{"y", "+", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.968939716252781*^9, 3.968939727525292*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9c784d72-124a-4b70-a85f-c88abaa28b98"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", "y"}], ")"}]}], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"2", "+", "y"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.9689397227410717`*^9, 3.968939727853799*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"a3a3798f-5932-4b30-89c8-a98954f53be2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.968939734627466*^9, 3.9689397405661497`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"951ebbb3-d476-4aa8-831e-9e1cf8d4d8c2"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", "y"}], "+", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{3.968939741009509*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"4dbac893-625e-4133-8751-9a4c3b496adb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.968939748588606*^9, 3.9689397555920067`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"6777951c-2caa-433d-ab00-2cdd0bae73dc"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "y"}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.968939756601431*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9075bfb5-9550-46d4-b182-9b2d5ecf12dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%11", "]"}]], "Input",
 CellChangeTimes->{{3.9689397636915817`*^9, 3.96893979491228*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f496d3d2-96b2-4a99-a497-cffbece5d088"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "y"}], ")"}], "2"]], "Output",
 CellChangeTimes->{{3.968939766893154*^9, 3.968939795307115*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"abaa9b30-f78c-4475-94e9-3475f43f4be8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PowerExpand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", " ", "y"}], ")"}], "^", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.9689398384006577`*^9, 3.9689398620306168`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"39cea3b5-dfd3-4f85-9ebe-c81d97096f6b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "12"], " ", 
  SuperscriptBox["y", "12"]}]], "Output",
 CellChangeTimes->{{3.9689398419065647`*^9, 3.968939862669984*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"71ed0c3f-3599-443f-b05b-5f3bed6aa8ee"]
}, Open  ]],

Cell["\<\
At this point a lot you must be thinking, wow this is really cool Mathematica \
is too smart or genius as a program but actually sometimes it cannot see some \
of most obvious things \
\>", "Text",
 CellChangeTimes->{{3.968939876768705*^9, 
  3.968939960313586*^9}},ExpressionUUID->"d6479335-e5d0-4179-a6f9-\
810aceea9a57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "=", " ", 
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", "+", " ", 
   RowBox[{"y", "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.968939969119533*^9, 3.968939976917161*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6a113143-ef54-4f6f-9151-4843802f86a6"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], "+", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{3.968939977716304*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a3a30c50-404e-4064-b95e-861b8bd978a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "->", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
    RowBox[{"y", "->", 
     RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Before", " ", "exicuting", " ", "this", " ", "line"}], ",", " ", 
    
    RowBox[{
    "what", " ", "do", " ", "you", " ", "expect", " ", "to", " ", "be", " ", 
     "your", " ", 
     RowBox[{"solution", "?", " ", "1"}], " ", 
     RowBox[{"right", "!"}], " ", "Now", " ", "exicute", " ", "the", " ", 
     "command"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.968939983871064*^9, 
  3.968940083847159*^9}},ExpressionUUID->"e0ce6c02-715c-4b92-9f3d-\
6e7491da370c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", "t", "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "t", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.9689400047833757`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"12fcdae5-e1bd-4a89-b030-7c287dc8cd4c"]
}, Open  ]],

Cell["\<\
Voila! So now what, is Mathematica dumb? no, it\[CloseCurlyQuote]s just that \
Mathematica does not automatically remember the identities, so in these type \
of cases where we have an identity we should be using few \
\[OpenCurlyDoubleQuote]reminders\[CloseCurlyDoubleQuote] function. 

TrigExpand[ ] \[Rule] Expands the expression into the sum of terms 
TrigFactor[ ] \[Rule] Write the expression into as products of terms 
TrigReduce[ ] \[Rule] Uses the trigonometric identities  \
\>", "Text",
 CellChangeTimes->{{3.968940126192005*^9, 3.968940129541235*^9}, {
  3.968940188882654*^9, 
  3.968940425932867*^9}},ExpressionUUID->"f3643784-47e3-435d-a7f8-\
fdd57d9a70e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TrigReduce", "[", "%", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "See", " ", "now", " ", "we", " ", "are", " ", "getting", " ", "the", " ", 
    "expected", " ", "outcome"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9689404420799103`*^9, 
  3.968940482051003*^9}},ExpressionUUID->"6f4766cb-cb51-40db-b07b-\
6051ecdac398"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9689404513864594`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"d064466a-bd55-4896-9f15-c1335bf01a14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "=", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"x", "+", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9689404921877327`*^9, 3.968940503591712*^9}, 
   3.968940536884569*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"406b7817-44bd-44cd-b910-efc020fe0d22"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"x", "+", "y"}], "]"}]], "Output",
 CellChangeTimes->{3.9689405041908817`*^9, 3.968940537360497*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"b8e1a489-0abb-42b3-a84b-5dd8ac3f353b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.968940505992951*^9, 3.968940510148183*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"cc4a3be7-db1c-4e56-a01f-85b0a35194e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "y", "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Sin", "[", "y", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.968940510470862*^9, 3.9689405390812893`*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"042445c2-42af-497e-a11f-f980f5202c97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{"y", "->", " ", 
     RowBox[{"2", "x"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.968940523982306*^9, 3.9689405651809807`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"02b9b49c-6594-46df-b7e8-f2f1151628fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.968940531876577*^9, 3.968940565541658*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d3a52ef7-295d-4ad1-9c35-461e56e882f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", "h", "]"}]], "Input",
 CellChangeTimes->{{3.9689405720134773`*^9, 3.968940575043599*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"cdde7b44-c6c7-4f22-994e-f0992f4ff618"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "-", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "3"]}]], "Output",
 CellChangeTimes->{3.9689405755476522`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"2e4f7043-586e-4feb-9d9c-c27db3373639"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigFactor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.968940581541193*^9, 3.968940588860312*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"9e043960-551d-4d1c-9f4f-fec41247c104"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.968940589235834*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"bc5a7e35-12db-4f12-8b7e-ec765017df51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.968940598136945*^9, 3.968940602899246*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"bc045df8-34ff-469f-802b-df1fc1d58aa5"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"3", " ", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.968940603273992*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"08c0e8c0-1707-4877-884d-23cbca749e83"]
}, Open  ]],

Cell["\<\
I would suggest the reader to play around with these functions to a better \
understanding to them. \
\>", "Text",
 CellChangeTimes->{{3.968940659944167*^9, 
  3.9689406871387653`*^9}},ExpressionUUID->"fa98e94c-3401-49f2-9469-\
3b7f37f95005"],

Cell["\<\
Moving forward, let\[CloseCurlyQuote]s shift our discussion to rational \
expressions and discuss the functions that might come in handy. 

Forward[ ] : Reduce the expression to product of factors 
Together[ ] : Placing all terms over a common denominator 
Apart[ ] : Exactly opposite of Together function 
Cancel[ ]: Cancels out the common factors from numerators and denominators  \
\>", "Text",
 CellChangeTimes->{{3.9689407388288937`*^9, 
  3.9689410105401573`*^9}},ExpressionUUID->"efb4a92a-371b-4e1d-aa48-\
7a793b57c8f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "3"}], "+", 
     RowBox[{"3", 
      RowBox[{"x", "^", "2"}]}], " ", "+", 
     RowBox[{"3", "x"}], " ", "+", "1"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "+", " ", 
     RowBox[{"2", 
      RowBox[{"x", "^", "2"}]}], " ", "+", "x"}], ")"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Choose", " ", "any", " ", "random", " ", "expression"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.968941019254443*^9, 3.968941079029731*^9}, {
  3.968941486634142*^9, 3.9689415228342533`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"db8ee97e-e97e-44ca-8f61-d2b2278531e4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"3", " ", "x"}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   SuperscriptBox["x", "3"]}], 
  RowBox[{"x", "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   SuperscriptBox["x", "3"]}]]], "Output",
 CellChangeTimes->{3.968941065030527*^9, 3.9689415233152113`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"990f1df0-f090-4a10-85ab-a7f525946cb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.968941081219224*^9, 3.968941096886511*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"10f4eec9-ec73-4104-873c-504b058a9e54"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["1", "x"]}]], "Output",
 CellChangeTimes->{{3.9689410846593943`*^9, 3.968941097307868*^9}, 
   3.9689415261547422`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"578afe7a-66a0-4a3d-9dbd-b733ae355d98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.968941108559105*^9, 3.968941114770863*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"7278fee3-e054-46a4-a8a3-ac8eac47a0ea"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "x"}], "x"]], "Output",
 CellChangeTimes->{3.968941115183275*^9, 3.968941531591181*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"2155faf8-832f-456f-87dc-ee16f2d78cf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cancel", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.9689411287150717`*^9, 3.968941166130849*^9}, 
   3.968941542649406*^9},ExpressionUUID->"0ead869f-7b2e-469b-a998-\
6efb604f6051"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "x"}], "x"]], "Output",
 CellChangeTimes->{3.968941132151085*^9, 3.968941536188632*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"67c3e8e5-b1d4-495f-84e6-e3605c3b6118"]
}, Open  ]],

Cell["\<\
Then comes functions that are useful for separating different parts of an \
expression, since the function\[CloseCurlyQuote]s names are self-explanatory \
I am directly going to show you how it works \
\>", "Text",
 CellChangeTimes->{{3.9689411860185013`*^9, 
  3.968941274296762*^9}},ExpressionUUID->"1f804d6c-1dc3-4370-a2e0-\
f67a270f5f53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.968941275655674*^9, 3.968941288113505*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d0efffbd-2dda-4367-9f5e-92f758a08f93"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.968941288546371*^9, 3.968941545003435*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"814029da-40c1-44aa-871b-2a80695dda89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.968941290080209*^9, 3.968941293956958*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ab2c942e-836e-499d-b8be-6b0d6a54b5c8"],

Cell[BoxData[
 RowBox[{"x", "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.968941294503777*^9, 3.968941547034258*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"2c706f98-c67d-446f-aad9-b449f3e48892"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"f", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.968941296629055*^9, 3.96894132347122*^9}, {
  3.968941551948976*^9, 3.968941552408875*^9}, {3.9689416831683197`*^9, 
  3.9689416833726997`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"f35db193-469a-4bef-9f8c-4a896a514255"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{{3.968941302639173*^9, 3.968941323843266*^9}, {
  3.968941548255734*^9, 3.968941553183676*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"4406f3a2-2e4b-46b6-8259-1d2d65c2cd42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"Numerator", "[", "f", "]"}], ",", 
    RowBox[{"x", "^", "2"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "It", " ", "will", " ", "give", " ", "the", " ", "coefficient", " ", "of", 
    " ", "the", " ", "algebraic", " ", "expression"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.968941329191391*^9, 3.968941363383759*^9}, {
  3.9689414419912577`*^9, 3.968941477236723*^9}, {3.9689415581577387`*^9, 
  3.968941558319586*^9}, {3.968941604532055*^9, 3.968941610967636*^9}, {
  3.9689416462345543`*^9, 3.9689417047400303`*^9}, {3.968941751406207*^9, 
  3.968941770643917*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"8fa1aa5d-d0da-4601-89e3-2dc96f3e6d4b"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.968941771162759*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"cd72c64f-a58b-4c87-80d4-af5f9e34eded"]
}, Open  ]],

Cell["\<\
Mathematica has also a built-in summation expression 

From now on we will do one thing, I will directly show the example of a \
Mathematica function and it\[CloseCurlyQuote]s you are confused about the \
terminology of that function then you can use ?(That function)\
\>", "Text",
 CellChangeTimes->{{3.9690199659585657`*^9, 3.9690199897188587`*^9}, {
  3.969020020892914*^9, 
  3.969020023074861*^9}},ExpressionUUID->"64ca2747-82fb-43c2-9b4b-\
1a1b2127342b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Sum"}]], "Input",
 CellChangeTimes->{{3.96901999748153*^9, 3.969020026684081*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e5f95c0f-9401-4303-ba26-c76f04748bd0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Sum",
              ButtonNote->"paclet:ref/Sum"],
             "\"paclet:ref/Sum\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates the sum \
\\!\\(\\*RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{\\\"i\\\", \
\\\"=\\\", \\\"1\\\"}], SubscriptBox[\\\"i\\\", StyleBox[\\\"max\\\", \
FontSlant -> \\\"Italic\\\"]], LimitsPositioning -> True], \\\"f\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts with \
\\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[InvisibleSpace]\\\", \
StyleBox[\\\"i\\\", \\\"TI\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates the multiple sum \\!\
\\(\\*RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{\\\"i\\\", \
\\\"=\\\", SubscriptBox[\\\"i\\\", StyleBox[\\\"min\\\", FontSlant -> \
\\\"Italic\\\"]]}], SubscriptBox[\\\"i\\\", StyleBox[\\\"max\\\", FontSlant \
-> \\\"Italic\\\"]], LimitsPositioning -> True], \
RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{\\\"j\\\", \\\"=\\\", \
SubscriptBox[\\\"j\\\", StyleBox[\\\"min\\\", FontSlant -> \
\\\"Italic\\\"]]}], SubscriptBox[\\\"j\\\", StyleBox[\\\"max\\\", FontSlant \
-> \\\"Italic\\\"]], LimitsPositioning -> True], RowBox[{\\\"\[Ellipsis]\\\", \
\\\"f\\\"}]}]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the indefinite sum \
\\!\\(\\*RowBox[{UnderscriptBox[\\\"\[Sum]\\\", \\\"i\\\"], \\\"f\\\"}]\\).\"\
\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Sum", 
                    "paclet:ref/Sum", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Sum.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Sum.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    RowBox[{"GenerateConditions", "\[Rule]", "False"}]},
                    {
                    RowBox[{"GeneratedParameters", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Regularization", "\[Rule]", "None"}]},
                    {
                    RowBox[{"VerifyConvergence", "\[Rule]", "True"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Sum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Sum",
              ButtonNote->"paclet:ref/Sum"],
             "\"paclet:ref/Sum\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates the sum \
\\!\\(\\*RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{\\\"i\\\", \
\\\"=\\\", \\\"1\\\"}], SubscriptBox[\\\"i\\\", StyleBox[\\\"max\\\", \
FontSlant -> \\\"Italic\\\"]], LimitsPositioning -> True], \\\"f\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts with \
\\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[InvisibleSpace]\\\", \
StyleBox[\\\"i\\\", \\\"TI\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates the multiple sum \\!\
\\(\\*RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{\\\"i\\\", \
\\\"=\\\", SubscriptBox[\\\"i\\\", StyleBox[\\\"min\\\", FontSlant -> \
\\\"Italic\\\"]]}], SubscriptBox[\\\"i\\\", StyleBox[\\\"max\\\", FontSlant \
-> \\\"Italic\\\"]], LimitsPositioning -> True], \
RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{\\\"j\\\", \\\"=\\\", \
SubscriptBox[\\\"j\\\", StyleBox[\\\"min\\\", FontSlant -> \
\\\"Italic\\\"]]}], SubscriptBox[\\\"j\\\", StyleBox[\\\"max\\\", FontSlant \
-> \\\"Italic\\\"]], LimitsPositioning -> True], RowBox[{\\\"\[Ellipsis]\\\", \
\\\"f\\\"}]}]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the indefinite sum \
\\!\\(\\*RowBox[{UnderscriptBox[\\\"\[Sum]\\\", \\\"i\\\"], \\\"f\\\"}]\\).\"\
\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Sum\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) evaluates \
the sum \!\(\*RowBox[{UnderoverscriptBox[\"\[Sum]\", RowBox[{\"i\", \"=\", \
\"1\"}], SubscriptBox[\"i\", StyleBox[\"max\", FontSlant -> \"Italic\"]], \
LimitsPositioning -> True], \"f\"}]\). \n\!\(\*RowBox[{\"Sum\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) starts with \
\!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \"=\", SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \n\!\(\*RowBox[{\"Sum\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \",\", StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\
\"}]\) uses steps \!\(\*RowBox[{StyleBox[\"d\", \"TI\"], \
\"\[InvisibleSpace]\", StyleBox[\"i\", \"TI\"]}]\). \n\!\(\*RowBox[{\"Sum\", \
\"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Sum\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) evaluates the multiple sum \
\!\(\*RowBox[{UnderoverscriptBox[\"\[Sum]\", RowBox[{\"i\", \"=\", \
SubscriptBox[\"i\", StyleBox[\"min\", FontSlant -> \"Italic\"]]}], \
SubscriptBox[\"i\", StyleBox[\"max\", FontSlant -> \"Italic\"]], \
LimitsPositioning -> True], RowBox[{UnderoverscriptBox[\"\[Sum]\", \
RowBox[{\"j\", \"=\", SubscriptBox[\"j\", StyleBox[\"min\", FontSlant -> \
\"Italic\"]]}], SubscriptBox[\"j\", StyleBox[\"max\", FontSlant -> \
\"Italic\"]], LimitsPositioning -> True], RowBox[{\"\[Ellipsis]\", \
\"f\"}]}]}]\). \n\!\(\*RowBox[{\"Sum\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"i\", \"TI\"]}], \"]\"}]\) gives the indefinite sum \
\!\(\*RowBox[{UnderscriptBox[\"\[Sum]\", \"i\"], \"f\"}]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Sum", "Web" -> 
      "http://reference.wolfram.com/language/ref/Sum.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, GenerateConditions -> False, 
      GeneratedParameters -> None, Method -> Automatic, Regularization -> 
      None, VerifyConvergence -> True}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`Sum"|>, False]]], "Output",
 CellChangeTimes->{3.969020027098301*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e8d2d2db-7b72-4c70-b39d-9db69069baee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"k", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"A", " ", "very", " ", "famous", " ", "summation"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.9690200405903387`*^9, 
  3.969020134417494*^9}},ExpressionUUID->"bc41904a-9c29-47e4-9ec8-\
627c6995ca43"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "2"], "6"]], "Output",
 CellChangeTimes->{{3.969020077214036*^9, 3.969020119726191*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"dfd3c615-0bd1-4c0f-8a55-f9543dc9a014"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculus in Mathematica ", "Section",
 CellChangeTimes->{{3.968941793033993*^9, 
  3.968941800723525*^9}},ExpressionUUID->"a745c318-91c9-4124-bf6d-\
ea91e325f890"],

Cell[TextData[{
 "Mathematica\[CloseCurlyQuote]s symbolic engine makes it a powerful tool for \
analytic calculations in physics.\nWe\[CloseCurlyQuote]ll explore how to use \
it for differentiation, integration, and series expansions both symbolically \
and numerically.\n\nFor differentiation, we are going to use following \
commands \nD[f,x] : ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "f"}], 
    RowBox[{"\[PartialD]", "x"}]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"5bfbb584-0e29-4fdf-bfe2-cc08406bd9e9"],
 "\nD[f,x1,x2,...] : ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "f"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox["x", "1"]}]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"7077bef6-62b8-43a3-b768-e9fdc7fb31f6"],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "f"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox["x", "2"]}]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"13751cc0-9070-40d1-9cf7-786dff8d16ee"],
 "..."
}], "Text",
 CellChangeTimes->{{3.9689418217976227`*^9, 3.9689419115224657`*^9}, {
  3.968941965452649*^9, 3.968942267225616*^9}, {3.969020014904706*^9, 
  3.969020017273841*^9}},ExpressionUUID->"9b0f7551-6c51-467d-8315-\
f87dd14ca8d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "D"}]], "Input",
 CellChangeTimes->{{3.968942271284649*^9, 3.968942273319408*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"71eaebde-d845-4340-8b5e-30c9b0ec6a94"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/D",
              ButtonNote->"paclet:ref/D"],
             "\"paclet:ref/D\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the partial derivative \
\\!\\(\\*RowBox[{\\\"\[PartialD]\\\", \\\"f\\\", \\\"/\\\", \\\"\[PartialD]\\\
\", \\\"x\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives the multiple derivative \
\\!\\(\\*RowBox[{SuperscriptBox[\\\"\[PartialD]\\\", \\\"n\\\"], \\\"f\\\", \
\\\"/\\\", \\\"\[PartialD]\\\", SuperscriptBox[\\\"x\\\", \\\"n\\\"]}]\\).\\n\
\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) gives the partial derivative \
\\!\\(\\*RowBox[{\\\"\[CenterEllipsis]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[PartialD]\\\", RowBox[{\\\"/\\\", RowBox[{\\\"\[PartialD]\\\", \
\\\"y\\\"}]}]}], \\\")\\\"}], RowBox[{\\\"(\\\", RowBox[{\\\"\[PartialD]\\\", \
RowBox[{\\\"/\\\", RowBox[{\\\"\[PartialD]\\\", \\\"x\\\"}]}]}], \\\")\\\"}], \
\\\"\[ThinSpace]\\\", \\\"f\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"D\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) gives the multiple partial derivative \\!\\(\\*RowBox[{\
\\\"\[CenterEllipsis]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{SuperscriptBox[\\\"\[PartialD]\\\", \\\"m\\\"], RowBox[{\\\"/\\\", \
RowBox[{\\\"\[PartialD]\\\", SuperscriptBox[\\\"y\\\", \\\"m\\\"]}]}]}], \
\\\")\\\"}], RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[\\\"\[PartialD]\\\", \
\\\"n\\\"], RowBox[{\\\"/\\\", RowBox[{\\\"\[PartialD]\\\", SuperscriptBox[\\\
\"x\\\", \\\"n\\\"]}]}]}], \\\")\\\"}], \\\"\[ThinSpace]\\\", \\\"f\\\"}]\\).\
\\n\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) for a scalar \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) gives the vector derivative \
\\!\\(\\*RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"\[PartialD]\\\", \
RowBox[{\\\"f\\\", \\\"/\\\", RowBox[{\\\"\[PartialD]\\\", SubscriptBox[\\\"x\
\\\", \\\"1\\\"]}]}]}], \\\",\\\", RowBox[{\\\"\[PartialD]\\\", RowBox[{\\\"f\
\\\", \\\"/\\\", RowBox[{\\\"\[PartialD]\\\", SubscriptBox[\\\"x\\\", \\\"2\\\
\"]}]}]}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\")\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", StyleBox[\\\"array\\\", \
\\\"TI\\\"], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an array derivative.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/D", 
                    "paclet:ref/D", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/D.html"], 
                    None}, "http://reference.wolfram.com/language/ref/D.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"NonConstants", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`D\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/D",
              ButtonNote->"paclet:ref/D"],
             "\"paclet:ref/D\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the partial derivative \
\\!\\(\\*RowBox[{\\\"\[PartialD]\\\", \\\"f\\\", \\\"/\\\", \\\"\[PartialD]\\\
\", \\\"x\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives the multiple derivative \
\\!\\(\\*RowBox[{SuperscriptBox[\\\"\[PartialD]\\\", \\\"n\\\"], \\\"f\\\", \
\\\"/\\\", \\\"\[PartialD]\\\", SuperscriptBox[\\\"x\\\", \\\"n\\\"]}]\\).\\n\
\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) gives the partial derivative \
\\!\\(\\*RowBox[{\\\"\[CenterEllipsis]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[PartialD]\\\", RowBox[{\\\"/\\\", RowBox[{\\\"\[PartialD]\\\", \
\\\"y\\\"}]}]}], \\\")\\\"}], RowBox[{\\\"(\\\", RowBox[{\\\"\[PartialD]\\\", \
RowBox[{\\\"/\\\", RowBox[{\\\"\[PartialD]\\\", \\\"x\\\"}]}]}], \\\")\\\"}], \
\\\"\[ThinSpace]\\\", \\\"f\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"D\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) gives the multiple partial derivative \\!\\(\\*RowBox[{\
\\\"\[CenterEllipsis]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{SuperscriptBox[\\\"\[PartialD]\\\", \\\"m\\\"], RowBox[{\\\"/\\\", \
RowBox[{\\\"\[PartialD]\\\", SuperscriptBox[\\\"y\\\", \\\"m\\\"]}]}]}], \
\\\")\\\"}], RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[\\\"\[PartialD]\\\", \
\\\"n\\\"], RowBox[{\\\"/\\\", RowBox[{\\\"\[PartialD]\\\", SuperscriptBox[\\\
\"x\\\", \\\"n\\\"]}]}]}], \\\")\\\"}], \\\"\[ThinSpace]\\\", \\\"f\\\"}]\\).\
\\n\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) for a scalar \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) gives the vector derivative \
\\!\\(\\*RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"\[PartialD]\\\", \
RowBox[{\\\"f\\\", \\\"/\\\", RowBox[{\\\"\[PartialD]\\\", SubscriptBox[\\\"x\
\\\", \\\"1\\\"]}]}]}], \\\",\\\", RowBox[{\\\"\[PartialD]\\\", RowBox[{\\\"f\
\\\", \\\"/\\\", RowBox[{\\\"\[PartialD]\\\", SubscriptBox[\\\"x\\\", \\\"2\\\
\"]}]}]}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\")\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"D\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", StyleBox[\\\"array\\\", \
\\\"TI\\\"], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an array derivative.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"D\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"x\", \"TI\"]}], \"]\"}]\) gives the partial derivative \
\!\(\*RowBox[{\"\[PartialD]\", \"f\", \"/\", \"\[PartialD]\", \"x\"}]\). \n\!\
\(\*RowBox[{\"D\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\
\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"}\"}]}], \"]\"}]\) gives the multiple derivative \
\!\(\*RowBox[{SuperscriptBox[\"\[PartialD]\", \"n\"], \"f\", \"/\", \"\
\[PartialD]\", SuperscriptBox[\"x\", \"n\"]}]\).\n\!\(\*RowBox[{\"D\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"]\"}]\) gives the partial derivative \!\(\*RowBox[{\"\[CenterEllipsis]\", \
\" \", RowBox[{\"(\", RowBox[{\"\[PartialD]\", RowBox[{\"/\", RowBox[{\"\
\[PartialD]\", \"y\"}]}]}], \")\"}], RowBox[{\"(\", RowBox[{\"\[PartialD]\", \
RowBox[{\"/\", RowBox[{\"\[PartialD]\", \"x\"}]}]}], \")\"}], \
\"\[ThinSpace]\", \"f\"}]\).\n\!\(\*RowBox[{\"D\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"m\", \
\"TI\"]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) \
gives the multiple partial derivative \!\(\*RowBox[{\"\[CenterEllipsis]\", \" \
\", RowBox[{\"(\", RowBox[{SuperscriptBox[\"\[PartialD]\", \"m\"], \
RowBox[{\"/\", RowBox[{\"\[PartialD]\", SuperscriptBox[\"y\", \"m\"]}]}]}], \
\")\"}], RowBox[{\"(\", RowBox[{SuperscriptBox[\"\[PartialD]\", \"n\"], \
RowBox[{\"/\", RowBox[{\"\[PartialD]\", SuperscriptBox[\"x\", \"n\"]}]}]}], \
\")\"}], \"\[ThinSpace]\", \"f\"}]\).\n\!\(\*RowBox[{\"D\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"}\"}]}], \"]\"}]\) for a \
scalar \!\(\*StyleBox[\"f\", \"TI\"]\) gives the vector derivative \
\!\(\*RowBox[{\"(\", RowBox[{RowBox[{\"\[PartialD]\", RowBox[{\"f\", \"/\", \
RowBox[{\"\[PartialD]\", SubscriptBox[\"x\", \"1\"]}]}]}], \",\", RowBox[{\"\
\[PartialD]\", RowBox[{\"f\", \"/\", RowBox[{\"\[PartialD]\", \
SubscriptBox[\"x\", \"2\"]}]}]}], \",\", \"\[Ellipsis]\"}], \")\"}]\). \n\!\(\
\*RowBox[{\"D\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", StyleBox[\"array\", \"TI\"], \"}\"}]}], \"]\"}]\) gives an \
array derivative.", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/D", "Web" -> 
      "http://reference.wolfram.com/language/ref/D.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {NonConstants -> {}}, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> "System`D"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9689422741290197`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"ee403ebe-271b-4a5b-8980-17ea0eff33f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.968942282128137*^9, 3.968942286330557*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"309e6c35-8485-4285-944e-51330838b4c3"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.968942286685581*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"01c37a65-941b-4bfa-a0b4-f254bc1174fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", "+", "y"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"x", " ", "y"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9689422949880943`*^9, 3.968942348309766*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"d631411f-b17c-40e1-bf51-81af9496702a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"x", " ", "y"}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "+", "y"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"x", " ", "y"}]], " ", "y", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "+", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.96894231281802*^9, 3.96894234868253*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"e44a1770-3114-4507-a913-307bde61bf2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", "+", 
      RowBox[{"x", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"Cos", "[", "x", "]"}], "]"}]}]}], "]"}], ",", "x"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Take", " ", "any", " ", "ugly", " ", "looking", " ", "function", " ", 
    "and", " ", "mathematica", " ", "will", " ", "find", " ", "the", " ", 
    "differential", " ", "for", " ", "you"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9689424992811327`*^9, 
  3.968942576333096*^9}},ExpressionUUID->"f7dbf8d6-37a7-423d-88d9-\
68aa5102d4d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"x", "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Cos", "[", "x", "]"}]], " ", "x"}]}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Cos", "[", "x", "]"}]], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Cos", "[", "x", "]"}]], " ", "x", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.968942515166545*^9, 3.968942531686417*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"68e17f30-36bc-4c15-bbf0-cfe6c999a1d6"]
}, Open  ]],

Cell["\<\
Now, we will discuss the integral functions, there two types of integral one \
is defining where we have to work in a domain (a,b) and other is indefinite. \
\
\>", "Text",
 CellChangeTimes->{{3.9689425904462433`*^9, 
  3.96894267717279*^9}},ExpressionUUID->"8b3a6371-202e-4f10-99e4-\
1f51a04f31b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Integrate"}]], "Input",
 CellChangeTimes->{{3.9689426800514517`*^9, 3.968942689511237*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"8986cd60-deb2-456f-85be-dff19b6ff957"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Integrate",
              ButtonNote->"paclet:ref/Integrate"],
             "\"paclet:ref/Integrate\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the indefinite integral \\!\\(\\*RowBox[{\
\\\"\[Integral]\\\", RowBox[{\\\"f\\\", \\\" \\\", \\\"d\\\", \\\"\
\[InvisibleSpace]\\\", \\\"x\\\"}]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives the definite integral \\!\
\\(\\*RowBox[{SubsuperscriptBox[\\\"\[Integral]\\\", SubscriptBox[\\\"x\\\", \
StyleBox[\\\"min\\\", \\\"TI\\\"]], SubscriptBox[\\\"x\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]]], \\\" \\\", RowBox[{\\\"f\\\", \\\" \\\", \
\\\"d\\\", \\\"\[InvisibleSpace]\\\", \\\"x\\\"}]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives the multiple integral \
\\!\\(\\*RowBox[{SubsuperscriptBox[\\\"\[Integral]\\\", \
SubscriptBox[\\\"x\\\", StyleBox[\\\"min\\\", \\\"TI\\\"]], \
SubscriptBox[\\\"x\\\", StyleBox[\\\"max\\\", \\\"TI\\\"]]], \
RowBox[{\\\"d\\\", \\\"\[InvisibleSpace]\\\", \\\"x\\\", \
RowBox[{SubsuperscriptBox[\\\"\[Integral]\\\", SubscriptBox[\\\"y\\\", \
StyleBox[\\\"min\\\", \\\"TI\\\"]], SubscriptBox[\\\"y\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]]], RowBox[{\\\"d\\\", \\\"\[InvisibleSpace]\
\\\", \\\"y\\\", \\\" \\\", \\\"\[Ellipsis]\\\", \\\" \\\", \\\"f\\\"}]}]}]}]\
\\). \\n\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\
\\\"}]\\) integrates over the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Integrate", 
                    "paclet:ref/Integrate", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Integrate.\
html"], None}, "http://reference.wolfram.com/language/ref/Integrate.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    RowBox[{"GenerateConditions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GeneratedParameters", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PrincipalValue", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "4", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "4", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Integrate\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Integrate",
              ButtonNote->"paclet:ref/Integrate"],
             "\"paclet:ref/Integrate\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the indefinite integral \\!\\(\\*RowBox[{\
\\\"\[Integral]\\\", RowBox[{\\\"f\\\", \\\" \\\", \\\"d\\\", \\\"\
\[InvisibleSpace]\\\", \\\"x\\\"}]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives the definite integral \\!\
\\(\\*RowBox[{SubsuperscriptBox[\\\"\[Integral]\\\", SubscriptBox[\\\"x\\\", \
StyleBox[\\\"min\\\", \\\"TI\\\"]], SubscriptBox[\\\"x\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]]], \\\" \\\", RowBox[{\\\"f\\\", \\\" \\\", \
\\\"d\\\", \\\"\[InvisibleSpace]\\\", \\\"x\\\"}]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives the multiple integral \
\\!\\(\\*RowBox[{SubsuperscriptBox[\\\"\[Integral]\\\", \
SubscriptBox[\\\"x\\\", StyleBox[\\\"min\\\", \\\"TI\\\"]], \
SubscriptBox[\\\"x\\\", StyleBox[\\\"max\\\", \\\"TI\\\"]]], \
RowBox[{\\\"d\\\", \\\"\[InvisibleSpace]\\\", \\\"x\\\", \
RowBox[{SubsuperscriptBox[\\\"\[Integral]\\\", SubscriptBox[\\\"y\\\", \
StyleBox[\\\"min\\\", \\\"TI\\\"]], SubscriptBox[\\\"y\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]]], RowBox[{\\\"d\\\", \\\"\[InvisibleSpace]\
\\\", \\\"y\\\", \\\" \\\", \\\"\[Ellipsis]\\\", \\\" \\\", \\\"f\\\"}]}]}]}]\
\\). \\n\\!\\(\\*RowBox[{\\\"Integrate\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\
\\\"}]\\) integrates over the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Integrate\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\
\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) gives the indefinite integral \
\!\(\*RowBox[{\"\[Integral]\", RowBox[{\"f\", \" \", \"d\", \"\
\[InvisibleSpace]\", \"x\"}]}]\). \n\!\(\*RowBox[{\"Integrate\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) gives the definite \
integral \!\(\*RowBox[{SubsuperscriptBox[\"\[Integral]\", SubscriptBox[\"x\", \
StyleBox[\"min\", \"TI\"]], SubscriptBox[\"x\", StyleBox[\"max\", \"TI\"]]], \
\" \", RowBox[{\"f\", \" \", \"d\", \"\[InvisibleSpace]\", \"x\"}]}]\). \n\
\!\(\*RowBox[{\"Integrate\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) gives the multiple \
integral \!\(\*RowBox[{SubsuperscriptBox[\"\[Integral]\", SubscriptBox[\"x\", \
StyleBox[\"min\", \"TI\"]], SubscriptBox[\"x\", StyleBox[\"max\", \"TI\"]]], \
RowBox[{\"d\", \"\[InvisibleSpace]\", \"x\", RowBox[{SubsuperscriptBox[\"\
\[Integral]\", SubscriptBox[\"y\", StyleBox[\"min\", \"TI\"]], \
SubscriptBox[\"y\", StyleBox[\"max\", \"TI\"]]], RowBox[{\"d\", \"\
\[InvisibleSpace]\", \"y\", \" \", \"\[Ellipsis]\", \" \", \"f\"}]}]}]}]\). \n\
\!\(\*RowBox[{\"Integrate\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \
\"\[Element]\", StyleBox[\"reg\", \"TI\"]}]}], \"]\"}]\) integrates over the \
geometric region \!\(\*StyleBox[\"reg\", \"TI\"]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Integrate", "Web" -> 
      "http://reference.wolfram.com/language/ref/Integrate.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, GenerateConditions -> Automatic, 
      GeneratedParameters -> None, PrincipalValue -> False}, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`Integrate"|>, False]]], "Output",
 CellChangeTimes->{3.968942689899207*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"f9fce877-0442-456e-8f1a-eadff24b4455"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "=", " ", 
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", 
   RowBox[{"Log", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9689426932511473`*^9, 3.968942719188106*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"182b8f43-6ab9-4958-9d45-743cd2707f98"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], " ", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.9689427032845097`*^9, 3.9689427195520573`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"0e4017d8-482a-4668-95c6-51ebdefdfa37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"f", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.968942705551489*^9, 3.968942709860627*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"928d5f29-083f-4d11-b96e-f49d15559a73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["x", "3"], "9"]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.968942710320112*^9, 3.96894272113039*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"1d32d120-115e-4493-8fe2-4f1c8886bb18"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s integrate a Gaussian function  ", "Text",
 CellChangeTimes->{{3.968942734080413*^9, 3.9689427520985737`*^9}, {
  3.968942792548894*^9, 
  3.968942793015304*^9}},ExpressionUUID->"5f2e2ef7-db56-4036-95b9-\
020bba8a2f9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968942753736919*^9, 3.96894277762879*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"20de9b97-2fce-4e80-80d2-d602c22790d1"],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.96894278581171*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"caed8ac5-726c-4066-9d0f-b6f44d6ca3df"]
}, Open  ]],

Cell["It is also familiar to some other very famous integrals ", "Text",
 CellChangeTimes->{{3.968942827313861*^9, 
  3.968942844798297*^9}},ExpressionUUID->"25d709eb-4d4f-4b3b-ba7d-\
eddac7647636"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{"k", " ", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}]}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.968942846500004*^9, 3.968942864406704*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"915e6df3-3877-401c-ac68-61a22afbb61f"],

Cell[BoxData[
 RowBox[{"EllipticE", "[", 
  RowBox[{"x", ",", "k"}], "]"}]], "Output",
 CellChangeTimes->{3.968942864967314*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"b489d967-0980-42a1-a8c8-e1253ba4e30a"]
}, Open  ]],

Cell["\<\
But but but....it is not a magic wand so obviously it cannot do everything \
analytically \
\>", "Text",
 CellChangeTimes->{{3.968942872597024*^9, 
  3.968942921325575*^9}},ExpressionUUID->"0fbc72e5-4290-4d58-9067-\
4c4fde242930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "^", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968942926139697*^9, 3.968942942476139*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"45e8e911-e2b7-487a-a4a7-b283ed2e8e24"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SuperscriptBox["x", "x"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{{3.9689429322038517`*^9, 3.968942942898616*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"a4f46e6a-d151-43f7-a70d-bf8f8422d96c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.968942962282236*^9, 3.968942965628587*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"274f0cfd-ff05-410b-9e80-96163b5d4125"],

Cell[BoxData["0.783430510712135`"], "Output",
 CellChangeTimes->{3.968942966019021*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"6e3f49e6-c0a9-4bc7-b662-2391dfd8fa7e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["User defined functions", "Section",
 CellChangeTimes->{{3.969019596154375*^9, 
  3.969019620869081*^9}},ExpressionUUID->"8f022b1d-9cb6-47db-98e7-\
73e35af2cb12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"x", "+", "1", " ", 
   RowBox[{"(*", 
    RowBox[{
    "We", " ", "can", " ", "define", " ", "functions", " ", "in", " ", "this",
      " ", "form", " ", 
     RowBox[{"f", "[", "x_", "]"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.969019629534931*^9, 3.969019663789513*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c50985c3-d8e3-4dd5-9e14-0efc09b11494"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.969019673288987*^9, 3.969019674631504*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7ae5f86c-5e0e-442e-a28a-b6ca6d4ef733"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.969019675044075*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"3b0104e0-a6bf-47ff-b0a7-d9e4636bd789"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s do some complicated calculations using this!", \
"Text",
 CellChangeTimes->{{3.9690196849667473`*^9, 
  3.969019706926938*^9}},ExpressionUUID->"925b8408-ff25-440c-be7b-\
8ec0c33abc13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], 
    RowBox[{"Cos", "[", "x", "]"}]}], " ", "+", " ", 
   RowBox[{"x", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.96901970858143*^9, 3.969019734231574*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"19885bde-1c4b-4cea-805d-ef696a9c998a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.9690197387475758`*^9, 3.969019746849662*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"07f4a20e-97e9-4199-a483-c5cb1d54b539"],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellChangeTimes->{{3.969019742427423*^9, 3.9690197475441637`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"2e0ceaf2-d8b7-4305-916c-9014525d8a56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"Exp", "[", "y", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.969019758326078*^9, 3.969019767288434*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1df8877a-8f8e-49ba-b7db-db1b37172069"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "y"}]], " ", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["\[ExponentialE]", "y"], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "y"], " ", 
   RowBox[{"Sin", "[", 
    SuperscriptBox["\[ExponentialE]", "y"], "]"}]}]}]], "Output",
 CellChangeTimes->{3.969019767657387*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"02d1deb2-1b94-4b7b-95dc-ab4cfabfb914"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Exp", "[", "y", "]"}], "]"}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.969019770897542*^9, 3.969019791834667*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d97d0bc5-6c35-42b2-ae62-e81454d55f4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "y"}]], " ", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["\[ExponentialE]", "y"], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "y"], " ", 
   RowBox[{"Sin", "[", 
    SuperscriptBox["\[ExponentialE]", "y"], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"3", " ", "y"}]], " ", 
   RowBox[{"Sin", "[", 
    SuperscriptBox["\[ExponentialE]", "y"], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.96901978324433*^9, 3.9690197922382317`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"d6f91e40-3544-408c-87d7-1635cd3d851f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Exp", "[", "y", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.96901981427931*^9, 3.969019873192329*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cf2fe5d5-8b09-4c8f-a26c-a86c3b510863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Sin", "[", "1", "]"}]}], "+", 
  RowBox[{"\[ExponentialE]", " ", 
   RowBox[{"Sin", "[", "\[ExponentialE]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.969019835417186*^9, 3.969019873676077*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"b052c7dd-a975-4022-ab1b-4d6f9c5550bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Mathematics ", "Section",
 CellChangeTimes->{{3.969020563318247*^9, 
  3.9690205708436737`*^9}},ExpressionUUID->"810711e8-4849-419b-8548-\
c1a61fc17b65"],

Cell[TextData[{
 "This is one of the most important things researchers use, the reason is you \
cannot solve every equation ",
 StyleBox["analytically",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " that\[CloseCurlyQuote]s where this method comes in handy \n\nFor this part \
we are going to explore Solve and NSolve "
}], "Text",
 CellChangeTimes->{{3.969020575368414*^9, 3.96902070255927*^9}, {
  3.969021095023532*^9, 
  3.969021105613401*^9}},ExpressionUUID->"e3e91f11-f94b-4005-894f-\
915ff3f80fcc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Solve"}]], "Input",
 CellChangeTimes->{{3.969020706844982*^9, 3.969020709618453*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"12869dc0-b7e9-41e0-bede-cd02f3351920"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Solve",
              ButtonNote->"paclet:ref/Solve"],
             "\"paclet:ref/Solve\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Solve\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vars\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) attempts to solve the system \\!\\(\\*StyleBox[\
\\\"expr\\\", \\\"TI\\\"]\\) of equations or inequalities for the variables \
\\!\\(\\*StyleBox[\\\"vars\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Solve\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"vars\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\
\"]}], \\\"]\\\"}]\\) solves over the domain \\!\\(\\*StyleBox[\\\"dom\\\", \
\\\"TI\\\"]\\). Common choices of \\!\\(\\*StyleBox[\\\"dom\\\", \
\\\"TI\\\"]\\) are Reals, Integers, and Complexes.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Solve", 
                    "paclet:ref/Solve", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Solve.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Solve.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    RowBox[{"Cubics", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GeneratedParameters", "\[Rule]", "C"}]},
                    {
                    RowBox[{"InverseFunctions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxExtraConditions", "\[Rule]", "0"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Modulus", "\[Rule]", "0"}]},
                    {
                    RowBox[{"Quartics", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VerifySolutions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"WorkingPrecision", "\[Rule]", "\[Infinity]"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "10", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "10", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Solve\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Solve",
              ButtonNote->"paclet:ref/Solve"],
             "\"paclet:ref/Solve\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Solve\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vars\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) attempts to solve the system \\!\\(\\*StyleBox[\
\\\"expr\\\", \\\"TI\\\"]\\) of equations or inequalities for the variables \
\\!\\(\\*StyleBox[\\\"vars\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Solve\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"vars\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dom\\\", \\\"TI\\\
\"]}], \\\"]\\\"}]\\) solves over the domain \\!\\(\\*StyleBox[\\\"dom\\\", \
\\\"TI\\\"]\\). Common choices of \\!\\(\\*StyleBox[\\\"dom\\\", \
\\\"TI\\\"]\\) are Reals, Integers, and Complexes.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Solve\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"vars\", \"TI\"]}], \"]\"}]\) attempts to solve the system \
\!\(\*StyleBox[\"expr\", \"TI\"]\) of equations or inequalities for the \
variables \!\(\*StyleBox[\"vars\", \"TI\"]\). \n\!\(\*RowBox[{\"Solve\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"vars\", \"TI\"], \
\",\", StyleBox[\"dom\", \"TI\"]}], \"]\"}]\) solves over the domain \
\!\(\*StyleBox[\"dom\", \"TI\"]\). Common choices of \!\(\*StyleBox[\"dom\", \
\"TI\"]\) are Reals, Integers, and Complexes.", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Solve", "Web" -> 
      "http://reference.wolfram.com/language/ref/Solve.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, Cubics -> Automatic, GeneratedParameters -> 
      C, InverseFunctions -> Automatic, MaxExtraConditions -> 0, Method -> 
      Automatic, Modulus -> 0, Quartics -> Automatic, VerifySolutions -> 
      Automatic, WorkingPrecision -> DirectedInfinity[1]}, 
    "Attributes" -> {Protected}, "FullName" -> "System`Solve"|>, 
   False]]], "Output",
 CellChangeTimes->{3.969020710019483*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"435f1ce9-160c-41f9-b1de-90fa5b4abe56"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s start with one of the most fundamental equation we \
know  ",
 StyleBox["The Quadratic Equation",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.969020717020143*^9, 
  3.969020805622575*^9}},ExpressionUUID->"985a55ed-8051-4704-8dfa-\
d7bc7207e0d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", " ", "=", " ", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
   RowBox[{"b", " ", "x"}], " ", "+", " ", "c", " "}]}]], "Input",
 CellChangeTimes->{{3.969020808240472*^9, 3.969020833693932*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"45537f44-ab6c-4145-bc20-6913918c9435"],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.9690208340461473`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"066bd26f-9e30-41c3-bd30-d293c25d79eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"expr", " ", "==", " ", "0"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.969020835946783*^9, 3.969020845035776*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"5bb35c53-f72c-40fc-8b16-e31ee1833fe2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.969020845553026*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"6072097f-7f89-4b4b-9294-04b64f177be9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", " ", "=", " ", 
  RowBox[{"1", "+", "x", "+", 
   RowBox[{"2", 
    RowBox[{"x", "^", "2"}]}], " ", "+", 
   RowBox[{"2", 
    RowBox[{"x", "^", "3"}]}], " ", "+", 
   RowBox[{"x", "^", "4"}]}]}]], "Input",
 CellChangeTimes->{{3.9690209092878447`*^9, 3.9690209561778917`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"54eb736d-fac2-4ab7-b072-72a91f2ac5ae"],

Cell[BoxData[
 RowBox[{"1", "+", "x", "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  SuperscriptBox["x", "4"]}]], "Output",
 CellChangeTimes->{{3.969020943852579*^9, 3.969020957655439*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"9e10bfe3-504a-47a0-a75b-fb3a42516d2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"expr", "==", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.969020925421132*^9, 3.969020931078985*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d5f4897a-7f1a-42d3-a120-79852594eb53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.969020931451047*^9, 3.9690209592310047`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"ed7c48c1-366b-4d7a-9f48-2cc5237ff870"]
}, Open  ]],

Cell["And to get a numerical answer, we will use NSolve ", "Text",
 CellChangeTimes->{{3.969020963900865*^9, 
  3.969020977024754*^9}},ExpressionUUID->"40e8b2b7-8ece-4afe-b538-\
c911ce877bde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{"expr", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9690209937524223`*^9, 3.9690209992288103`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"fca85251-8ce8-4329-aa07-88514f27a55a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1.0706959868730448`"}], "-", 
      RowBox[{"0.7587449567759899`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1.0706959868730448`"}], "+", 
      RowBox[{"0.7587449567759899`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.07069598687304492`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.7587449567759899`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.07069598687304492`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.7587449567759899`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.969020999567196*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"0a6ede97-3cd7-4003-aad7-e0a304f4634b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.9690210707919617`*^9, 3.969021085740271*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"bd3707a8-09fe-40ef-bee0-329d2146d4b9"],

Cell["Let\[CloseCurlyQuote]s make things a bit interesting ", "Text",
 CellChangeTimes->{{3.9690211254856462`*^9, 3.96902113944645*^9}, {
  3.9690211788886433`*^9, 
  3.969021195309945*^9}},ExpressionUUID->"94e5efba-8081-4596-872a-\
4691cd195462"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.969021203225359*^9, 3.9690212259554996`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"5e9a4550-8b5a-4532-81a9-bb6c7992d01e"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve.\"", 2,
    54, 10, 17300075516979563276, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.969021226472172*^9},
 CellLabel->
  "During evaluation of \
In[54]:=",ExpressionUUID->"d5bc3d89-b463-4943-bd36-adc2e8acee2d"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.9690212264763737`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"8e0a7733-1028-488a-804b-8d0d7001599c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.969021235935758*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"75d88101-2e37-4137-98b5-3c76d0a45d13"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "nsmet", 
   "\"This system cannot be solved with the methods available to NSolve.\"", 
   2, 55, 11, 17300075516979563276, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.969021236414494*^9},
 CellLabel->
  "During evaluation of \
In[55]:=",ExpressionUUID->"0cfc5d35-b20c-49c0-a182-6acf50864c34"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.9690212364213247`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"63ab751e-8b67-4471-9f2d-45b8e998559f"]
}, Open  ]],

Cell[TextData[{
 "You might be thinking what just happened! Why it can\[CloseCurlyQuote]t \
solve a simple equation, the reason is it is not algebraic but transcendental \
equation, for these kind of expressions we have ",
 StyleBox["FindRoot",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " function in Mathematica "
}], "Text",
 CellChangeTimes->{{3.9690212444046783`*^9, 
  3.969021379445511*^9}},ExpressionUUID->"9843f0b1-ecb1-47d1-976d-\
d5c51ea14130"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FindRoot"}]], "Input",
 CellChangeTimes->{{3.9690219934354057`*^9, 3.969021998865156*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"677cdc12-70dd-430d-841a-d89e9a4d4910"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FindRoot",
              ButtonNote->"paclet:ref/FindRoot"],
             "\"paclet:ref/FindRoot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a numerical root \
of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), starting from the point \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}]\\).\\n\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"lhs\\\", \\\"TI\\\"], \\\"==\\\", \
StyleBox[\\\"rhs\\\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a numerical \
solution to the equation \\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \\\"TI\\\"], \
\\\"==\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a simultaneous \
numerical root of all the \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"eqn\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"eqn\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a numerical \
solution to the simultaneous equations \\!\\(\\*SubscriptBox[StyleBox[\\\"eqn\
\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FindRoot", 
                    "paclet:ref/FindRoot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FindRoot.html"]\
, None}, "http://reference.wolfram.com/language/ref/FindRoot.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Compiled", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DampingFactor", "\[Rule]", "1"}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "True"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Jacobian", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxIterations", "\[Rule]", "100"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"StepMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "11", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "11", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindRoot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FindRoot",
              ButtonNote->"paclet:ref/FindRoot"],
             "\"paclet:ref/FindRoot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a numerical root \
of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), starting from the point \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}]\\).\\n\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"lhs\\\", \\\"TI\\\"], \\\"==\\\", \
StyleBox[\\\"rhs\\\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a numerical \
solution to the equation \\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \\\"TI\\\"], \
\\\"==\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a simultaneous \
numerical root of all the \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindRoot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"eqn\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"eqn\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) searches for a numerical \
solution to the simultaneous equations \\!\\(\\*SubscriptBox[StyleBox[\\\"eqn\
\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FindRoot\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]]}], \"}\"}]}], \
\"]\"}]\) searches for a numerical root of \!\(\*StyleBox[\"f\", \"TI\"]\), \
starting from the point \!\(\*RowBox[{StyleBox[\"x\", \"TI\"], \"=\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]]}]\).\n\
\!\(\*RowBox[{\"FindRoot\", \"[\", RowBox[{RowBox[{StyleBox[\"lhs\", \"TI\"], \
\"==\", StyleBox[\"rhs\", \"TI\"]}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"0\", \"TR\"]]}], \"}\"}]}], \"]\"}]\) searches for a numerical \
solution to the equation \!\(\*RowBox[{StyleBox[\"lhs\", \"TI\"], \"==\", \
StyleBox[\"rhs\", \"TI\"]}]\). \n\!\(\*RowBox[{\"FindRoot\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"x\", \
\"TI\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \
\"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"0\", \"TR\"]]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
searches for a simultaneous numerical root of all the \
\!\(\*SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\!\(\
\*RowBox[{\"FindRoot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"eqn\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\
\", SubscriptBox[StyleBox[\"eqn\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"0\", \"TR\"]]}], \"}\"}], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) searches for \
a numerical solution to the simultaneous equations \
\!\(\*SubscriptBox[StyleBox[\"eqn\", \"TI\"], StyleBox[\"i\", \"TI\"]]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/FindRoot", "Web" -> 
      "http://reference.wolfram.com/language/ref/FindRoot.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AccuracyGoal -> Automatic, Compiled -> Automatic, DampingFactor -> 1, 
      Evaluated -> True, EvaluationMonitor -> None, Jacobian -> Automatic, 
      MaxIterations -> 100, Method -> Automatic, PrecisionGoal -> Automatic, 
      StepMonitor -> None, WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected}, "FullName" -> "System`FindRoot"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9690219993493423`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"06b8d2e4-631a-4da8-b871-86c87b75fd03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969021381872952*^9, 3.969021415767572*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"dd6ef867-075c-4a52-ab2d-957fe938a9fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.7390851332151607`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9690213949081593`*^9, 3.9690214167732573`*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"800a9ef1-0fcc-43a7-a16a-f799837510fc"]
}, Open  ]],

Cell["\<\
But while using this method one need a prior estimate of the location of the \
root. It mostly uses Newton\[CloseCurlyQuote]s method for finding root

In undesirable circumstances, Newton\[CloseCurlyQuote]s method may take a \
large number of successive calculations to get to the root, or it may never \
reach the root. The default number of successive approximations for Mathematica
is 15. If after 15 trials Mathematica does not get close enough to the root, \
it gives a warning and prints out the latest approximation. So, in using \
FindRoot, it is a good idea to have a rough estimate of the root and be
ready to try a different estimate if the first one does not yield results. In \
case of multiple roots, we can specify the interval in which the root may \
lie. This is done by using the following\
\>", "Text",
 CellChangeTimes->{{3.9690214812264233`*^9, 3.969021529638015*^9}, {
  3.969021664196683*^9, 
  3.969021702228937*^9}},ExpressionUUID->"cc1c5511-d1d0-4214-a272-\
47a94636de58"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting using Mathematica ", "Section",
 CellChangeTimes->{{3.9690224118264837`*^9, 
  3.969022419466312*^9}},ExpressionUUID->"272b28be-f9b4-4c68-94e4-\
2c698c2f17f8"],

Cell["\<\
The results of numerical mathematics-and many symbolic manipulations as \
well-are best conveyed in the form of graphics. Mathematica has a very \
powerful graphics capability suitable for simple two-dimensional plots as \
well as complex, multicolored three-dimensional images.\
\>", "Text",
 CellChangeTimes->{{3.969022436950729*^9, 
  3.9690224565181417`*^9}},ExpressionUUID->"5630f673-40f2-4621-827c-\
a652d61ffa98"],

Cell[CellGroupData[{

Cell["Simple Plots ", "Subsection",
 CellChangeTimes->{{3.9690224735022593`*^9, 
  3.96902248649827*^9}},ExpressionUUID->"b0cd9b69-4b32-471b-be32-\
f2b4059c23dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Plot"}]], "Input",
 CellChangeTimes->{{3.969022487870285*^9, 3.969022490903133*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"6e4c0b21-4611-4c6d-8ed0-c8b79a1ae919"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Plot",
              ButtonNote->"paclet:ref/Plot"],
             "\"paclet:ref/Plot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"], \\\",\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the \
symbolic wrapper \\!\\(\\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\
\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) takes the variable \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to be in the geometric region \\!\
\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Plot", 
                    "paclet:ref/Plot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Plot.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Plot.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExclusionsStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Full", ",", "Automatic"}], "}"}]}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "64", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "64", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Plot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Plot",
              ButtonNote->"paclet:ref/Plot"],
             "\"paclet:ref/Plot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"], \\\",\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the \
symbolic wrapper \\!\\(\\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\
\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) takes the variable \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to be in the geometric region \\!\
\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Plot\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) generates a plot of \!\(\*StyleBox[\"f\", \"TI\"]\) as a \
function of \!\(\*StyleBox[\"x\", \"TI\"]\) from \!\(\*SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Plot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) plots several functions \!\
\(\*SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Plot\", \"[\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"\
\[Ellipsis]\", \"TR\"], \",\", RowBox[{StyleBox[\"w\", \"TI\"], \"[\", \
SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"]\"}], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"]\"}]\) plots \!\(\*SubscriptBox[StyleBox[\"f\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\) with features defined by the symbolic \
wrapper \!\(\*StyleBox[\"w\", \"TI\"]\).\n\!\(\*RowBox[{\"Plot\", \"[\", \
RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{RowBox[{\"{\", \
StyleBox[\"x\", \"TI\"], \"}\"}], \"\[Element]\", StyleBox[\"reg\", \
\"TI\"]}]}], \"]\"}]\) takes the variable \!\(\*StyleBox[\"x\", \"TI\"]\) to \
be in the geometric region \!\(\*StyleBox[\"reg\", \"TI\"]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Plot", "Web" -> 
      "http://reference.wolfram.com/language/ref/Plot.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> 
      None, BaselinePosition -> Automatic, BaseStyle -> {}, ClippingStyle -> 
      None, ColorFunction -> Automatic, ColorFunctionScaling -> True, 
      ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> 
      Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, 
      ExclusionsStyle -> None, Filling -> None, FillingStyle -> Automatic, 
      FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, 
      FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, 
      GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., 
      ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
      LabelingSize -> Automatic, LabelStyle -> {}, MaxRecursion -> Automatic, 
      Mesh -> None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, 
      PlotLabel -> None, PlotLabels -> None, PlotLayout -> Automatic, 
      PlotLegends -> None, PlotPoints -> Automatic, 
      PlotRange -> {Full, Automatic}, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RegionFunction -> (True& ), RotateLabel -> True, 
      ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}, WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`Plot"|>, False]]], "Output",
 CellChangeTimes->{3.9690224912370787`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"e937a2f0-ebb2-49a0-910a-a3d0056d66a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "x"}], "/", "10"}], "]"}], 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.969022497982298*^9, 3.9690225156992493`*^9}, {
  3.969022619078714*^9, 3.96902265029777*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"e7d86969-48b4-4fbe-87db-031d62cfe2bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", " ", 
      RowBox[{"9", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"If", " ", "you", " ", 
    RowBox[{"can", "'"}], "t", " ", "see", " ", "your", " ", "plot", " ", 
    "then", " ", "use", " ", "this", " ", "PlotRange", " ", "function"}], " ",
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.969022518128366*^9, 3.96902255149964*^9}, {
  3.969022585433135*^9, 3.9690226119110527`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"d4ca1e97-6bc4-4401-b4c7-54bdc281c869"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3skCfYT1KUpZLXJ7RJ6ixMiCTIi89MeFWkRjWOFfkiwLIcYNOZWmdYi7t7M4
s1gWVBcy7lzdW480l7ek3w3Jgp7BPh4/nwb0oJvixjcqC4/3MJPmkxtQddGj
6rBJWWA8dKujqr0BnfRlt3q1IAsDHftPpks0IitW8TeP6ORAZ9F+5/WKRvRY
Sp/htqQckAPPHGYa+oKadrGfmZeVAx+jgzJDf78gjp8dsTcOyMEH89h/vCJN
KDL3opatOhU3/bedfbEJpWvfcbHQl4MRcY1Wr44mtCyhVvHtlBz4Ssu9ufKr
Cakzb7GZnZEDznfhJYm7mlFFS8BnI0s5yFae5ziNmlHnhYjho45y0PX+4TWR
D81oH7p4oNJZDsa+7XWjKWxGl8TEvNE9OVg2GpCAlmY0NZXCp+krB/4DelV9
681Ioem2XUGAHHzSPHFTlbUFOWeo5pKeyoH7uJzET9EWtHUXGx14LQf7T+tf
9DjeguB8wPvUcDnwZtqZaWDeggK0TszKvKP2/5lW6Hm9BbHt6AiUiJeDh+yP
cleetqAzE286PyTLgbD/kdBDb1tQRIOlmEiaHPza85duLKkFib2aKNuXLweX
d4o8O1HVgqLWRj18i+VgcKtRorG1Be25PKw6WS4HdvptKen9LSi4dmjxZJUc
6JVmy6xNtCBmxYG03Do5wExzKXGLLehhWO91gSY5aNOZ0cndovLf7iY8bJOD
S8fZ6GQYWtHPL1/fG/XKQfKXv6ZobyuyV2k9nz9I1evpQeFhoVY0HNm0R2hE
DhwX7t+flGhFFnSNX/0nqPVvKp6byLWizut1L2Zm5MCLbdtNjNiKTn2tPnH6
lxxED29bn1NrRXXqlQyFy3LQ9PK+96JmK4JYXCG8Lgd777IuLhxuRcVMZd6P
tuVAP0nhl5lOKyI5FWvM0chDYI1SiuixVpTWXfDbhEEeGop1L5zWbUWSh/Oy
inbKwyMXL/UpvVYUm5B9S5RNHgwDM3zGT7QiftZMmcdc8hDdGuZwQr8Vhbim
jc/vlYcNmvwjPFTMMvD5g6mAPBwQt9M7Tt0feCT5YomIPPCxNFR8p/anSUnY
JyYhD2V1XzZ+UM/34IrreiItDysrYof0j7SiJY/Y/37Jy8O7PXr9AtCKHIbf
nzxLlIf77W6SZ7Va0YTeu51lqvLQqvzZZYPciqwyI2rENeWhvO4tP6NKK+rj
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
Kc+fc98CMvgbqokVi2JtDc56R77Z/wFnlI7Z
       "]]},
     Annotation[#, "Charting`Private`Tag$128932#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.969022538987588*^9, 3.9690225518459673`*^9}, {
  3.969022612324522*^9, 3.969022654741684*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"dbd69242-d953-45c3-b9a9-bc2261c1b0d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parametric Plots ", "Subsection",
 CellChangeTimes->{{3.9690227636548367`*^9, 
  3.969022770805848*^9}},ExpressionUUID->"11a176d1-d527-43ff-852d-\
eef157434fe5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ParametricPlot"}]], "Text", "Input",
 CellChangeTimes->{{3.968942780983519*^9, 3.968942783753457*^9}, {
  3.9689428246428347`*^9, 3.9689428249858723`*^9}, {3.969022793106488*^9, 
  3.969022796327326*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"499b836c-9f8c-479f-a738-1cdb0c792588"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ParametricPlot",
              ButtonNote->"paclet:ref/ParametricPlot"],
             "\"paclet:ref/ParametricPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"y\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a parametric plot of a curve with \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) \
and \\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates \
\\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \\\
\"TI\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]\\) as a function of \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several parametric curves. \\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots a \
parametric region. \\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several parametric regions. \\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\
\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\
\\\"], \\\",\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}], \\\
\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) plots the curve \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\
\"], StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) with \
features defined by the symbolic wrapper \\!\\(\\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes parameters \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ParametricPlot", "paclet:ref/ParametricPlot", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ParametricPlot.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/ParametricPlot.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"BoundaryStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExclusionsStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TextureCoordinateFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TextureCoordinateScaling", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "62", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "62", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ParametricPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ParametricPlot",
              ButtonNote->"paclet:ref/ParametricPlot"],
             "\"paclet:ref/ParametricPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"y\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a parametric plot of a curve with \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) \
and \\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates \
\\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \\\
\"TI\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]\\) as a function of \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several parametric curves. \\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots a \
parametric region. \\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several parametric regions. \\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\
\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\
\\\"], \\\",\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}], \\\
\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) plots the curve \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\
\"], StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) with \
features defined by the symbolic wrapper \\!\\(\\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes parameters \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ParametricPlot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \"TI\"]]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) generates a parametric plot of a curve with \
\!\(\*StyleBox[\"x\", \"TI\"]\) and \!\(\*StyleBox[\"y\", \"TI\"]\) \
coordinates \!\(\*SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \
\"TI\"]]\) and \!\(\*SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \
\"TI\"]]\) as a function of \!\(\*StyleBox[\"u\", \"TI\"]\). \n\!\(\*RowBox[{\
\"ParametricPlot\", \"[\", RowBox[{RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \"TI\"]]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], \
StyleBox[\"x\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"g\", \"TI\"], \
StyleBox[\"y\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) plots several parametric curves. \n\
\!\(\*RowBox[{\"ParametricPlot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \"TI\"]]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"v\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) plots a parametric region. \n\
\!\(\*RowBox[{\"ParametricPlot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"x\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"y\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"y\", \"TI\"]]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\
\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", SubscriptBox[StyleBox[\"u\", \
\"TI\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"u\", \"TI\
\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"v\", \"TI\"], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) plots several parametric \
regions. \n\!\(\*RowBox[{\"ParametricPlot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{StyleBox[\"w\", \
\"TI\"], \"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"x\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"y\", \"TI\"]]}], \"}\"}], \"]\"}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) plots the curve \!\(\*RowBox[{\
\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \
\"TI\"]]}], \"}\"}]\) with features defined by the symbolic wrapper \
\!\(\*StyleBox[\"w\", \"TI\"]\).\n\!\(\*RowBox[{\"ParametricPlot\", \"[\", \
RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"u\", \"TI\"], \",\", StyleBox[\"v\", \"TI\"]}], \"}\"}], \
\"\[Element]\", StyleBox[\"reg\", \"TI\"]}]}], \"]\"}]\) takes parameters \
\!\(\*RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", StyleBox[\"v\", \
\"TI\"]}], \"}\"}]\) to be in the geometric region \!\(\*StyleBox[\"reg\", \
\"TI\"]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/ParametricPlot", "Web" -> 
      "http://reference.wolfram.com/language/ref/ParametricPlot.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> True, 
      AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> 
      None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> 
      Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, 
      ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> 
      Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, 
      ExclusionsStyle -> None, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxRecursion -> Automatic, Mesh -> 
      Automatic, MeshFunctions -> Automatic, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, 
      PlotLabel -> None, PlotLabels -> None, PlotLegends -> None, PlotPoints -> 
      Automatic, PlotRange -> Automatic, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RegionFunction -> (True& ), RotateLabel -> True, 
      TargetUnits -> Automatic, TextureCoordinateFunction -> Automatic, 
      TextureCoordinateScaling -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}, WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`ParametricPlot"|>, False]]], "Output",
 CellChangeTimes->{3.969022796820313*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"6aa6e83a-c223-4150-95b2-ba88b5410955"]
}, Open  ]],

Cell["\<\
One of the most basic parametric equation we know is of circle. 
a point can be described as (Cos[t], Sin[t])\
\>", "Text",
 CellChangeTimes->{{3.969022859306199*^9, 
  3.96902292847435*^9}},ExpressionUUID->"7d6ea3c3-c109-421c-bb1a-\
5950632b9dea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9690229329664707`*^9, 3.969022950005258*^9}, {
  3.969023007195565*^9, 3.969023013679885*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ad919824-f34f-4dfe-ae53-5037ba6183e0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
AbSeZ7Y=
       "]]},
     Annotation[#, "Charting`Private`Tag$133115#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.9999998831351729, 1.}, {-0.9999998592812047, 
   0.9999998782744886}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.969022950710112*^9, 3.9690230142105207`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"8a9dcaed-1a1d-4eea-866b-f9c9a80be5ad"]
}, Open  ]],

Cell["\<\
We can play around the parametric functions and we can get different shapes \
\>", "Text",
 CellChangeTimes->{{3.969023080092052*^9, 
  3.969023100899905*^9}},ExpressionUUID->"22dc45dc-9293-43a7-af15-\
c543437b8668"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969023109642777*^9, 3.9690231148209333`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"b105d055-2a60-4f24-a7d7-e4dba69ed495"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
XjCrN8+ujATjmxWhTyltr7yezt8dBo/nNpTFUTqy7aDSw84g8H9hpFZJ6YaQ
jPhPix+gX9lLcojSxCu1Ci8Jb1i6P/D8L0oXqtaaFTx5Aac1nvb89zqEX9MD
NVNXa7BSPFb4j9LK4v2rTxXrYqlb9585SmdWL3nDbuqMWyK0fZmUvjXi2etg
7YbEt6inbZT2GuRf2i3iiwKVneXZlM4Zt3Jt/OWPC0Xzd/3+e15I5HnfxhCM
1+a/aUpptoDowWV6ERj4Z12aAqVt6rXDwk5+xqpNCoYL1H4sWhb78MrHYubk
7VuZlC7gqDVV2ZyAVyyxwJzSBxTTOg4JfsXNdtr24pS+phx06pFLMk4l73ld
SO3/EpX6jfK/U3DdZ5sJQ0ofusfQLr/3DUtGnOteUueZelBVwkI/HXsMHp3g
p7Rb0EbLh3UZeH/g+GpPKh7sd+x9onMiC3++Ti2yo+Ll3ZXsc4Z7cnHyQVBY
LxVfRjKq5e6f89CLv6UdKD27dJ+VgxiiNL1Jj0HFZ8ik51AReyFmhdDD5Ck9
ZaS0tj6nELnafx13oOJ5ivfR5gy7IvzSGBg0SsX/pr+edsvHi9FM7L3fHSpf
3m3+dyO25geytp7+YUjl02/2nys4/MrwqE/irCaVb1eTcxc3XCtH8wNRt4VY
JMYcLUoKY1VgGfs9q51U/p66qCj7mKcGJ+NN8ntGqfM45Pu2qK4GmZX5gi9H
SOTme2eZ86EWJZb8rsgcJLEuMezOjZX1WNDR5J5G1RNxwVdfHQIakJc/Q2B9
F4lirn8dtBcacJe7yienDhIvKfqlLxo04pLK9Q2SrdR+RE9/+bGhCVVUbTL+
1JK4rfxFEH9kM1qdOkfnQSp//d+9ehfahu4sfvmhXGq/9w99kvjbhmTplPe3
bBKN67SZFgbtOPw5+bFSOonrBR4/urimA+smyo53JpI4zPC+LunZiWG33sre
i6fuP7356JfxThx7kbR1OoaKpyyp6ekTXdhUWHmLGUFimPU6uYw/XbhulRWf
lT+JbxNrffpMevDzJa7M7A8ktnacjpIr6cGbWuVPFil/kL2Wqako0Ytc9hMm
xp4kRhkRvYYNvWhxnCul+inlH/V5H/6t7cd1v7SqJ++SuCw3/WnP/QGUYHNO
GjUmMaPWLTD00wDShB/2N92k9lvtQsfBkgF8Eju+66MBide5ws0WhAaxb99O
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
cWl91X7Y+R5cXfN8LCtP7QEAvy6pXw==
       "]]},
     Annotation[#, "Charting`Private`Tag$133755#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.9999998831351729, 1.}, {-0.9999990682297951, 
   0.9999987335310796}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.969023111828546*^9, 3.9690231154389973`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"cb600e0c-954a-41d1-86f1-75841ef9a064"]
}, Open  ]],

Cell["\<\
If you find these marking annoying then you can use Ticks \[Rule] None to \
hide them \
\>", "Text",
 CellChangeTimes->{{3.969023183011286*^9, 
  3.9690232296385727`*^9}},ExpressionUUID->"d972dd76-c8f2-4490-8ed3-\
86884c7a6495"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", "t"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969023240257242*^9, 3.96902332234914*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"89eb55d2-902b-45a9-9eae-55fe8a438af8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
pcarFKXjSgr+//w/Ok+YAw==
       "]]},
     Annotation[#, "Charting`Private`Tag$137863#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.7698003517007119, 
   0.7697997092238078}, {-0.49999844635488855`, 0.4999987643024959}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.969023255247489*^9, 3.969023322761571*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"95f4e466-ebb3-4f8c-b952-4a07a2eb9044"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contour and Density Plots ", "Subsection",
 CellChangeTimes->{{3.969023389838418*^9, 
  3.96902340397163*^9}},ExpressionUUID->"d41f0b27-f0d5-42e4-9606-\
6a2f9bdd39c5"],

Cell["\<\
The two-dimensional contour and density plots are less common in the \
introductory courses. However, they are indispensable in computationally
intensive advanced courses and research areas. A contour plot of f(x, y) is a \
topographical map of the function. It gives the boundaries of slices cut \
through the function by planes parallel to the xy-plane. The density plot \
depicts the value of f at a regular array of points. Higher regions are shown \
in lighter shades  \
\>", "Text",
 CellChangeTimes->{{3.9690234693928757`*^9, 
  3.9690235140549192`*^9}},ExpressionUUID->"00f7a59c-23b3-4211-83a1-\
cd37bd1db910"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ContourPlot"}]], "Input",
 CellChangeTimes->{{3.969023518774239*^9, 3.969023524766337*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"a4d783e2-6990-488e-8823-da240b365f21"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ContourPlot",
              ButtonNote->"paclet:ref/ContourPlot"],
             "\"paclet:ref/ContourPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a contour plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function \
of \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\"==\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
contour lines for which \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"=\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several contour lines. \\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes the variables \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ContourPlot", 
                    "paclet:ref/ContourPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ContourPlot.\
html"], None}, "http://reference.wolfram.com/language/ref/ContourPlot.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "1"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"BoundaryStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContourLabels", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContourLines", "\[Rule]", "True"}]},
                    {
                    RowBox[{"Contours", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContourShading", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContourStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExclusionsStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "True"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LightingAngle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Full", ",", "Full", ",", "Automatic"}], 
                    "}"}]}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "66", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "66", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ContourPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ContourPlot",
              ButtonNote->"paclet:ref/ContourPlot"],
             "\"paclet:ref/ContourPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a contour plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function \
of \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\"==\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
contour lines for which \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"=\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several contour lines. \\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes the variables \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ContourPlot\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) generates a contour plot of \!\(\*StyleBox[\"f\", \
\"TI\"]\) as a function of \!\(\*StyleBox[\"x\", \"TI\"]\) and \
\!\(\*StyleBox[\"y\", \"TI\"]\). \n\!\(\*RowBox[{\"ContourPlot\", \"[\", \
RowBox[{RowBox[{StyleBox[\"f\", \"TI\"], \"==\", StyleBox[\"g\", \"TI\"]}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) plots contour lines for which \!\(\*RowBox[{StyleBox[\"f\
\", \"TI\"], \"=\", StyleBox[\"g\", \"TI\"]}]\). \n\
\!\(\*RowBox[{\"ContourPlot\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \"==\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]}], \",\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\
\", \"TR\"]], \"==\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) plots several contour lines. \n\
\!\(\*RowBox[{\"ContourPlot\", \"[\", RowBox[{StyleBox[\"\[Ellipsis]\", \
\"TR\"], \",\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \
\",\", StyleBox[\"y\", \"TI\"]}], \"}\"}], \"\[Element]\", StyleBox[\"reg\", \
\"TI\"]}]}], \"]\"}]\) takes the variables \!\(\*RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"]}], \"}\"}]\) \
to be in the geometric region \!\(\*StyleBox[\"reg\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/ContourPlot", "Web" -> 
      "http://reference.wolfram.com/language/ref/ContourPlot.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> 1, Axes -> False, AxesLabel -> 
      None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
      BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, 
      BoxRatios -> Automatic, ClippingStyle -> None, ColorFunction -> 
      Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, 
      ContentSelectable -> Automatic, ContourLabels -> Automatic, 
      ContourLines -> True, Contours -> Automatic, ContourShading -> 
      Automatic, ContourStyle -> Automatic, CoordinatesToolOptions -> 
      Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> 
      Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, 
      ExclusionsStyle -> None, FormatType :> TraditionalForm, Frame -> True, 
      FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, 
      FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, 
      ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, 
      ImageSizeRaw -> Automatic, LabelStyle -> {}, LightingAngle -> None, 
      MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> {}, MeshStyle -> 
      Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, 
      PlotLabel -> None, PlotLayout -> Automatic, PlotLegends -> None, 
      PlotPoints -> Automatic, PlotRange -> {Full, Full, Automatic}, 
      PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RegionFunction -> (True& ), RotateLabel -> True, 
      ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}, WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`ContourPlot"|>, False]]], "Output",
 CellChangeTimes->{3.9690235251530457`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"d107f240-f338-43d9-8020-94639a8ba6e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DensityPlot"}]], "Input",
 CellChangeTimes->{{3.9690235308629837`*^9, 3.969023533028019*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"301e968e-5794-4d89-98dc-b11e07f54244"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/DensityPlot",
              ButtonNote->"paclet:ref/DensityPlot"],
             "\"paclet:ref/DensityPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DensityPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) makes a \
density plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"y\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"DensityPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes the variables \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DensityPlot", 
                    "paclet:ref/DensityPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DensityPlot.\
html"], None}, "http://reference.wolfram.com/language/ref/DensityPlot.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "1"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"BoundaryStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExclusionsStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "True"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LightingAngle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#1", "&"}], ",", 
                    RowBox[{"#2", "&"}]}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Full", ",", "Full", ",", "Automatic"}], 
                    "}"}]}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "62", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "62", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DensityPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/DensityPlot",
              ButtonNote->"paclet:ref/DensityPlot"],
             "\"paclet:ref/DensityPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DensityPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) makes a \
density plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"y\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"DensityPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes the variables \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DensityPlot\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) makes a density plot of \!\(\*StyleBox[\"f\", \"TI\"]\) \
as a function of \!\(\*StyleBox[\"x\", \"TI\"]\) and \!\(\*StyleBox[\"y\", \
\"TI\"]\). \n\!\(\*RowBox[{\"DensityPlot\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \
\",\", StyleBox[\"y\", \"TI\"]}], \"}\"}], \"\[Element]\", StyleBox[\"reg\", \
\"TI\"]}]}], \"]\"}]\) takes the variables \!\(\*RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"]}], \"}\"}]\) \
to be in the geometric region \!\(\*StyleBox[\"reg\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/DensityPlot", "Web" -> 
      "http://reference.wolfram.com/language/ref/DensityPlot.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> 1, Axes -> False, AxesLabel -> 
      None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
      BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, 
      BoxRatios -> Automatic, ClippingStyle -> None, ColorFunction -> 
      Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, 
      ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> 
      Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, 
      ExclusionsStyle -> None, FormatType :> TraditionalForm, Frame -> True, 
      FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, 
      FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, 
      ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, 
      ImageSizeRaw -> Automatic, LabelStyle -> {}, LightingAngle -> None, 
      MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> {#& , #2& }, 
      MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLayout -> 
      Automatic, PlotLegends -> None, PlotPoints -> Automatic, 
      PlotRange -> {Full, Full, Automatic}, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
      PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RegionFunction -> (True& ), RotateLabel -> True, 
      ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}, WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`DensityPlot"|>, False]]], "Output",
 CellChangeTimes->{3.969023533444531*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"2dee76cd-d34c-44e0-883f-64bfded2214f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"x", " ", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9690235538170424`*^9, 3.969023621929738*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"35e68711-4f5e-43dc-ae5a-bd073cfb6838"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJy0vXWcVTfULoyO+wzjckbQ4sU1uLs7RQstTnF3d3d3SnGH4O5ugzsUK1bs
znvWfhL2Ou/+Ordf7/knv2cnWVmWFdnZOdFN2lVtnixJkiTVApMk+Z90Q5tr
m9pcc5JJ7L84udaO3+0GpvRyAeCdlF8YeBvVF8DlJsSVmRDnq/BWe36gwmnL
/E+BcIXL2stHK2ykCoO/MlRO8QcM/oDBHzD4AwZ/wOAPGPwBgz9ze3EKg784
qqf4AwZ/wOAPGPwBgz9g8AcM/oDBn7m9OIVLEz25iegofoHBLzD4BQa/wOAX
GPwCg19g8AsMfs3txSmMFHzzFPwDg39g8A8M/oHBPzD4Bwb/wOAfGPyb24vj
2MFvuZ9wO3C5gHkKec399nIBYMgLDHmBIS8w5AWGvMCQl8UJjh36Je8H3M+4
3bhcwDyFvMCQFxjyAkNeYMgLDHmBIS+Lgxw7xB3ez3k/4n7J7cblAuapOf5e
LmCOv5cLmOPv5QLm+Hu5gDn+Xi5gjr8qznPsEFd5HONxgvc77pfcblwuYJ5C
XmDICwx5gSEvMORl4xjHDuMGj9M8DvK4wvsd90tuNy4XME8hLzDkBYa8wJCX
jdMcO4yLfBzicZ7HTR5XeL/jfsntxuUC5inktZpn8HGdj6N8nOJxn8dFHjd4
v+J+x+3C+Qa/fJ7Bx3U+bvJxiMdpHsd4P+f9gPuJ1byMz4P4vAP88XGRjxs8
rvK4w/sl91ureSKfl/F5kDn+OozTDuMaj/s8LvK4wftVSTv9pMY4HyNX2vMf
7AaOsace8pqdsSiJ8sAoD4zy9sebQlR5YJQH/mb/+asU9YFRHxj1ga3a5XSA
eQr6wKAPDD1wublcnE9OF5inaM/KDlzPXI9cL1wO3g5P91Fa2Oo5T8sTPQGc
jtpTOJndrwIUbk/8KhxP8iicmuQVVu3wFO0Boz1gtAeM9oDRnpUcvB2eoj1g
tAeM9qz0wvnmdHnK9cjl5HxwPXM9cD65HbiezOuAGDZP1v0CcQ3+g7gH+tyv
UR75KI/2UR4Y+eAL+eY4GqPWHTwuIM6Cf96PkQ9+eL9DPvhBPuIzj2eI4+CH
xyXkgx8eR5APfni/Rz74QT6egw885+tSHnf5Oo7HTb7u4XEO+eCXxyXkg1/k
c7tBz3zc4etPHu/5epTHf74u5eMAX8fxuI18yMfjLPIhH/Lh5zy+8/UmH1/4
+pOPN3w9yscfvj7l4xFfp/JxCc8hLx9HkA95kY/yPB/1EH9QHhj5iHvIB0Y+
4hzygZGPuIZ8YOQjfiAfmMclPg/icYrHBT5eozzsx8dv5MN+fDxHPuzHx3eu
Zz7em/m9XICP73iO+SEf95Fvjr+XC8BewLAPMOwBDP3zeSm3B/Kt4j6Pyzzu
8bjC+yGwlV9zOfm8CPnQF5+v8HUwn8fwdSOfd/B1GZ838HUQnxfwdQifB/B1
AB/3+X4C1xfXD5eLz6f4PgCfx/F1M5938XUpnzfxdSCfF/F1GJ8HIR/yA1vF
Je733G58vsf3B/j8ku8T8HkmX4fzeSLyIT+fByLfKo7yfsv9jM8/+X4Bn8/y
/QM+v0U+Uj7PxXOruM7jCvd7Pv/l+wV8/ox88Mvn08i3Gkd4XOP9jM+v+f4A
n5+b9ytipDku6nmv1bjF89HPwR8vj3zwy9dhyOf9hMdp876qI98oj7iN8sDI
RxxHPjDyEdeRD4x8xHnkAyMfekE+j/uIc7A/MPwTGH4CDDvyfRhuJ75u4nrh
euByczm5XFZ24XrneuZ65XrkeoP/8P3wf6s3sz70fhb3R8zLzOvJcId5Fp9X
8XkU/BlyoP8DIw4BIw4Ao59arWP/LV98vvFf8fmLXe+uxropWkbay33eDTzX
nl5UuJK93qvCwKhP9olU9YFRHxj1gUkfftL+uEywogcMesCgBwx6wEhBl6eg
Dwz6wKAPDPrAVnJzvnk7wDxF+8BoHxjtW9mJ653rjcvJ2+Up2rfyA25Xbheu
Ry4Xb4enkBc4ub29FAL4pp0hb4UpTqRSmOJ1mMLX7fk2YeXH3C+5X3E/4Hbh
fPMU/AODf2DwDwz+gcG/mb9YYaUn3i5P0T4w2gdG+8Bo38oOXC7eDk/RHjDa
s7Ir1xPnm9PlKfcLrmcuN+eL+xG3C9cTt9MX+/iZXPXbYpRv9JtY1o9iVT6P
MzRO2+QV4k/FHdBHPvoXMPJRHvSRj/aBkY/yaI/GpTDFDzDy0W/QHvLBDzDy
UR7tIR/8AJv1FSyvkl1VivaBwR8w2gMGPzwf/RztIR/8ACMf5bmeoMd/0pOV
Xv9JLjxHCv6BIR8w+AWGPDyfjy/cr7gfWfmdlZ2t/MLKDlZ2+ye58RzpPz2H
/HgO/QAj3zy+OvZTq35t1a+s+qGV31v1Eyu/tPJjK7tb+YmVHqz0hudI/+n5
KUoL4zkwr8efA/MU8dfqeQbiXz1H/AZGPsp3IP2ofIwPwMhH+TSkf5WPcQgY
+Sg/ieyr8jHuACMf5WndFKnyMe4AIx/lt5B/qnyMS8DI53rjerDSG54j/afn
0BeeQ5/A0A8w9MfzQQ/6QT70B4x8lId+kA/9ASMf5aEf5ANzv+F+YOU3oGOl
BzxHCnmBoQ9gyAcM+Xk+6EM+5EN+YOSjPOTl8nA/tvJ7K7tZ2fmf5MZzpJCP
t8/7jVU/s/ITK7+y0quVHTifVv3Uql9b+aWVH1vZ0cruVnHAKm5Y9QPuJ8Dm
97LR7L2tjb3HjGbjWAx73x3N3oPa2LpUv3fDOAz+Ud/8fjyavZezSfP5KT7P
0ecFkG9+/x3Gvjfg47w+T4B88/vxMMUv+IE9gJGP+ub9Wo1BD/tJmEdgfLcX
++69OPIhL/IhH/KBMa+AvHyegvqQD/nAqA95wC/k5fpAfbN9NQY9Ljf4gNzm
cwR6nsnfi/N5FPLN7+n9FAZ98At+IA+XF/XN74k1Bj374zjHdSA/t8L3o7hf
8n7Hz8GY16mBDvtZ3O6cPj/Hwufv/NwI8qFvPg/l5ytQHvqDfqBfrn/Qgz45
Bj3ol+938TjDz2eY41S4w34c79ecHj9nZF5PBDrs5/F+w+nzc0Lm9YKvw34g
91tOn5/jAT3Yka+rOD1+Tgb18ZzvO6I+ynG783MoVvVgf9SDfwDD/qgPjPoY
z4AxngFjPOX5GIcw3iMf8xZg5KM85gXIx7wBGPkoj3Ec+RjHgZGP8hiHkQ/M
90P5OMjHSTYP+Mdxh9Pj45bVOGcV1zl9Pi5YjSNWcZXT53HZKo5bxRFOn8ch
q7hl5YecvpVfw/9Ir5cLwL+A4T/A8A9g+AMw7wdoB++fMP/j51usyoEOnoNf
Xo6fEzHv0yZ1WCehPuTl9Pm5C76PjPLQD6fHzznwfWPz+ZtIB3r83AHfN0Z5
6J/T4+cE+L4yr8/f05vfb1wuADugHLcv1zM/r2NlR/P+ua7Pz/Xw9wJ4Dn2b
z9+kUhj65OX5ORO+j28+DxTpQI+f++D7+CgP/XJ6/JwGXwch32qcsBpXYC9g
2Iu/b+Hniaz6BezBz1FZ2QH6B33oy3w+KYydN4p0KM/PzaA96BflrcZFq3EU
+gE295NUbD2tzydZ9XuzHVOx9XWA0h8/Z2blp7ArP5dlpVercd5qXgD5gc1x
U7/f4uedrOKWuZ/q92GoD/n5OTqrfmb2M/0+DfSgH34uzcqvrOY1VvMg6AcY
+uHv5/j5K6u4DP3w932oD/3wc4RWcQTyozzk5fM4Pk/j+zOI8+Z5lT63iXEC
+thE9SUwpZEKYx4FjHkQMF9/4jnmW8CYLwGb31deLmB+j6TpliF9qHk9MJ93
Mnkl5ES+eV1rY+cw+PcdNrYu0t85I9/8XUSYWvfzdS1/j0f65t+Fh7F1Jv+O
Okytt/n3GGgP7fP9DKv3hGifv0fj320jH37C98H4PhH/ngLtgT/+PQXywR9f
1/H3ePw7cuSDP77Pxveh+D4O/94B7YMf/r0Df0/Iv2Pn7/XN/SrO4bzM/20/
A0b7/L0L8vm8gY+TfNzgcRL9h72/FOxcAi+v1h98XsnnLXyc5uMWj9OG/lRc
Ax+Is+CDrxv4vNPqvRPGJ6v3Lhi3+XsJfp6cvxfg58n5vjz/Pp6vU4BRjvML
DH4xPwK/Vu9JwC9/LwG64NdqHQn++LwbGHQ4P1brUNDj8y8+b7Rat5rXZZFs
HRCpxgHut3w8RT7o8fHevC6OU+M46vF1D8qx89XsHESs5OcIUM68T+5QzuF9
Kp6bz03EsH2UWMnmA2r/lZ+j4eMayvG4jpTnc7r8O0KreuZzML5sX9tPYfP5
mVjJ5ebnQfj5S04HmI8DSHk+r8+/E7Sqh5R/Z2feX4912AdHOb5PhLgIjHzE
b2DsH8FfeBxFeR5X4ce8n1i9V+N+9k98AVvtI5jjlP4eiL8X59/NoD4wymGe
zOnz84q8HjDiGD/HyPN5ff7djlU9Hkex7jS/tw1wKM/PP/JywCjH8/l3Nnze
ALvzeQHzAxU/eVwEhp14PuxijtP6e5D/PU7q7xS5P8GPud+zOCvM89hYNm/U
7fB6wIgnNO8LVBjxy3zuT2P+3oT3N/P5sDgexx327aBX2J/rmefDv2Bnft8M
6rH36cI839R64PEJdKz0Aoz6fP3A9QTM4wqwld3BB4+T/LtDKz1CL1Z6Y3YS
5vVsnFpnYpwAHczDxtkLuFD5ftGGvqCfIJXiOcqh3g17ho/Bd5jBV0q6N2ZR
rPhq58dTtrXrL1L+ak8DVIrnKEf7MpEihb0hL5XiuXkcjWHvoaPY/CBc2dnO
3qYQleK5FR1g7Kvw+M33jfi+Eo+PfL/Jii70auczF86buCu9A0NvJrskCTH8
2d/BfniOctyeoIt2wQfaQT7JESCQ4rk9OWJTdqT2IlQ7NA8LNVIf43mYeo5y
qGeic8Sm2jfX85ETKd8Yl92NeXqE8pukJJ+YQvKItiSfwshHfbJXkDHfxvgX
ojDyqR1/w46hKt+q3D/RBR3wDTnAF+S04ttKTtiR9Bat9Ao/x/yQ90Pyk0hm
l2BVz1Sunz4PAjr8XBLKYx0DPrFOMssdzPQS5RAPeD3en6AP+I2dnTj2nVQC
3+gXFPcDlZyQG3qDHknfgcqu5n1WbQe+fud+gLgAOSE39MLXexgfwIcRXxVf
9uaex8jLFH9VvlU5U9z/bl2IuA0+rlN5hZFalYM+oUezXvVzYPAHvqEn6Nkc
R4PU+Mjbx3wBcmFcRzt8HmCOi5qOOW76Kf74PA3tmO4hTShnvg82TOmTj4vm
+wbCBMZRlIPdkeK5vdmzsYZ+9P4PH4fN39O7kzx+NpWa43mkOf756XiK1Koc
xnHY2by+DmL39ej7Z/k4xcuBLh830I/BP/wE4xH6GzDyzeuNIIXhb/9Uz4qO
2W6hbH4WqvSFOGHaT/jODhRXbcpv+D4/5Ec9fn6O29O0rvOzObzXAV/gn7/v
sqKDeqADvridwDfszf0E+zLQk5UewRfyzfs53E/0/hGeY54MuyLOwu54jnJ4
jnLcr8zvWQNVamonVzjVP+IjTOdVE+Yx4At64f0GejSdkz2i7Y15AL9/A8/N
93iECfP7mlCJeYXpO8Xn4YZ9fRSGvhGXMU5Qfw1XdkY5xCHIDT0gTiFuUdzE
vC5KApNfR1k+B05L2IjXnirFc8Rl4jNGjeP25Lv5P56jHOphHo7xAPN2Pr/D
c5RDPdKXG/XL1dHGeOtnpEEs9VPlUI/kSCWQjrfrI5VEarfvoghlL+COdkJe
1C9XRxvzIleFyT/dyK7Pg0Q7u338FKbUz/I5sBVdYIrrEQ7rTfgdzQNdlNxt
qD0H/Zier8a81UVOJj0IpPA3+/yoX5jyLzubAv3NS27+H4L1IhXmfoX8WNK7
SkGHl+N0ub8ifyvlK/sAc79FPi8HzP0e+ZjPkr5i2HgSZR43vtsHgJ0wz8G6
ECmegy5fH6Md870w7mrdYf7uw3E9jOeox+fvoAO72+NYsxjVT+z8VcV7YXel
d/iNvVg94x7BRf4O/Y7KBamU91PUAx3QRbvgA3yBT/ABvshPtd2Skj85xC+r
cqBj18c7m6Jrb36mzfBTH4PvcBpH+hpxzS9UYYofoUbqY8gTrjCVC7OsB4x2
0K4VX8BW7QAb9Y3xyp3i60yNy5J+VdxJQ/pXcYf6QYiKWzTuOMYtipP+Rj8K
Jf/r52voXWOU4/EPdNEO2kU9K7p8XIVcVnJDLsgJuaEHxBn0Q6yr4Xfo3zxO
8XU5j398/Y/6aIfHN14O7Zr3+bxU/ObrblM/9nPch+DxFu1h3c/jJN8H4PEV
+Shv3q/T9Hg50OH7EKALOjxeg67p+7bvxkvsE5ji6nfzAOgJ8YniUICKS9SP
Akkf/QKV36Idvg/Cx3++roafkxwByt/JLs7SmL9JYLudumDf3UnlW5UDxjwS
80rMC2ke6yyM8gojtSoHvUBPNK7peA898XEA5cAv5IAeoVfoAXqB3nh84PsT
nF97krDux7jKxyN6ruc/KGd+7qf45fsO0C9SPDe99/4u7tr19t3+BPjEPArz
Kuw/8P0GPu/i6w7kYxzAPAopnmOcQxy0r2NcY5S/kj2CWTz3U89RD3RQD3Tg
H5g/Y14Hv0CK5yhnrqfHTfgF5ueYh8I/kOI5yqEe9ILxAXrj4xDWwea4q/cH
wA+eoxziDuIW1u3A2FeEnvDcqh7KoR7ahV7AN+QC35AD62g+HmOdjed8XY5y
pvunv5tX2NWWsC4GH3ydi/kK6vF1OOhg3OXraPgVnvN5CcpBbvg92gUfdj3I
cKO+Xq/xdRHmCabvQXU8Zeei9f8h2OFj4z12Pydh1o9eT+M5xi3IgXknMFKr
chiH4YfoJzzOIh5jX4NjlMdz03z7mjUd1EO70LtpXE6IT6b3BP0Czf3zmsbI
x74e4j3GAaR8HOD1rOhgPJ9A8UitE4AR1ykOB6sUz1HOig7m4VQvQs27gM3n
VMNUeYwHKGdFB3HUNP/+X/YdgFEO9Uzvgb6L+zSvtCk++H4n+hEw4g7o/O/f
D+vxhO93wo8Rb/k4h31GxC2+H8rHKdAF33ydxPkG5nEf7VjxAbvxfge7ws+t
+oH5PEaYsh/kB8Z+HfyA+l246l98vxB2N60/Juh1IfjE/gPooZzpPWTCehL+
hnKgY+9vYRGkD+Gj4iXfLwFf6BfUvp5PA6Mdip+Ral2PfgdM88NgBzqoBzoY
F+H3mJdgnQj+sG7h7YA++DbdS/xd3MG4CLq8HYyf4AN8meLId/dR4jmPu5gX
I+5a+QnH2AcGPbIzW7fEBTrM01EO9Uzz7u/ew5jn3zo+m/bxv4vPqIdyqGee
B0Sx/SMdj3ichB+jHn+Pw8dXxA2Mm/w9CuII9AY9m+5z/l/ooB7ogC/wCTvy
cRnvHfg8GJi/V0E++AKfvB4wr8ffw/B2OB2U4/NmYPgDfw7M3/P8r/Py797v
wc9Qj9OD/+A5f+9j4sNVz+/s+c00hlym+VGcto+dny4RZGc/HV/5OS30N8RD
+zz9iHHOMmF+ifiI+sBoB35hWvckzKfQb0z3tC/S70NN79OP2MznhBOwKb4m
zLPx3KoeyqEeP9cCbLq357t9MatywKb1SkI9u/ri9PkNe1I12rxfW1XvT4E+
3tfyfUfTfVAJGHJgH9R0PiPOuh1g7AOCb7TLMfji+4KcL3u1sFjVLsZTjFd8
nDXdv5OA4U/wL+zTUL7+3xtg7DdgHxx4gjFPRXyicVP/rw+waZ1WT2OMkyhn
RQflUA98WfENvsCnaV793Tkz2NO0j5kwT8G4TXE/lPRc2BgXXMPVc5QDHeYn
Due6YG+898B5D2DT9zzNYtR+DebZwHivgngNbPp/hu/2rTGP4PvYpveA/wsd
YNSzogs6oGuSU/m9o5zAkMtKblOccdXve03+00/3Q9RDf8K8ic+r8J4X/Qz7
qKADuphP8Xkk+ABf4NO+bvCMNsYVvQ9snrdp/ZninWuM6o/kj+z/w55rv0Yc
wHOrevZmpWM9036t1OtNnPOC3YBN35NJbafNRE9hq3rAKGdFB/xBn5CL7KD3
cfn+NNlFf4dl8rsu+jwVMD9nhnx7te16vwXxEv0EcZ+PC+b3pW4O5wbRH0zn
XGfq/S34E56jHMY50IH/YJ1pep5QDnRAF+cYTOc4/PR+HjA/18T3MdEu5neY
12HehPmSaT24KYTtY+p9VuyfYb6D+RHWf3y+xOdDmC+hHfP5Kd0O5IYeuNzw
e9gR/ZTbi/wqgt1PF6H2ZcmPItRzq3r83K9JXnUvgeNzYOzfYj+G6PtL0zz0
m7/5HFLC/BDzcTy3qodyqGc+V+Vvnl8n0fN1zMOtypnOWdULYPP6lOp8J++n
6PeIA7zfm953JMwvTP6C93rP9X4h1nG8HwOPpbiNOC7N/5Nj7At5GvdQ9nMX
4ANxC3o1rbcS1r28v0BPWH/w9a7pu5lFupxpnuvH7hvws5n3MYRN9TPsxwBj
Xog4gfUw6Fi1Y37f4KLWqZifmt/ThrL78vX7csQVKzr8/QT256zkAIYckIuf
u+d88ff4sBvsCLvBjqb388/DHb5bMP+fZpgqT/OHcLVPCDmwrsc8FNh0v3tC
O6ADPtBPzece9PlE07miCeHmfSoZruKr6T2tuv/USc337efG+7qr/oBypnOD
Msb8nthP28H++EiU8kvsc8CuiMPQv9kPQx3iuum884Rwi3MooUqf0Dcw7MLp
mM5VPdd0sT+KuGy+l8bd4dwH0Q9k3ykFmfeX1P8K6PPOpu+61PmJlGx/Euc0
Q5T/YPwznxMJdTgXYvo+QJ33cFH2wThofk/ows5buKh9KoyTWCeYv+MKMe9T
J9gX/ofvHMzr4JRqnox5GTC/N9Okh3763kyME9T/kqn5IPvuwaGfwm9gb/CD
/VVuB+jf9N4lYdyBvqEP87mRECU/jefJlHzQBzD4h3zcL7AuvjTg4406b3EP
Tpzs+7B91ZH7nZU/b8z27kPEHz7yPJXj31+KXlRebKByyq8f16xSslHlcOE5
727rZXd8VIrn0NvMHMvGTjhmU3aJrrZ3kO8Od/Uc5aYRVvMYG5VzuI8I5Waf
/PN1z43e8s5IOfJObKRK2XMxh7BK8XySW8Pm87J6qvdGs1Jf9/ep7qX8Hqn5
uU2iHt77jCOs/H8mlVcpnqMc6qH/t9vza92eTwLkwzIrS8RW0+fhXz1rf6Xq
Rhf5ZlnuNntdYmU7j5Lbt0fGyjs9Vvjm8XTFc/GayqkUz0EHdGst+fHSnFX8
u5tg9Rzr3xqEVYrnbYhPh/Pv94i+SvG89IaqY/6M12n8sCKrgrZ4ymcP+uct
FmdTKZ57Fj3w9vZ+x+85q9XItztmXoysak/195tUzk8m/zvA5eUJfZ77Zt4q
qd9O089RDnRzXPfpUnu7q0zdrl/+/ot1Ozi3nYfyRQzlq3mGui+O6ItkRF+d
AzL4c/juE+W8ST6H70arkHxicvTrRucvusoZXZM/KjsiRnrurDOv5UR3WXFj
9hVlm0XLjCfXLUub011+HHO3VupB0XLrtkw9Xz71k1dahQXlaBCiUjwHHdAF
HdAFHdCtOqbq1cquNrEhIOmlyOue4jXZR5wl+6jnKIfnKLesQ3DkxqY+svHN
N+djCkeoFM+XjO56OnWRCPEialbIluY+ohrxI1IQP+Jv4kdkJX7EUqonGhId
VQ71UA71GrRJ3rDdKf1+D+P0T4f9tr1dqr937J3R5cuff+nzkbO9nrkGD42U
ZXfdLro3hz63iHKoh3L8fCPqoV3wgXbBR2eip8a7qUTP4fxhKaKnyqEeyqEe
yqHezZtH5/rXCpJpO754tLhngExHqYin5yLD+R/r+lVxkVkKRW0fvSRW7irc
6PPhZbGyxdUfG32r4wIsWhEWmam8MMoL0EU7mPdWfWF7svlSsErxHO2Cj9PP
r/5wc7b+Pu8UYfZ9XiwvJ1FuZOdGDRdn1d/TYb5lPBfDcgScq+IVI9a/mx7/
ywA3MYv8X0wk/xfOjV8FNX8eLKYPyrdieC5/8Yz6i1hB/UU9Rzk8RznQRTug
i3awLj6+LvXztU+DZK1shz+nLxGg5nV4jnJ4jnKIq4izd33yDVgUFKTWw4ep
vsN3ZzWpvnqOcniOcpgH8O8Sodc8058ebnND7y9hXlOH/Fk0IH922F/KSfVU
OfO9pO6qHuiinYckn8P3YE4Tr7x7Mz2VBF20g+coV4H8jX2n5S/wHHqDHlNQ
fYfvtfD87NEC+w5N0ufCMC5jnAaf4BvlUA/79+cJq5R/j4V5FvwWftxk9ZDF
f94NE2/OnMrtnylB3sVTkm4/Fi52+HXckm6pj+hW6ptsmiPC/H1cwnpia/ov
h3KP8xGP2tf44rNL74dOts83ItT64R7lq/k56IyhcmIzxXeMAyrF8xa2J50z
x7vJQmeO7zl/JFqleG6M8ypN3i/ViFRNIkTbevPvHqjuIzplmrS0+NoIUfFe
0oGfIn2EUV80o/oqxXPq/xEyyS9f8xau7yO/tLanan+ryEXPtgWbe8pfM77K
5VTKJq9+ubZuSxFv+efXNnWuz4uUt4vkTXrxiJds2Kta24NhUbL/+ZMZa3h4
yxnlnUqMehip6oEO6oEO6oEO6oHOcyovrlB50YjKiztUXiym8qILlVflUA/l
UA/lUM9zT50JGQPd1HsrzNMxb4ddYWfoCXrbeX5+/nFp9D0PSPEcdNEO3rMY
WK3XtlJ5leI5yqn7Bbq+2H75nL+MnZWn4pfwYJXiuaFvUYz0rVI8j01W8thr
Pw85ot+ZdTtSRMteG67uq7vJV3pdia3Z91uoNNYX0lhfqOcoh3qgg3KoN5zy
RWrKFzHEH/gW3kRP9CR66jnK4TnKgQ7otujf8fKEifp7C6R4jnM/Xe3jubd4
d/Ngq7ZXIszv8+tFiuZUXqV4jnUY1mXox+jXWNdhnYc4gLggu3vvmvXBWZaf
/Mot/mmsSvG8LGFhYJXiefOvZ7ue7+wrKQ2T+Uv7LL/ewFfu2/yiZuyCMFmi
WeDahe31+fJmVE40pXriEpUTmameWkdOt6/nEuJZg4nBXlMdz5MXIbri1aXp
p90/RotWjzPcCfndTaV4/nHN8+CxGVLJCy3q/VViWqBK2XPxN2GV4vmw+XnT
Tjmrz1dDTsgNOSE3yqEe9iEHEFZyQw+QG3pAOdTz+twpbeBzDzklNk1460E2
ubb95lTDZnjI369+uxBwyCa3HW08JNdFff4Z5VAP5VAP5VDPKC88qbxYR+XF
Kiqv3gttpvKqHOqhHOqhHOohLmcuVyxt+8Y+Yi3Nl6QxX5LtyF7yGdlLGvMt
acy3VIrnqAc6qAc6nWlckR/62scZWYHGFWmMM+o5yuE5ymFcwjiFcQnjFPZR
n3SJel2miT4PBj/HfmEj+/zGVyZ9VWBSztb6vCrqgc4Dwup9A/wafk7zJF+H
c5+fXtrpqnqgg3b5OVnwATqgCzqg24PikBEvItU+7CeKS+o5yuE5yiGOIa4h
jiGuDWh1JWM5Hz+13/60fFhIua++0nvK6oKTxoXKZtm/le6+PUSGzbv67cEU
XQ71UA71WlB5EU7l1f58PyovfKm8MMqr5yiH5ygXe67z5OSTYmSL5EWyHdjp
qt6Hnw0pfDtjuKscMWhBQHa/WLlm0d1hf8a5yrbJDt98UtZPpm6/cErtNKEq
xfM0hIWBVYrnHWNWxNW7GCMPDl824dc6rmr/OWhAjoPjH/rKQErVewY8599X
oBz2+WpUOuh6q5S7nHtqW5Br6Wg5f2jvgW3Wucua9FztF86h58IoJ7rsf7Us
RUkvGTT9QZat46JUyp6LroRViufQG/RopKI1PVfv8U+QPtVzlHP7UnLbhIH+
ktJglqrnKMfSYAG5oQfIDT1csM+z9fs77NvubLhqdZK80RJ6gZ6gF+gJ+44X
iY7YSvXU/v36U34j+tfW99+knLhv/affXMTqdwf61Z8eK77MXrLr90Uu4tmA
xhHOjWPFH1Re7S+7UHm5ksrLz1RePqfy6nsstAO6aAd00Q7ooh3QRTugi3Zy
xX0+sS5NgKzXZszrT1uCVIrndQkLA6sUz/1X9hqedKafrF9w/tmJu0NkAGHR
kLD6fiU2+R9Zh5yLlQPWDC0385S+P2Lh8dmbMvZ0UhhpR68UM7we6eeDFjfP
ey6FntdMKXDo8tRojZedS9etfiGNt7UeERRdz1lGUbvsfuM40YXoKzyU6Cs8
jegrvJzoK2zQFw8/h2SYNlXT2Tb2TYX+f8WKBauW/9lxtZM43XRzmXG5ncTg
L5sWuVyKFdMHFCo3fJ6TyH0g+H7JV7Gi2uzVu+7/4SH/atwzXcreUdL7avaq
wW88ZNVvBTtGzomSRwO33C+b01OumZ1kR+7dUbKbc5LBpdw95R+Xcq3MnS1K
1QMd1AMd1AMd1AOdDpv3buifP0pULFvgUnwmD7GD8sUvlK+eoxyeo1wS52IP
kw5zVvuqM/dOyLXkB32/xsGI56k3DtV4cO9VWUYG6fW0DHCpnKkCO4/6zV8G
v7mbutR7jQsefpBvy3ff/RR/c3P3yYX6/qAZ2yvtun0i8fWAK6/4uD10vz4/
CD6t5ICckBv7uF+d7Fjt+xr1Fd5P9dW++UDSg8I7SA+iCPGn9nFSkTwK5yF5
FJ5Kcjvcl5pYOtiPqEB6sOQbGHJC7sheHSO2b3WVd2scXZD6erRslMW9Qpcr
rnL9gD/aBtyLlvPuLOyV7aOrHLRmSr7kz6LlnckFVj0LdpPVr/dyev0mYZ1W
5sK1pXncZGrXpmdvfYqWte94JRmU3lV++qXEhH1fo+X1d5ffTtrtKq8+OFu9
8JVouWtrxJknUW4yelPS+PR7ouXN+Lk+nWb4yQrbavapWCVYFjzkXn3NNj+5
csHePSM6BMuZa7pOfXrVT7qOzJzy0PhgVQ71UA71UA71IBfkhFyQE3JBTsgF
OSEX5IQckAtyQC7IDT2UHRWwz69wKqHSsZ18+i/3lof8e98PvRMhJ/21e9OV
7t4yPnJ5G1+nSOnzakajEpe9ZNjswKKlNkbIT9lCfsvm5C3H7bxQvuDxCHm/
49QRETm8pVP8pFo/3o2Qp9enmufaxFv2/FqtSfq/I2T+TRfGdm2XSqVOUeO/
nRmg0zNDy7fLOEWns1463xyyXKct6+yreHuHTsEn+AZf4BN8gU/wBT7BF/iE
nJD7LNEXhYm+MOgLP6IvDPrCoC9SEn1xj+iL7kRfnCD6wqAvphJ9cetm3RSP
V0eLVIs2LDycxFVEDE26efeBaOFcpFLb2Mau4hvZS1Qje4l4sq+4RPYVaci+
YhPZVwTXutmnrmuwWNEznW/fqn4qxXPIAbnAB/iCXJATckFOyAU5IRfkhByQ
C3JALvANOcA35ICckBvvbcddH7KhdkObvL0oe5Ju8/V3eOezfvkxvdQ4X5fL
5zO91t/7eUbk/pIqu86/tW9y6q8dNE5ZMeL22UL6/skiNX9/Ur2k3r/Ot3x8
hkqdHb8XrDSl47WuuTU+l/OBd44qGte6UKf4y9Yaj0x7f1D8I/1dnme2VEtd
g32l/+O/Bzll1ef0ISf/3vD/Vi4rPUFOyI11VVLCYjS17/A9o9G+wu7UvsLX
qX2F71D7Chvtq/GgIOlZ4RykZzGc9KTWp66kJ4UrkN4VPk16V7ga6V1hyMX/
/9mb9K7khNxWfP9bPVS0j3v6/31gZ9gdfjWxX5HehU/p78pHFLy9Ypnff+dn
wGOpHaX3QdSOw/eh/5UdsL6pRHpQeocd0o/KlmTiVMf79PAc7/ljCKuU/y9J
7m3nC0yuHitOv6w9zuuOvgc8Q1y97cXzOCs8sFaDBz3GaHxjRCPftfc0zrXr
pwIP8+n3hyeInnp/mJ7oKTyY6Cl8m+gpXIjoOb5//I/4LEByO9wX+l/xjfcA
z2vcm1dhh5cckdxrW8PD+jueJQvTrKxWUH/3nensuF97+uv8x1TP4fvg9FRO
4cFEV+HZRFd8mplp0k4/H3G56sx2nfuFia7VIvf4l/UR1d1GzTq6OUx8vJzi
1dzpPmJOueLzB60JE5n6lRs6op2XrBXmmyGwb0Kcm9jrRJMQL/kq7rfzo/ZF
yuD+QYsy5fWSn2buLdzxXKT8od26Hh9qe8kU/j4ra92NlIUbVKiyr5uX9BrR
ILDgm0iZIW56rlyTPOWgNsmHv+sXKQf38Mj67LmnXBu8c/CZ1ZHSwyVNyxpJ
U6kU7YIP1AMd1AMd8AU+wRf4BF/gE3yBz5+oPRFN7YmB1J4w2hNrqD0xgNoT
r6k94UztCaM9EULtCaM9YbQnPKk9UZDaU+2gXdABXdABXdABXdABXfAJvsEn
+Ea8bL7aZcOTMvoczdgT3WvubhwjI399VafmNH3/+slGOesO+Evj3csLZKqV
Tr/PmrqwYaY2NR3vp7PyayrnJ18fqfukYux353xaDe+ytqTGtVy2JAtoHZLo
csBWcgH/RPkqXo6gfIf74O/594mqu9KxX41pNLLB9nMavyT+1LmhaOJP4WrE
n8P9eYmtB76s+H76vomtTVEXOaVF1rLD88TIvyfPuXa+uIs8nNuj36GcMTLl
1la3pi5wkSOSFC6Sp0KMPFw4adceX1xk/jv3HrxsGiOP/rqq/bTubnLeu9vD
i9SIls0/e9YNmO0mh9bNN8jWMFomGdWu2DjpJtvumtDnW4toOSvsTEaPe26y
RszTbvHtomXuldkDhzm7ywJDinXa2S1aLvZ89cBli698MTdV1pnXg+WfV8c/
SfnRV+Zps+nHaREh0i3L2SofY/1k9T3vZowsHSKnrO35LVtDf5nu4v7xNZcG
yWdzetT61NVf9t2373HUniBZbFT3NfvH+8uLf+wt8vhqkHx78dTUYh/85NBP
wRl+LhIkj0+LSzG9gL9suLPNlJ2Dg9RzlMNzlEM7aBftoF20g3Z/ODPo6cwJ
IXLErJrHzpTWckAuyAG5IDf0AL1Cz9Ar9Ay9Qs/QK/QMvULP6/sPqvshwc49
Rvrd/ENou8LOsCvsDD+AX/ja+odMFO4yZenGB+NO22S6G4Mz52ztLst1nV9u
9FWbLDRjRLFLE93l+CV3Tr+9Z5M1ao2t3X2nu7x4IbZmwxc2OfZG9tox8W5S
jh88RiaUH+idZef0Qe6y6OCSG2PW2uTwLyvPl2vsJU+kfrP0a3CE/HCi7/bg
0b4yIsjv1k9RoXLg8A5j9iz0lcvOJl/vlitUepVo+lPrbb7yxzFvB68vHyqn
J6mRw/+Mr9xV5mHt+k1DZVWn2lGLkvrJQpGvOvYrFSq3VsnVc+5mX3nprF/Q
4PGh8t2UjWFPO/vIsxVi38+/EybrLSqzOu1wH5m73uZh8e/C5O61Nwo1m+0j
Z/5cLjTMPVzG7e5wet5aH5mky82VtaLC5bDjKZvcOOAjmw3sVHDSj+EyxRX7
+CdH0fin+IYc4BtygG/IAb4hB/gE35ADckFP0BvsAjvBLrAT7AI7wS6wE+wA
u8BOsBv0BL1BT9Ab9AS9QU/QG/QEvUFP0JvBv/An/kVZ4l+kJ/7FWOJfFCb+
xQXiXxj8i9LEv+hB/Iv9xL8YRvyLy6Qv0Zv0JWZS3BN3KQ4Koz+IFNQfRD7q
D2I/9QdxkPqD+ED9Qcyn/imOUf8Uw6h/ihbUP4XRP4XRP4XRP8VM6p8iP/VP
kZP6pzDigzDig6hG8UG4UnwQf1J8EIsoPohhFK+EEa9EA4pX4hjFK2HEK2HE
K9GH4pUw4pU4T/FKFKV4JSLJX8VH8ldh+Ksw/FUY/io8yV/FTvJXMZX8VTwh
fxWryF9FJfJXUYr8VfEBvsAH+AIf4AtyQU7IBTmhB+gFeoMeoTfoEXJBTsgF
OSEX5IRckBNyQC7ICbnhV/Az+DH8Gn4Mv4Yfw6/hx/Br+C38GH4NP4ffwQ/h
d/BD+B38EH4HP4TfwQ/RD9Av4Ofwe/QL9BP0C/STObMqtfVcq+/fyT/2rwIl
e+v7SuseO76t2GaNezgvzlPkleN9ptnnT39XIpPGadfsHb6kscYtK778adIg
fQ/Lx/FX4pO+iJTfcjS8GbZT3yO6JHlElWIZ9H0/VQuNiig1V2PQK9Mx7R8r
smts+zDA9qFNhCy1unCeLj/q+3PAZ2LlAp+JlWvEj83eVZzjeF9qe4+5Ne5e
1nh8i6Ylw3Pre0I7316TpOmPrkoP/D5V6AVyW+kFclvpBec8Z5Cd1T7OYqKn
cAWiJ8KJnjrXXJToOfzfSwnSs/puIi/pV+GapF+FO5N+RVPSr6KXifSrsI30
q7AVn/z/ZDifkCOxfPH7Yv+JL8iB+fkQ8gNh2FW9zzf8QOEx5AcKH469WuBN
Yf3+O8PelTMLNNd4VOPefw8eoTHOqVe27x9pfN6+f6Rxbfv+kcbFT897tSpE
+yn8Fn6YWL9Fv0I/Q9xAHMF+lSGX2r9KT3IpPILkEoL4UueQaV9MY9oX05j2
xTSG3vn9uf+kd9gJ7+Xy2veB/MUMr6cxkx/r//8Ztj8myf4jjvfvXmlw/2GH
7X6qH6BfoJ+h321cttP52QxnWbjDoV9sp2PlxG3Tkp045CwPr/LJ9Gh/rOx4
vNOX1X85y8qP6vy5ZmusrOD2bknYVGe59VglL59uCfnN/NM13ugsi8ZMzTy/
b6ycuivr8kXnnOWxbvEVsw+NlTuCK2Z4/MpZVj+Vut2+MbHydsdfVmbycZE3
UrcZW31KrNwfe3vd0VzOctmmiU1ty2Pk5BF9N2/a7SzrV97erN6xGNniVcSO
BaVdpM+TO82nPI+Rb6t2OJB/kIssunKh16v4GNmpY81cI3e7yKZNW2ePOB0j
X47Pv/Tq3y5yYFi2mmX2xMi2a23BGXK5ykXn3nf/bV0Cvazhnkt2Ocv7b7b0
qukTK+s+GbhtfgL9Vikbjb+UQB96gF6gB+gFeoBeoAfoBXqAXqAH6AV6gF6g
B+iltkuRU1lkjOzfespPLhOd5ZvOXcc+upggV3j7Jk+fO8uxt1dXmp/AZ6NT
ZZqeTOAbckAuyAG56o2pOuLYlRg5/uDGi2emucjPVY8XO3EgRvpsOPny6CMX
WYTkhR+IoySvmEDyimokr2hH8ootJK+oTPKKIiSv6EzyiqMkr5hG8opqJK8w
5BXXSV5hyCtqkbxiEMkrXpO8wpBXjCZ5RT2SVzwieUVTkle0IXlFFZJXlCC/
EG/IT0QL8gvRlvxEDCW/EE/IT8Qy8gvRnPxE6QF6gR6gF+gBeoEeoBfoAXqB
HqAX6AF6gR6gF+gBeoEeoBfoAXqBnJAbckJuyAm5ISfkhh6hV+gRel0xNaDx
tSD9vd9gz2RJ0xV1/N+tIim37M7spfHK1z88Pyw0bnuj/8QjDTUOveR5Y1M3
/f2gVTv/3/X+uV3ERcRJxEXEyQ/7ptQ/LvS9LBdt3v6zk+n7tSdPLnesTi2N
Cy280yFpTf3+wGdly1OtmmuM89SHsoxdtLqBxrJuxNmSXTReapdX4/52eWNF
fqKv9uk9ib7D/4QdJ/oKHyD6Cq8i+goPI/oyH40jDvczzqRxRe1bjiR9yWuk
L4f/N7PSg5VcidUL2lX7q0a74MOwg7xAdlJ4CtlJ4U9kV6U3K70OvyvSbozQ
elre5GTVz0UTr2e8l8F7mn/i63xo26+v2jj+v9u2MUfmN5kaJmv3yv780FF9
32n+I4E9K9/SODLwk8uVt473rZ8juv/ox3jPgvcueM+C9y54z4L3LjSfjxN/
xrcJzBboJPxHFOuzKyEOjh3T6M6Ouvr+9sYVMno866K/685ex9d7+HAfUWbM
msirQt9ndKz5slRvumj8W46kc9Yt0XgT6cHh/vdapBeF85JeFA4jvYig1RXq
rK/iLi+PnfXz+AibSvH8CmERTFileP75c3TqESMD5KX1Y5MU+ZhKPpjTf1vv
bQFyb40Xk3OkC5Rb3zRY1+1kgJy84tjoLAUC5ejS+VZ0uhMgW31bOjhD5UDZ
eHbggrbvAmSB6oN6p24WKHO8fj29lVsq6bO88W+2bvrc2Pt35aa1nB8kC30d
Or3TGv0dX4fMO65lPqfxooYvI5680/hq29ce69z194Cg98pun0A5f2avc91f
6/+9Q79GP0e7/PtBTjexfEEv0BP0Aj1BL9AT9AI9QS/QE/QOOyxulGTUjvGh
Rqrvr8iUal6r9231PTojhz5ZGLlb48cfc8SX8P736xDgfSSfeEjyiSkkn9hG
8glDPmHIJwz5hCGf8CL5xI8knzDkE59IPpGjXiX3ohP0PaJ/DhyRLcVGjZet
OlDr4CWNn5KdHf5HcAbZXbwl+zp833mN7KtwQbKvwu3IvgrPJ/uqdQbWHeAb
ckAv0BP0Aj1BL9AT9AI9QS/QE/iGnJCL/18i5EysHFZ6WER+JQw/U3GnXDKf
6KLtQkXq33u+nD1f/w9Bq78DBnZNre8tu91j8rzDDTXOTH6p1pHDyS8Vvk9+
6XBf279dZ+5Kuvzxxqn63uAux+JyzTqncZbJ8wYM8NbfI7XZ6CqWxuj8Mmsb
lh23283hfx8z3f/hwNui+v8hEjsu4RzKs3SBH5rm8pFdJuZ6c+oKv1fHkY/E
ygE+wTf4BN+vab/K4X8nv9J+lfpOqjW1r/BOal/hTtS+wumpfXXupzi1L9JT
+8ouj0huh/+Z7EB6UHyBT/AFPhPLh5Uc4Iv/Lyf4RBxFXIWd+P+Cwm6YJ+5w
Hj/Ar5M+Z/13jqwbS0zUOHeTUw+7rQ+QuSmeqe+c31A8U3gNxTOFp29YPP/6
WX0uaMPF/MXmvNb41Icz9xr5BTrcJ93grzt+3pEaj3KrXy1FQY232y5M/Fgv
FeRU/fyf+jHsBjvCbvz/QhPLd2L55P8/GhKzNseRCqlUiud+hB3+f3QZrZ8U
HkjrJ9GG1k8qjgfT+knhwrR+UngZrZ8c7tVDu1bt8P9b+Se6VnxtIz9T+17v
yM8Uzk5+5nD/dmLHUZwrm0L2U3gN2U/hI2Q/UY/sp8afYWQ/hTeR/RROLF1+
/3di2zk1KU+F4/7h4vWNox1SLfERL32+zE8eFy786449WH6Tj/AZveddvhzh
IsfFamGDDvoIj0d97jYoHC4+BPUPXyB9xIQODd+9vaH/7yaq84Mmhb9pvKpL
21PDbI7/L5vYfo15KOaX8GvMSyvSuOrw/zqtqT8qfI/6o8JpaBxWfCVWDtyb
YJRX9yhEUnmFV1D5RJcDTuy6hP9/Lr4b+Se5S7V2u5Z3mOP/+xzbUtbnh6Ua
Hzq/IE/AQ433lR95zbmpt4iqePddvhPh4rT07jfjrreosCPNtIjH4WJyxXK3
13j6iNxtkuZL9SlcnJjw9cCTFPo+iPYeY9b/UELjWVsaLnaq62P831j4vz6X
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
wW8P9njJ35zu9n3TOFJe3XzgbNfLXvLFtSaP8/8aKU80ObDY5YWXbLX2TtVB
XSNlgewb+nwL9JJRIXV393WPlI/n12m+qqaXfHt6VfaaP0TKKb7fytWZ4iWP
D/u2OGO5SHmzTJYlQ7J7yae+NYd1qh4l4/deG9nN5injdyxaH1QqUu6/c62a
818J+vDyq/l5cCTuQ1Ap9AS9QU/QG/QEvUFP0Bv0BL1BT9Ab9AS9QU/QG/QE
vUFu6AFyQw+QG3qAXqFn6BV6hl6hZ+gFeoJeoCfoEXr1Jn7FAeJXPCF+hTfx
Kwx+RSHiV/xF/AqDX3GU+BWTiF9h8CueEL/iT+JX3CB+xc/ErzhN/IrrxK+4
TvyKpcSv2Eb8infErzhP/Co+wTf4BN9oF3ygXfCBdsEH5IKckAtyQi7ICT7A
F/iGHOAbcuC86+Xd79uF3NTnX+9lODx4vrP+TvDl5Gkz02eNkZcO3z5a7YCr
unezcvw67+UXNf7BP0PXu3NdFM5cvdtwpw8aZ5t8cGb6yrp8josBv5dfpvHO
Vtt8dz1y1/fWX9p1M6Cz3sebtKn80zf9HO8P/ad9vQp0DkThs3QORI2DiR03
EzvO/VfjKsnpJ4+mLnRnVYNghX851ffN7t819ui+J8W5b8Hy4+HooX2W+Rnn
4ENk3yd3ispdGqf0WPQ16QWNL86u8LKQm8bHjkRny1ZR491v33aInaBxYvkA
/rftJFaOxPot8H/lp1b9AH4LP8a5+S2ExQXiV53HvkX8KvyE+FUY99Ia/GpM
/GpM/GpM/Cp8hfhVuCrxK46QPdX57Z/Jngo7kz31/wCQ/sUFsqfCh8meCm8n
eyr8geypcG+yp/7fRbKnaiexfCWW7r/lG3aDHWGXxNrRSu//lV2X5ar496tw
V/kmasuhk7/EyCnpLrXanM9Vtqs/I1Z0ipGDQhtf6VXbVT6d1qvv2h4xsqPH
49JFu7jKFhcaXosZECNLHimXp1wbF/l+rm/PwsNjZL/XM8LdPrvIZRe+7Bnb
PEZ2CqmeM1O1hPojT306WClGllmU2ntbQj/Ilb7egab5YmRUvdq/PN+VgF+P
OjwlTbSsOGjlpXtp3eSAHfMXnhfRsuWLgn+8n+gmk+Rv+GJL6WiZdmq19bmc
3KXPmWmZ02eMlqdLlp+b472rTLt4xvrH7RLq031tuNdN5vkzX/Hjhf1k/36N
RjdsFiJTlc/2WFbykw3ja2Sv1jlEvl6edszGRn4yf4Hyl0oNCpGnnCN/XNEu
YT4+o2ivApNC5L3KU5a5P/WVhT986llwaYg8963h+z/H+8kqZX7MVDchjswO
HvFzhqX+MmvBc39XfBkkIyZ/3bzrD3/5x9ZSZe9+DJKjCueJ33rOX051rVty
7K4gVQ71UA71UA71wDfkAN+QA3xDDvANOcAn+IYckAt6hx2gd9gBeoWeYQfY
BXaAXeBH8Cv4EfwKfgS/gh/Br+An8Bv4CfwGfga/g5/B72B3+IFxP6CoQfcD
iip0P6DwovsBxe90P6A4RPcDisf0PkVE0PsU8YLep4jb9D5FVKf3MSKY3seI
w/Q+RmSl9zFiPs3HhT/Nx0VJmo+LvjQfF0NpPi5W0XxctKT5uPiB5uPCmI+L
FTQfF8Z8XKSj+bhISfNxsZTm40ouyAm5ICfkgpzgG3KAb8gBuaEHyA09QC7I
CbkgJ+SCnJALckIuyAm5ICfkgpyXnK40bXzTXW4u8i748nubnLG8/E+3V7jL
30aFDvyaLFrOW993X/nHCX53ZPSKpm9s8nGB5V+zJfWQjz8+XPR5vE1WnZFz
/aSfPOTYO/vf3+1uk9vPd+ry5r677DZ0TxrvOTZ5rbZT0ZNJPGS/dEuuHFhk
k5+uT/NcHuYhhx0ZMarXSpsM++mHKwNzechxrdsV/nGdTV7Ik3Xbygbuss+8
P3J/6WmT08a474pf6S5f/Lb0w/CxNrnlwfaP90d7S/+ftq5vvCBcbilZ60uf
cwnYd2jOTAfCZf1q3ZOMSpifBeypvvnjw3CZI29wzsLlfOTRgw+Pyg3hctqA
pl/CU/jIlr1nJbv7KVz6rjl1uWj6hH764acvI7eHyKtOJZIXbeErv1W6lHbk
hxDZqEeKgxfS+sp9J0c37NQ6VBa6lT02NCG/avHAdm53Q2XOnXvvJUntKw/d
du+aum2oTDK4gO9y4SsnLB+88MTwUHm0/KaCVer7yvodvp36bXGonByQtfXH
rr4ybd7unyP2hMod0365lmmor6y4c0ObqqdD5Y+FWviXG+8rDzRZs7jd1VC5
jt7vyvL0fld2o/e7cgi935VpaP9Atqb9A2nsH8i/aP9AGvsHMiftH0hj/0B2
of0DaewfyM20fyCN/QPZjvYPZCvaP5CXaP9A6Ql6g56gN+gJeoOeoDfICbkh
J+SGHqFX6BF6hR6hV+gRelV+AT8x/AJ+Ar+An8AP4BfwE/gN+gX6CfoB+kXe
ddmL3QuMlkP8njUuW89dDp72/EnRFNGyTvcke08tdlf9BP0G/QT9Bn4Ov4ef
w+/Rj9Cv0I/Qr9CP0K/Qj9Cv4DfwI/gN/Ah+Az+C3eEHsDv8AH4FP4Nfwc/g
V/Az+BX8bBPpU1wjfYq3pE8xh/QpulLcEVMoDok/SX/iNulPTCL9idKkP2Ho
Txj6E3+S/sRk0p/oTvoTO0l/oj/pT1wn/YnhpD/xmfQnxpP+hKE/YYy3YjmN
t6ItjbfCGG/FYxpvxUAab0VzGm9FBxpvxUsab8WvNN6KfDTeCkHjrfibxltR
lMZb8TuNt+I3Gm+FMX8QMTR/EP1p/iDK0/xB/EDzB3GE5g8iJc0fxE80fxCp
aP4gomj+IAbQfEcY8x1hzHdEAM13RD6a74iXNN8RQTTfESdoviOa0HxHHKT5
jqhE8x1xheY7IhvNv8Rcmn8JY/4lImn+JTbQ/Et0pvmXyE3xRPhRPBFfKZ6I
KxRPxEWKJ6IaxRPRguKJyEbxRFSmeCKMeCIOUTwRRjwRRyieiFwUT8REiifC
iCfCiCfiCMUTkYbiiZhI8UTJAbkgB+SCHJALeoWeoVfoGXqFnqFX6Bl6hF6h
Z+gdeoLeoCfoDXqC3qAn6A16gF6gB+gFeoBeoAfoBXqG3qFn6H0rxV0RQHFY
bKa4K4w4LOpS3BV+FIfFDxRnxRWKu2IsxWHxG8VlFScQNwZQnBUFKO6K6hRn
xTCKuyqOIK4gbiCOIG4gjiAuIE4gLiBOIC4gTiAuIE4g7iAOIe4gDqHfoh+j
36Ifo5+i36Kfot+iX6OfIw4hLiEOIS4hDiEuIQ4hLiHOIO4gziDuIE4hbiFO
IW4Ns9+T5qH2URbZ70nzZP/j6ikP288XarznfbWwkuv0vRO9X3pWzP4yUqZx
ezmvYyov4xx/lJzR6FvNUoU09tro5RneUuNiGyptHTzUU+HsCWNT7isaYz/w
+aDDZV6HRMpfR7c5Xf2Yl/qfHK9jNVOnf6vxGhfR40uk/j+doBEtb1bIrP+n
Ns+aIlnK/axxnfNhfUsv0Bj/s1quw/S5aztpfGbwiv3FF2ucZtDy3mNPRMrV
U9/vP/CLh+K3Srqtsk+M5r9szmxZ1//mqehf35s6y8lHnux/cz2lx83cb2a/
0Pdk7Iqvemf+ggT5rh1YHH/aU8lTuv2Vbu3yaXnbBe72PDlKY9jNyq6wm5Vd
YUfz//3+s50Sa3fYEXYF34m1K/SWWLvCTom1qz1ZHS2PF/8WK1+4KrzgwpFk
7XO6KZzm6dkLRZPq/DZRO8f/MUPfU9E88EuDq331PRVB3q47v6zQ+IhzqvDo
ixr3TBLds3hSd/lgRZ/VTk31/8YfPv2389KxGlv5GfxQ/b+khd/Bz2Bv+Bns
nVg/g1+q+1vWlZ655oG+ByV+0Owtk2P0/7wE1Xp9oWdDb5F/SZOTPzyLUP9X
7CsXFzuQO1LhzcSPutcE/2NVivhRuDXxo7A78aP2Den+UQ+F6f5RT7GV/F/9
L44k/1e4K/k/+3/pKFGE/F/hzOT/Chv+r/A08n+F3cj/xUPyf/b/zZHiF/J/
LQ/5v8Iryf/Vd0OB5P8K5yT/V7g6+b+wkf8r/ZYg/1f4KPm/wpAbdoBeE2sH
K72b/+fbUe+wC9qHHRKr18TaCXqHHRKrd+DE6h04sXqHndJSXKHvuVZHi9YU
VxQ+RnFJ4TkUlxQ24o66VyaQ4o7CBynuKNyV4o7CZCc3sZ/ijsJ3KC4Jq7iX
2Lj5b+MisFVcRNxM6p+ja8D9QFl2cW25xDVAHmjw5InPp0Dp9dIrx8KoADl8
2byGnr5B8my+A0vn5gyQ5d/UPOuaNkhOHtwzbFa5ADmn6dDHdf4KlIPuu+V/
MTtA5u344ZbHYn/58ua5qT36BcqHb3alq3zTX875acbNndsC5Z+5+2Y7uNZf
1qm7OOh4x0D5isqJfFRPzKZy4gHVE+OonNhJ9RJtVyu/gN3+rd1hVyu72793
eB4kWq1/lPFkZ32PRujIHUvq5vIXq2oeXjOjZpBRzk+UI72LZGQHYehdGHYQ
Z0jvYhjZQUwivYtyZAdRjvQu4skOImBTs3XpvjnJR6sjivi+j5WxsbFnR1d2
lov8Mn/cfCdWrn3bbUaZt06y9F/uRV1Xxsqqt/Z45MzkLF9mnhOZYmusfHPU
ra+tubOc1irrp68HY2X1lguuLp7sLNdWDqxqOxcrf03TZ1LkUmfZVYzu1+dS
bILd61ScusVZFsyaYs31a7HywMzss/becZKBL+cc+1g2Vpas3WpsZFFnmXvu
r4dPN4mVdZqnmX9mjrNsfH58xa2dYmWFLMk+9nzuLO/enrHFq3GsFB9vVE5T
wEW2eLEwpln5WLkoVdqRVcKdZYVlvtXrTIqVJ+j/fuQQ+r8fOY3+70fmpf/7
kSfpew9ZlL73UHqAXqAH6AVyQU7IBTkhF+SE3qBH6A16hN6gR+gBeoEeoBfI
BTmhF+gJeoGeoBfoid43x1n+79Njkh9+IZaQ/MJG8os/SH5Rm+QXXUh+0Z7k
FwVIfjGU5BelSH6xnuQXL0h+UY3kF1NJfmHILwz5xWGSX+Qi+YUhv6hE8osF
JL9oQvKL2iS/eEDyizIkv2hF8ot8JL+SC3JCLsgJPsE3+ATf4BN8Qw/QC/QA
vUAP0AvkgpyQC3JCDsgFOSAX5IBc0AP0griMOI24jDiNuIw4jbiMOI24jDhN
5zb85Ywm2ZOdOxMkm88PC7j7k7/xv3xB8tKAkz06DdP40NPG1Q+98FN4s1ut
iPHZdD7iPOI+4jziPuI84j7aBR+JbceKT8QBxAXEAcQFxAHEBYwzGHcwzmDc
wTiDcQdxGXEacRlxGnEZcRpxGXEacRlxGuMCxgmMCxgnMC5gnMD/O+B/1s5d
61rgnXCi7wzPxoocITl3t7+usX/DKSdzRjgr/GrB+xt/N9D4cOW2P6ecre+9
KT2vy9eSUuPDL/pMGnb3u/zCQzMcddL/v0ff5zuLnO0X/R64VuNz8WVmNu4b
K34h+ZSdIkg+fU8RySd/J/lUOdRDOdQzl/NT/3OHe4UMuWR20oPCfqQHhV+T
HhQ+Q3pU9wwdJL0oXIr0orChF4XLkl7kZZLbuP/TWeYlvSj8b+kCW9FFu/he
1up/e6J7ReZol03/X/CzDj1Obr/uo3DP4k9uTP+ssVtQ3eddw3X5eSPa9P3S
U99jsT++5KCgRRrT/2b6yBWZszUfukjjuGIxZYbHa/zMyaNqU+dwhTccfVu3
YNZwdT/Tv/VL+J2VX+JcMc4Z41wwzgnjXDDOCePcMc4h49wxziHj3DHOIePc
Mc4hG+Ov+t/Can3SuVd8F2t8p+5k+b8/wPif2idkJ4W7kZ0UdiI7KWwjO6vv
qOeQ3RTeQ3YTNrKL+v/nh2QXhX8nuyi8mOyq8Kgmzd/Pj3eXuXrH+JwQNtn5
5rcmd3w9ZPtw1x9mV7DJ+vVnnIwp4SFXbH9Rok1dmyxxJUe+pt085L26FxsX
bGmTWVd0/CPrQ3d5O+uMIt4FbYoO6IIO6IIO6IIO6IIO6Br0xFiiJwx6ogvR
E8uJnjDoibtETxQjeuI+0RMZiJ64R/9Pl6Bf+//TiQ30/3SiMf0/nTD+n04Y
/08njP+nE7fp/+lEHP0/nYim/6cTywbXH//xhxgxMrvtZpM7rmJn3b+GvIyM
EbnjpcvQQDdRkf4/T9yi/88Txv/nCeP/84QL/X+emEH/nydaVyvUNFXTYLHr
bbU9P2bxV/VAB/VAB/VAB/VAB3qDHqE36BF6gx6hN+gReoMeoTfoEXqDHqE3
6BF6gx6hN+gReoMeoTfosVbnOHmqYoDM/sOEmUN2pFIpnk/t3/zdtYuhRuoj
2zaJHJruY6iR+sgSxS4F/RYWZqS+MhvVFzWovkrxfBrREdOJrjDoiHZEVxQn
OsKgq/q51f9QxQQuKOZ730f9P3Gbsj2Xe6TT/1f88869tzpV1LhZVrfga501
zr2kX5X6o/W9LR/exi2JWa3xthJH/n50XGP8T/WjZWNfZRmkcc7Np9Is2Kqx
026Xxi8Lh4qxH9dtLlxW35eUpunyaT1aaqz255duK+bqr3HDmGGT49No7FX3
+NYlL6LUOGI1ziR2HLEchwy+rPgGH4nlG/tUZWi/WO1bXaL9YpGS9ovVPh3u
HRpD7SscR+0LZ2pflXel9hWuR+0rjHuJ6TtlV4Uz27831Zi+N3VTmL43dROj
Bq86suCB3q84da5wcY/1GlftUu73fSc1tpITGHxBbis5gRMrJ/Tyb+UETqyc
0AviAuIE4gLiBOIC4gT6PeIA+j3iAPo94gD6XWL7KfpdYvsp7hm6bP++V99r
3d/+fa+f6Lbb88SZAcFqnVHpWeuWvV7qdcfi9slOny6t86fSek3dQ4R1i7Fe
U3gjrdcUbkbrNYUv0HrNki/gxPIFOcAX+LRqN7F84x7/P2Zl2rikm/4fylGH
okbtHWOTfbINftD3uTvFqZk26XM62dA5YR4KL2jbL+3OMhr/6Pn10LWuGo/f
UaP7y2r6Hp75Jw6dqz9DY/x/+omLT467Lde4dLeCTQOOady6g4fHiHs2y/9N
BMb/2relcUThX2gcUfhnGkcUjqNxSN2zk4f8VeFP5K8K7yJ/le7kr8b6wVc+
JX9VOB/5q8JWegaG3v6t3qFXK71b6dXKDquJX3VP3TDiV+Et1L7oTfwq7En8
Kjyb+FU4E/Gr7k0y+FV4LvErShC/xrzeXbQgfhU+SvwqDL6s+P63fAJb8Qls
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
2gvDZDzHbECXwHUyLrnjXdI1R8bRzruHbHgoY5cehuJSc/m9m93Ewz/33fyT
bzGfyfuIm1B+YAvlR9R3Z8qPwP0oPwJzO8DtAtd7Y+0C68F6sR6sF+vBehlL
15ie/N8aaz6314uDbhgS+e5GvyJe13XDCm+yD1k3qibwnMY34g/EyN+fR9Wb
eT3cWuz74XkjnkfieSOeR+J5I55HqtbpkP39pfK4jv/ffV88UCZHyvha/KP6
U/fJOLSXh5mHvUrozfkwpqexfLHenA8+lxdE51nFOb0ddJ4VplN64r+P/j/c
IJrSE7g7pSfw36X/pif26Tyh9OT3XogHkPIl/l99iAeBrxAPArNexvRmPVlv
Y3oZywfryXqzndhubAdT7cbt+Lzo3Z6LnOT329BB0b1hFwe8RusJot1pQ+sJ
Aneg9Qi5XaL1CIH9qb0Q70IdpfZCYF63+oHaC4Hjqb0Q+D61FwLHUnshsJba
C8zc691q4Hk1Bl2LvhTroMbszuGhxcVq7DvhyMNKddVYUJI2dugbNY6q8v7L
XD81lkx/OueeuSNOWeeltuimxle2dVaNcHHE2b6TGiwYrkY/s+jUkNVqzKub
7Rv5wAF9G9lk9p8sv+tWcPDsgeQtMqb/aTVa1NvxTuEs44w/1/dYGyjj2S6H
1vpFynhb+Pz1vZJlnHe238aJB+R34A7U6tzHEeV+YFD9GMdrbxzwi/mgzdUb
O0r/ZWr0alRNpwyRcVj/4+sqT5Fxe2Wv8YZLaoHf1Tk15l5l+TuXe64HppZ7
rifME/PGdmC7sB3YLmwHtgvbge3CdmC7GOOBsan5NJW3oMe4ZKFeti9/b+vU
37JHjPwOX9jiVX3uFqnRaomh0bCzDsKOHI/lcDyRjhSP5XA8lnOEeINg4hFy
iDfoRzyCxBtIPMJd4g0mE4/wgniDWcQjSHZhO8EoSl/039TOqMGC0hfhOB7r
wXqxHqwX68F6sR6sF+vBenUiXsT7d9ROqqE18ST0Yj1ZL9YzjtotsU56jNot
gbl//t51U07f2LjH1HGMqeMi5sGL2hmBL1E7AzHUboj8b6Z2Q+BcajcENqd2
SODd1A4JvI/qkxjP9KX6JDDbw5/qk8CvqT4J/DfVJ4E9qT4JPJLqk9F8MTZV
b1N54HwYy6epepvKw8ZzHm8q/ukKp+1POQaVt5cnjp7q//SbK5SYhc7yWqqC
Ha3qvbhRWwOpoZ8GHI5WgXWNGhbzf9LAx5KSD5ELVdAue1XQ2HEaSN/YI7PD
ZhVEP2k0K6CFBp6efvTcLVwFrg3Ofs0M1sB8i9hxK+JUcGTCsBjPIRqoHej8
3CpZBdyOGOt3Te1HTe2Xud3l/xT+L+H+/4iq+tI1PbWwvPj8rey+SpjhX2m+
dX8tgFO9fjsKbeD8nGXZZ2Zp4U5K0DVtTSWUWU+5+ulXLfjstHq3oDx8w8hP
7vZt5P1i/P7gu3o9S8NyZLzfKSljZBf5nb85D2Ydna6W3/X7/cueZvuaydjM
qfjA0wEqqHJh9o8Jv2rEfq8/n6YMqWPQwssaWfdTCpXQIuHQiThfLaT0qbip
+zclXKhZf6O1QgvHlj4cNXSTEnLjrx8q3aeBltPrdrLpooJ7G6oPiFqugZJ/
3PL/13Z2K2zTd2vIbaCCC+0sJr3K0pDrr4LhB4YHRl7WkNtDBR9rn6j57Y4G
PvzjDpHfW8z3+Ly5d30VFBW+Wbf+vYbaC1DBxDVDi9LOytjUd3kZs52+d5xn
bB8S71Mytg+Csan7Hoztm2hO+5BEe8//U8bmgao3vWP5Q1crsS92T1rPClvj
rHDsM4fYJxvcMWrHg6Mln61wSP2PE5qddMcpw7Omag5Z4SX/Kt0dFriLeIO9
Std8dpLlzF3eTxl6T5bDclkOy2U5LJf3jTqSXjCO4kMGxYfBFB+mUXwooPgw
juKDpIfYfxpDegjMclguy2G5LIfllsVduXJshA4DnlXIvNhZeo8tRIfmSUs7
vne2EniYnUeTwZGWHI7jwSDyp/oUooNKFE9gbX5BUtM/LHGgwyDwq6FD3zTr
Zgl2Vmjer3iu8q47fuleFOW5xgrfz166YnolWQ/Wi9M1ptdQkgsulA6UkRz4
SnLBjNIBKV3x7rqp77TPeuJ3dV0t+RwF55t5MJZv5uXwwZtxlf/So1nNL159
Rikw+VV+jT6f9RhtcW/9ljgFRtTNy9xZ2YBlT7Ot321QYMiw7NCvVgacdHFX
pP8JBVaI9Lue28aAN2/Oilk2QYGLOpdpl3kbcHfS8v+ErVbg53PfCnVDNLjw
SKeAHy2UwmV/vldrRtKF923dNNj+9tap9ZXyekvc07dvC7opBf7Qs+PpPds0
MPvC9epzVirhU3xOuK2/fC//rYTuR2LzLfC9brnH3Qg9/rS8XcHzVbbSvLYL
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
WYdjUztaw4nzXXq9tdTBop6xj0onWUNMSPRf3z7YY86Dja2Xah0xm1yYSf7C
Zf/OOf/Z7/jYCjVzW5WlDHbHLtHbnzY0d8U7G0tnhnRVYTG5IPlDJwoPrhQe
OBzH43Acj/VgvaR5DJDmNcR87oHN4aB7aAMrP09xuH1GI/ah/VXPvvftTRqw
WXv4j8qF5d+/bNlx/74GQgOKI1X9ldCZeMPOxCN6EC/4I/GEC4kXPEk8YQXi
FdcSz3iSeMWqxLPYR2vsncy15C/0lvwF5nKT+nfmo3c+cjmKGf+T+6YuMu5z
t1G/biOtcSuFE/3pLAoncF8KJ3DCy/UVm9rYiHvf2WV/vod5PmHhsr/t4+G9
ffso8GidiGC/Uj2qf/slptdIBc68Ocvx93d6dInBrRFTFNhqyaK7gR/0qO38
6uKy2Qr82iZl55VPejxG8cCR5EA0xQMXkgOtKR5oSQ58o3jgTnJEPJbD8VgO
x2M5HI/lNEty39S6r73YBxedGZfSK0zG7BoLx/d2NKXv4h6PmfTdqD/jE65n
6rS47AaP7Noe79avGkxbNV+XXeQGA1W5GaMnVYMmLsGuIY/d4HK1bqmzEqqJ
cByPw3E8DsfxYpSNe5zUqNA3uqqi4QcNps34OKxDPRWOfFLgvN9Mi7cenZqc
56PCZb3W1vOz1YpwHI/DcTwOx/HCfBYlTdNo4bec9BtWbVUwi+JBU5IDUjyQ
5IAUDyQ5oM8OfdUzSt5X65h3uWz/WflefnbZn8NxPHG/OX0XLvv7XTz1plZz
J5w79KHf4UEOOI9caEn+wP4cjv053Gk6rwi96bwiSOcVQTqvCNJ5RZDOK4pw
HI/DcTwOx/F436eO8iNc9ud9tSO7vh62fK4SptqYrbJ5LJ//T9gysnm+mYXA
K1vmFKboZLwjv+60ga1lfCRsoZNugIwnkzxpnrUmziV5AieTPIG3kzyBJXkC
ly6+7Jjb0FZyXdFxtHXNni1sJdcV/dq2b1zcwVZyXfEthYM3FA+cKRw4UTxo
ReGgJcUDlsvpsFxOh+VyOiyX02G5nA7L5XQmxkXZfl1VFSec2eb4YKI7Ho0Z
cz5ld1VsO9cwLzDCXfhzOPbncBPpO0ym7+BP3+E4fRf+HI79OZxkZ4nPGsJl
fy4HXC66rkhdAff+z30eV7fkvrhji25uzV74Tq4u/Dkc+3M4Hi93oe+go+8g
fRf+HI79ORzPv3wcGZiWPEKeF0q5lPxIHytjn+b3demrZZy/yXOg3yEFrss9
rU+tq8PVY7ek3/C2Rl3PSZU9PXS4dUXPJuZB1ph62/VBppcO956seKBReb+8
lsKBFA+2UTiQ4oEUDqR4sGeKk8V1axv8bdLHwZumuAmX/fcThr2Ehcv+PC/x
ifIn8ErKn8BS/gS+QvmDzQmbh1cOsUdynTElH6I2D7SXXGfhz+HYn8Ol0ncg
1x5W0nfJtRf+HI79ORzzyjwzr8wz88o8M6/MM/PKPDOvzLPDsGiDVXn/u88r
uWxtsAGG5Hn8kj5aAWd+rhSS090AtvQdpe84iL6j9J39hRyOx3I4HsvheCzH
tY9V80VVHBA2rBlUsNJJuP/PHzSEhcv+/wWnX37Q
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnQmcVmP7x88zz5nmMTPVNPOMfU22hFD2JVHZXyrShkp6Q3vRqrShSLJk
e187LWSJkEKKqCiyRLK0WENke7P9f9+5fs8/n8+cz7nOPfe5z71ey++67vvZ
o2uf1r2LkiQ5tjxJsrpPTJPkf7rP0dVMV2NdB+s6wfdDSFfGhZkk2U/XAL38
su6Llb5/JvIfr2tfXTvr2kVXE137OK2L8m+nfC+KPlTX3v5fP6Xvo/RXRR+m
8i/V8x56vk/1OUjXnqJ3171I9wzfzqk8XdsVJ0ml3inRpcekyvdtdO2lawdd
O/o73HfS9aDKOVjXXiqnqeu1n+uxk+s9Vf/fR1d1Jv5HO3bV1U312kFpL4m+
WPRLohfwP9X5BdEVum5UZar0fJ7+v0D3BbqPVvoOos8XXUd0teiOostF1xU9
T/cSt63K9a+l9NbKk1VaqehzRBf7/7u6TvXI5/bXc91pQ123dwePWwP3xyG+
0x8NqZvK20nXLpnIw/g9q/Tn9K3hSnueuom+kra5bMqt9Pf53nzarjyjlGe+
rm10ba/0P5V2RlHMJ94tdl1vVL/OVZ4/RM/Uu48rzwA9D9Z1sa6eSj9feYaI
/reup5RnjvIMFX2/6Bmi+4i+W/TDonuJnqP8bXV1Fj1M6d/ofpquUaI36n6G
rosoT2VfwTiK7qH75bq68l3dB+m6RPm/0HMzXV1Fv6L7EbqOysS8PlNXL6V/
qefmuvqK/kr3k3Q9LPpR1aef6MdEzxY9SPQFfFvvDWD+i+6u+0C+rTxf6/lk
XeNEf6v7v3RNEP2d7mfrKlKnnal2dWeMlP6i51hlJsaWMevgOTVPdOeimIfz
kxiHup4DdbIxNsyxvz0W/O9sz6nnRLctink4V3RzzxXW6OlKf07pz4hu5zn7
vOdBXY/t3UrvofT3Rd+qb92r5556vkP0A6IvFd1C9CDRjUSf6LKb+DvNzWN2
cnmFuVzPc21Xr+28512ln6/XxJ+s/jlV5c4WvVr0b6KLslFn5tjjrHldD+l6
jDmk+6OsGeX9XnkfVVpW9EbRMxk7/e+Bf7xzp667dM1K4l3+dzvf1jXpH893
6HrYef+ja43Kmqbrv6L/Zt6Knq5rqehrdb+Gcfe8Yx6O9bzg+UP972rWhOjx
/j/zdoPeXa163p6J+t3h+j3huvL9vcQAG+g6vzjqe5vrR70ms/78zg1+vsPt
4LmR11Zv0bP1rYO97p4U3bgo1uSF6qtnnZ7VNw4xr3hd92G6D6XPlf8pPV8O
r9O9m57fVPozzjMkiXVxha5uosd4fdD+i80LaPsF+tbT/u63zCvd79H1Eetf
103ua9o0hXHVHNjC+tQ7P+u+QfcHlO8H0WtF32deB9/bU/kXqPw3lD5Szy+I
Xip6hOhP06gDvOgVvbtI6WP1PEnp43VtUPpoXf1d74KMbMY9GzIR+Xis6IGW
bY39f/gI8hN5eVwS8qep10KBRx/stYBM2tvXof7fQ/r+A5Zfx2ucj9PVT+PQ
SfdD9L3L9L379f97LTcLcrHS677C63aueUGdJORHZbJVntRzvhfNa/Z0XZq4
HgWZWpCx3OFFh+v7vS27j81Ee//lNbuf23qb6nWrZetnyr9K+admYvzGeb7f
6PXA8xrluVX/v0XXal03szaU/q7Sl+vdyXpeno35N0H0CpXdR9edohfp3lXX
dZmY62Nc7s6uC226QB30vt5/qyjWwGjna+BxYNz21v97WPY3EH2R9ZgFnk8H
Kc/+2dAHkKd19c2flWeO6MWiL9I1SfQnup6AL9DvSnuKtZWJ9XeVvz1O7y3K
xHrppDJH6/kwPT+q/EfrasIaUPpMy75pop+w3GHtwCeQc7dkYw4jQwdYTrXU
dZXlIzLxTtHTzJ+fVdntdF0oerhlEzL0Ga+/T5KQofAiZCcyFF6F7OxtuYlM
vFT055mQoY+l0RZkaD/LTWTlA6JnmdcgE1lDyEhkMTwAGfmIecgA8wn4Bett
vGU6snKi5Say8gbLzTa6pop+0DLoNtH7ib4E3q/7ebp/AN9QekM9X8aY6f62
7u8o/ULmm54P1/OOur+l+0qlt1L61Xo+QM/b6v4G807pHZR+k56bMi66t9N9
VRK6A3rDGcwx5cm7zF2c570keDjyCZnzPHqRZf19lqeUw3yBv8PbV6qcI/W/
65Erup+TCZl7kdJv1/ORet7Z6e8q/W+Vd5eej2b8RO8r+gOvzTPNizrr3fGe
Y+eJHlMUcwz5htwoyA/kHPIE2fGQ636b0+5LYn3dlWyVLdyRLfBpePQUr+v/
ON8k/5+yr1LdHs+EfP4uG/wdPk/ZyF3k9WFap0111RcTe0v5l3uNf2x5+J3y
fGRe8q3LftD1TtKQx8hfZPLDrscmy/yfRH9bFDJ6s+v3sNv5gMeHeiDHqt3P
X1m2/Kj0dUUhmzaJPpH5mIRO00J06yT0nf8oT1uP+wm6n5WEzDg+Ezyyhleq
/CuVr7HS2ooeJfoQ1i1r2brTqaKHiT5QNAz9SbXtXNGfW779wPpH9iFfdD0t
eq7lNe15wnNuvt6bl4bsfgGZZR1+jOhbRJ8peojoG0SfyloXfZ3oVqKvEX2b
6LNEXyl6iujTWafoNqJPYf6IvlN0a/ijdeF++u7pSp+g54PoJ9HXiz5Y9EzV
pVz0vvARpdcW3VD00aKHi24gulL3Q3VfqnJ2V3p3PdeD52he7Ky+yPG+0vvq
viN9r/RGum7R/xopvVjpOzMP9K2RovcWXc/fX6Iyj1SeIXquD08Q3VV0Xeav
8mdFby86q/RfdP8T+SE69bcOEN3f5TcRfbno3UVXuK2vK//rErT3qKy7ddU1
L3lN6dv4mwtZN/pfLz1vy1wVXeZ6/he55joszcTcOonxZO14DnT3uB+TiXnI
vGvt+cZ8PNvzjXnH/DtF+a/wXDpT9FDPvTaiR3ju9TA/Zy79rfqX6Pk30Xd4
PsNnrlPaVI81OsJJnvO/ql7XI391lXoMFyWhQ5zoNXK13r3Zc2mE6EmeS6NF
3+h5OFD0NZ57g0VP9JzkO3wP/elvytC1RXRGeU4T/bvov9AFM5H+pur/supy
ta5nlOc166MrRB8heqLo+br31X0tPFl0b9GfwQuyoR/zvxmiDxDdH56leyfd
1yjP3Gzow+iQrxaF/ouu+IjojqI/Ev2a8hym53F6fkl0E9FXid5e9+W6v6U8
5yp9suf6Drqv0P1t6iC6vegP4bnKs7/rN133DrqvVvpLrtc60YuUp6mex/At
tfnQotB1F+o+UPf1yrOd6DfpA3ic8h/o/z2RjXVLGypEb9E9x7iDw3h+bqf0
C0XXFp2KblMU66JM9P+UVotyqjUWWoOzdR+q+xBdE1TGL0Wh//yCvEhDV/pV
dJVl6TLRT4o+Hx4vejeV+Xcm1vubUlJzej4X3p8NGwH5Psc2C2P632zYKcj3
E0WPNT85TvRV5jPvpaGToYNtq/Q/M9GWctHti6L+9UR3Koq27yj6r0zwBPQg
dFV01E5p2Aj0W4c08BDmSZIJHVtJyW9pYB9/JWFr00+1kYtK29Xpz2cCAwL/
QS/n3bq+Uxb6+9Xqv/G6rkCxz4Z9zjz/Vf//NBM27xkuv1zXLmnY+cz/3npn
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
r6N8+Nvm4jizk72azA32/g33fP7ZfIOzuH9JQ2dBJjKOyGjwJ/Z3gkEhRzZ5
XjFvf/Q6Wl4SvwfwQxo8inN20LuYz5s9z1l3P3re0ofooJxTSdnUi/I505dz
wct8PhbnZLG+aBdzro15MIe3H2O+CH2u5yZ54OX0LXJimNcRa+A6y0zk5dHm
/+RBRjDnyTPB48W5h4wp8/CvdOueA95FtjJPP/C8pT7sk0Eu4BuFRqZh73Pm
YFePEThIS6fP8XgxL57x/HnW9Mled8+afsY0a7CiOMboA7eb9h9jfgJfmGS9
a4vH7u/y0AFXlcaZyJyZxbnIb+k+tjjKq209ET0NjI14anA2MCr2ZaNr8VsD
6N3o4j/RZ96zjaxEh0AHeKZKa1pz4OfK0F/oN/QWzjTjO9QZXYL8U637UU90
XcpCf+VbxIn18/OSkvidj9/T0M3Q7Y6yDEI/28vzkLZPtMwlz55eR396rd1t
noDuurPqeQR7UWuHXfaDfU/sy2J/FucqH5WLWFLONOQcmGk+C2ZU7aBXql8b
qk8f0nfurqv+F12petb1j4PRvzC4urpKkWnExOFLUJ6RurdXnuG1xIsrtG5K
o9/oP+ybN2zj9KkVNGkbSwI/5fcFHi0N/b15PeWpjv/10n1WaehcLZV+bO34
bhPVrVzpy1TWXJU/Ut/9WvTLor/TPPhN1ayj/88vifOlsdPqV8U65Ixt+oi+
eqIszlT5sjjs6C4VQXcqjfi+jcVhQ/dU+tf8X+m76bpJdbiubvjK8JHhT+Oc
HPJgNz9bETGBDVWv/d2fn6qvOlZFmV2V9kJJ1Aee8FFFzL9D68Te883maYdW
BX2I0jtXRVs4M3tz7ZDhGd130nNe5bdSfRZWRP8zDuOKw+7ENj1H/dhH37tC
dWiGHlsS57BhO+P/w46uqhXnGvHcUf3ykPK8q/zb8TsatbaeScedPcYtKwMv
+Ex519WOep+s+VO/Mub6WNGP5OOcnRn50D2beY1wHvmQ4jhTc2pJnJXAuhxb
GvOxr9r7cEmMDfEHM0uif/FPc1Y4/VCvTvRlN48RvgjKg69zfjp9e3Cd8EX2
Mda8R1n0FX1Wt1asgV38DcYffInfCGLfPnsvdq8VMbo8N9S7u2KvlIYtQP+j
O1Enxhy5cFdZ9OtQ9UHOY8RY7ZgLvzVzrlUu4n2bUOc6cR+v/BNKYlzedH+z
n7Swt5w7OPxjYEFqXyuthV4q47JcnJvOvOvquVenVtSXdtyfj3IfysfaYI1c
VRm/NcH6A2vYvjLGooXKfr40ZN0d6r+eeh6v9N/1rZOqY0/nFtX3dNFlyFGV
uaokylqXBk4ATZn8bsg39olcYd8jZ4UN8f5Q+DD8eIjpaeYDrCvOZOIsKGLd
n8jHvB2UDx8cv5excxoy+UPLZe6rTa8xzbynvI0us1918Jif3KY1zoNvlPrR
nr7ed0M7uQ813VXvDhJ9Zd5x3CXhs9jsesKPOMOKZ/jqmvLwH+NvB4Mc4Pwv
VcX6KqsMDANsAtk0zvHhzD32z/YvCV5NffqZBv9Dr0OHvNz+XPyDz7me9GUf
9w97nAe7XfQ5sd59XQ4+w8v97vnV8a2h+WjTINcTfAkMEH0He5e5zjynv+hr
9PH+tQKfADuB39xZHGfQYmcPtPx8vDTO+5ymubS8ImRH19oh/5CDYB7dzaMo
89hawXPhE8dWxzgeXR3f4FvIujmlMddySt+xVvAc9KwNtUN2/6s8ZO5wy9kt
9ULeXKXvdyiPd4eIfsJ1O7A6eMYQl7OgNGTyBOU5qzLa1S8fcQDXm1/uURn8
q2NF8A54CNgt+zBYu/zeEL8ndon3rPU0zZ41/Gn4kNHVl9QKmVtzHpvSPvCa
ZA2tMt0wF79jfa3XIXM3Uxl6B3oOOtNOtYLf0t7Dc/EbeMyz0WrvTUo7oV7M
i16eG4zPne5n5Cd8n7ZtKfH+uuKQHeM9NsxheCdYOvpUqedtM/NesFzkK3FF
YKHZiuCbJXVDzsGjl1aEDEOWfVARPGp386kHtS6O0XenV4X8Qw7+lo+4dOKr
iVEfno+5ypxlvz577OnDJv7Ni7P07piq6Iudy0JvYO33rw45DQ/oXR0yEv6/
Y2nIeGT9CXpvdUXMpx3LYu5QTs38qRM8YHhpyH747M/56D/mK33I2QGDXR94
H1g2+CdpnC8AJsq5etDk5Sw3znTDRmR/2Yhc7DEbbnq3TGDM5KE/C/9jTwj6
6jDrrPzG02CXz1whvfB98qHT4oOmr4hJYIzArFn71OFylw890OmkDTI9zOVQ
5kSXS5njnIf6n4vOqX7oURbyBxr+cWXd2O8yszTW2zqvXdYV6+ul0pjvrE3q
Prdu8GBkC3on+hJ607Xq6xHIFN2/qBO6yOq6ceYAcwgZx5gxdpepLutcj1p1
QoYhE45RmT3zoY+hl70nejrrLR+/ucJvr7xUETxtmPnaqHzwQ3j/77VjnqAb
wsvgG/CP/vngfehcnNeHPgE/eKpO0KVap+WVsb5WKC1bGXL9atFr64Qcu6M0
eA/1h/+8UWE+WBY6LrIFXRudi3fRA9C/4aXw1LnWM2kf7/DureqH4XWCZ00p
jd99gV/Bt1gbzO2PK2LNUzf0vdl1oj9LKmN/3nDPQ+yq7az7dfJvyrSuivFm
rC9VWps6oRcOLA17DB5BAAQxJ8wrYlH4DTHi54id628a3YD5e7XXM/GU8ENs
kZEVMTfg35ylwxpHxvHbNtCs+48tZ0fUCf0RvgHvP6gqMIH/lIUODc0euMH5
kKdL83E28tVeO9SHfWj9fLEfjVhIdJLRrudo54He4DPhR1XH71Wg+z9bHjoZ
utljpXGWyHiXf00+ZPT4fOgxyGn0cfR+MAF4wpjS2PvVnXlbEm3GZqWP0bFZ
U3fmw+d3ez7mN/N8bVnwUHRU3m9XFTx5fVnogl39Lr8zRJ5pZaE7wAtY49+Z
b/P8WT78c5/kQ9dh/q/UvWtl1HNyWYznWI8pe5+Q103V9vllEWd3E3O8JGhi
IMfkQxfpUR0X9DilTa2M724oi9ixseYn6Gfoab+Vh83ay/rtGM8b+h9dvrfl
EbG3/Txe/T1+xN9e5nfhD8SZ9LX+X5h/5OnjdNYscTHEzaDzn5iLc7eR5cWV
YT/PUr/mKiP28WnRj1eF/C61HbHEtsSB1smJveF+qelLnU59mLPLLHMb2zah
LcRu0y50CWQ88rdUc6pVeeg52Fh1qgM72K467GTs5f1rh22MjXxveegb7BFl
X+BZ5SHP0I/o43HuZ9bbeMuF3asD59qvOs4CQP4vKw+9Af3hkdLYcz/KOgzl
QnNGTW/Xnz4c5PIH+v9XOf8An41zn/psYHn059vlcX4uegp68aDy6NsPy8Nf
h26MHUe8DPE9xMygU7V2mfAqZMAEj29b1wHfFz4w7DR8OPh10EWZS23c/+g4
lEM7GTve5duv+138XtSVOhdpHFrmQj+5RPXYKRe2HHYcuC4YEPgPtifxcPQX
PtMzc4FBcKYuNPIf3J36oEtPt85zf1Xo1/VyYStum4sykTGsJdYRv1fAmJ+d
izoiM5Ad1+VDj+a33dGl4bHH5mL9wF+P8XoBv4Gnw8+3rYrf/3q9NPKSh3PF
KYPfiWc+ddS9RS7ay72laeqP/wAeh0+tyjT1rnK7ppWHboTuTP+huyKz6Nez
PS60mzKpB/G5xOn+6XpiG2MPYx+3sgzCxtohF7KQtYmNnGZiPzRYFvo2+5eP
MD3S/Q3vpe8ZA8aiynnY48zvNJIO7+U7le6fVmVb7XL6fGlJ1BmdGt0ae4rf
iQLTQKZQL+qHzcpcJh/ytF51vPu3yutQFvMFfI4+WOIywQjACvidw92rgm8u
KTWvdd2ma4xvwF4oC/v6DM+rVbXitzfYZ4DNdYrHAr8x/mN0rGLPVfYgXO93
8c2Xeq6yxqa4b2/0mLTwuDDPtnM5zEfmJTYHfXaD+5OxxT45036kup4D75SF
/BpUGboU5WC7VbmeleYNPb2WmfusAfgX3+c8LOYrfvzjPCf3yUU7aSO/n0hf
IV/Y10sMJRjCvsad6vt8WfK18Bzu6HI7mGY+E9Ne4nLYW93d5fRwmewXhp/0
MD3IeTgv4jDzQXgg7YBemGy196Dp3/rmY4Vv7++yKbOp7ewGubC10f3Ruwrn
TXBnLzj7wjs7DUzjHK9xzswGd0AXAdf5yrYnOEQ7z0tiP4kBZb1wb2+a//E+
a6JmDbkcYpEu9JzJGS8CW23ud/ktCtbm+bmoV+r8xC1x8f5btmvO9/od4fpD
8z71IMaU/TEX+FuN3D+MC7Lm1pLAA/d0H8JX+S3Lbu5zYlP389zjNyXANFlL
8Br+B1bW3t/im+BrrOtHNDc/LQudCvwSvsH/iXtF3tNO0phrzDlsZcpp7n5j
bbTw/IQPNXM6NLyJMjq6LYV5zP0Q2/77us6Ud6LfrfTcRk4xF/byWmDtIm9Y
66ytBk5vWR42A7hdV/cJ/gX8e/yOLHyC2JKuTmd8urif+a0eflMSnn+p83Am
QLHzpC6Pvqb/i6rinQFVgUtQ/jrLGuYh8oXxYZzAURi7izxG/J7zqa4/Yw2v
4rs7Oo36fOXfuOxe7nxOZ/yneg7Aw+Fd13te8A1seHzC+I/Zo8b9wZLAcR8y
jU+Z+8NORwdAPwMHW1kWNsOZ+v4I41835yP/A353cT5sf7BPxjnxeHHnt0yw
eTgPABwfXR47Fd0aO3aW/QqTKiNthHVu5vkBudA9wOWoD/rhFn3rJfCXfLQb
mvphg9TYqtnQ6/lNHPAW9Cv6gX7GHgIHxD4CMwA7QMfjTrwamCF+vdmm4QmJ
64+OTL+gF2F3LLDtgb3Dt9Gr/8hH+u/5sIMXlgRWzlxgzjEfJhv/BSsg7VXL
iNtLolx43Xd6/2nR15UFb+hsHtLFPIS5VycXfrtCHBc0WBNygOdCfFa509HF
0d3QH9HR0QfRMVkrdc1Xa7tc7FL6vpH5DPvh2DsHpscdXQQ9hDvPyAX0rxLT
yM0y8yLqXOw1hSwtdTpynnR8GKx5+D2yAH0TvRN5x3z4y/OEcfjb+swlrht5
eJ/+wBYo6EPYd/Rb1rwUHsq7+Af4H32J/cJ3tniNEGvJPsAtxuH57uVO+6Mk
bFfm0f+cn1gCcHb0yw6uD234w++Ay/R2nl6eX097XjFPmTNgbXP8P/ClPbV+
VjA/y0NG4Y+AT84oDYwIrGhpachszoYH5377H/MWGh17Sj7y895NpdF/4EZg
0vgDrrZfYLnXL/cVpsHYsZ15/2XnI515zP/A3hc6D2nIRHylyFOw+XF+Fz6G
DYn9iG9zG+sY8IFR7jd0PPTdgg7FHf0HfRE9i7N40LnQvdBp+c17eOWTus/N
hywpNoaBrsl7rCN0EfTGTZUhh9DlH8hHn3IOEDyZusFjB5hvZ8pinGpiRFTn
O207gD81qA58DJ8PfUy/Y3dUVofeBxbOe1eZv2EXUQf0IPRlfksY+fZ+PsYc
vyh8br55HXNvlucMc2Om+divyj9P9C/52MeEzoxezf9Jx8+HHKD+tOVxlwPf
Q09hbNBb8GU09bvU63bzmZ9U7lzRm/MxZx91HWaXRdktqkImkAceTbnkYa/e
/wGdoT0F
          "]], PolygonBox[CompressedData["
1:eJwllnls1FUQx1+P7W/57Xa73f2tGFAEwajVcsSqBGmIiYhKRAJEExASq6Cg
aS1COCxCLaCQCrXlCKIxgpRytUVQsVGDyhEpKEdVoCIgKEcQgYIgYPDzzfwx
ycyb482b83UpKhlSnO6c2wJkAqNjzvXKcG5wyLkx4DcizjV7zu0AYinn1gF9
ws41wD8Rdc7Lca5zFjxgA/KRhHPz4CWho+D7kKmD3gHdmHRuFfp56M/hbDu8
tdAPhk3nOPQyYBT4i8iPijt3q+9cpzTzIRfZRUBH5HsjMxzf1kAXQH8I/Su6
H3D2JHgbcB/3tQTOrUC3FhgBrzvyB3noPuge4J2wPxv7u6G7Qt/IdW4munsA
h//pCfM1jD8Z4BXcMQK6K3fWIn+JMx/d/gSxFV4sarZ+BDrDfwP+KXRPA2H8
eStmttoDJ8Cr8Olx7F0Aboe/EJ2bsf0a9FBs/QH/BfCzwEj4dRHLjWKeQXz6
IzNFuYIeBz83ZrJfcf9WZJ+CXwZ9UfFBvgb7Afa7603ZvCVuunqT3vY7OkXg
p4Gx8MqJ3yRsTQYqwLdyVob8BPiNyi327sReCzFtgC5FZmnIZMaDH8fe89Bn
gBH4d76dc7vAS+BPx9ar+Ls/w2qkFLw8brwD3DcSe3kpy1ULcBu0w+cEsjHu
fBfeAuCmsOW0kVyuhL4jbDWkWloNnQ89jvw0Q6+PWO3ozpnI745Zre5UvfqW
U+W2BntvIl/LG+Z6lsOPwefDD8N/RDHG1l+cbYT/GfAOdBqQDf4EMo3ITsP+
WmT/474y8A7cEVBvV5GphN+UtLslc4j7qrBXDu8W7l+KbAh+jmc+LIe3g7Mw
uAdcoLaKsq1W48AD6G8mfq8r9kAV+CL0C7MsJ3XqN/wrCFmPV8gWPhzjru3Y
awd+d8pq9zxn3cDvxX4p8lOw0RS3mlRt6o5voQ9j7zvkT3J2DVnft17PATbq
7b7FMkI8qpRL3jAR+QnANPBM/NufZT2t3l7G2Rx4CWAbupui1tvXFV/43bhv
MfgioB7ZNchMwP5s6KXQ30NneWZDtq4B34C/B+SjG4N/hTKaD70qMBuypZx0
0TyB9sGrOVsL3j5ls+8adyTAo8hUQX8O/A0/gF4Avkkxg45EzPY8oA76QNxm
0VRgAG9Zznv7eubjOfJ3AJlV4DXc+UtgNaHaWIh8T+I5HvoM9Ab1B/g8II1Y
9YR+n7smoVMCfxD1vQ37c6GnQUfwt4a3zgqsd9vgH4PfB/39nuV8eNRiqtjW
cn8e8sUp80V3loBPB9o8i0lhtuVQuVQP3kB/QWC5VA6qA+tJ9eZC6HXYa+as
FH536m07eH7KenkT9vLhewnbHXOxFwL/KbBZrZms2bw3aryx+L8HvAH+Es92
Qh7vPxdYLjRDi9C/EFgutAN6EOvmuM2eiUAB+v24/5DsyyZ0OvQWz2bUM8hn
Qm/1bOYuxl5ewmq/Gvou8Mvo9MWXfGSKkfdzzdYs4CV4oZT1kmrsbMRqTrUn
n+W7ZpBmkWpgBfqjo2ZLMyMdeiXyX4BfUj/TP37CeqlS8zphM1ezVzNXs3cS
8o2evSEtZTFVbD+FPhvYjNCsaAc0w9sZtdrSTNRs1M7S7tIO1S5VDamWtKO1
q/umbBa0ol8IPhubUz3zUb7OiNgs1EzqjP/3Ry3Wmjm7iP1jUav9DtCt0FPR
H+9ZTUwGb82xXThQ8Y5YjpVryZRpFiZsdz7N2Z/wfsNGxyzbaYOhPwL2ZtrM
1+w/AN2SbjNmBvozo5Y76VQkrQfUC/pz6O+hHaNdo55QbywJbJZopmm23ZNt
tdxPfx74qwObDep59f5R4Dns95aPSet59b5mhGZFr5jt9q+hd0Mf1szxLGfK
3ZWo9XYh9uvVawnLlf4UP5Cvgoj1unZAk3oNKPas59eDN/i2e7XTtdu1c7R7
BgLrwR9KWe5U80XcNSxmsfbox6Hgadn2F8hFvhrZysB2j+54R2/1bXdp52n3
jcKflZ79qfS3yknarNZOGQDvSGCzRG88Kn99u0szS7OrjbMmz2zIlmKi2Gjn
zVfseP+QkMlcDMwn+aYc1/u2Y7Vr1aMZ8D5J2Vu1Q7RL/kHnS3hrgDERA+Ga
sT/D64/MsJDJXIaekbK/rGZcecr+TPo7aYbOgX8lsL/Ts8A+eBPxb2TIdsp1
eP8Cmz3bSdpNZb7NOvXI2/AGJU1XMlehTwY2m/WnOhVYTau29afW31o1plrT
ztXuHZK0v7Bq7EjEakS1ohmkWTQ4abNCPrXAvxTY301v3AD9cNJ2s2JaD10Z
sdmgP4v+Lq8krTf1h3wUey/HrZb1BzyG7Gbfdp/+pPqb6o+hv4b+XPp7HYza
bFLPqff+B8PVsR4=
          "]]}]}, 
      {RGBColor[0.3376268436116517, 0.4223608715568105, 0.6205963603049716], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
18/n
          "]], PolygonBox[CompressedData["
1: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

          "]], PolygonBox[CompressedData["
1:eJwt1WuQzlUcwPHDjMWza9futm7RtpZiKWrQmzRM2HIZ1m0iupjJPZQYl6x1
b1q9kMLYmjK2ZpFBL1BqJtppMsSEpibLikbjRZc3lZjU58x5Xnzn93t+93Oe
c86/bMbC8QtahhBmohU25IbwcesQbtwVwhqsRVVRCOPwEn0+32LyWEEIn2J0
SQhX2caQK9qFsBwNakzICaFl+xCWil2CSfw/i5tIvpkfwhYMEPcu21H+acUh
9KJPJ+dkQpiLcj27Y31eCA/zreWrFVtN35pJ/eMci/RciB3qjdK3me2a+lex
U1y3NiHU6XtQbp3cQ9mZ4myb5dXish775C4rtH45h/CgnO/E9ydn692HPpec
Yl1TcV9e8vfjr0AfPI3rbM/E/VB/JX4Uu07ti2QXM96ND9UZLG4PuRv16Gyt
nTA8L/Waw7baWqqxzzyb2HaqtzruAc5jN9s58ra13sKr4laybWJ71gy/0GeU
pPiYd9oMq83yDbnEHEvRV04fXOE/IP5q/O/tSQ3Om2UI2wGztBdTgH38W9n2
k83qbFTvGvkFjmNNcfq/1pFd1e+GV+iL0YJe6qAtpK+Xvw6zzHdD/EyyVv7r
sZY+q8RtpufE3vxt4n7Ynxoc4T+MNnK+5suQd9qG8JVZAn/ga4F7zV+KB/ib
1TtvTb35L4jrlT1f8Zytwmj+d8y3gr4ST9j3SnRRp5HvSfqWeCf0q8uk8xXP
WZna96I3vuUr1C/H3BP12JOb7kS8Gzvkruffm0n/afxvB+Gk2oP5B9AHFqT1
xXWesN5K8ceL05mJZ2c+vS/bPLJAv3x0xGm2lvrW6bsTj7I1sT1GDscV+rCS
dEbiWSk3w0XzDdNnmvjpOKbmMHGX8tKdiHejPVsxW6Xe3WNeftrXuL9n5dSo
cYb8nf835LP/YD1b5fbM7kcP8hj7Z6hnr+Avi/fA764x3r7sFfc9WRr/MxwR
1ySuPK7RPAWYYJYe4q7IHWHuShRn115EHpd3ArP5Z2GeueaZby65XO1lOIVd
8b3ib8JzetzW63kxM3CAfpGtUL3/+IO+H8iplVNP/qvnHZSZpRNbd7KfPemf
n855PO+X1dmg7yVyjvekgX4hL92neK+q4x3UYyrbcvqKuI/RhlviG8X/4Sy/
4SxsxgKz/KrXIrJzfBvj22CWo+I/ie9QJr3LL7N96XdjlqhPMWuzevdn0psV
364ytnNsJWz74xttloP0Bvoe7NLzfbYKtveiXpDeifhebLPeR/R6m/wzN929
tuZqhRwMlT8EhfbjKTUac9OMcdaK7L3rkEnnLZ678dn/tIo8y34m/vf0x9kO
kx3RASfZ26pXRN+kzkZ8pHYV22v0bjFOTlfypj3+B9PlTMNQtlK+IeT27PwN
eembVpU9R/E8/aReT75JYiYWJ31ycTpL8UzVY6x+g+Jba09u4zr/mPi9JF9Q
cyb+Uisj7pTef9NvFqV54lyH4reR71a7dI7ieaouSu9bazV6q90LNeI6st3D
to1/spzP2bbS38KL2XdgRF76ZsRvx8D4TcU4vnK+sWSTGUfa8+256RsZv5Wj
7PtIPCR2qrpn+f4H8lMMFQ==
          "]]}]}, 
      {RGBColor[0.4843780726860861, 0.4739347859280175, 0.5343272671749526], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
3XJg0Xu/dF6e+K2oGuwEPBXeTeqL/wfN61PU
          "]], PolygonBox[CompressedData["
1:eJwtl3dwVUUUhy+EJPBeXl7y7gsBCUjoSKgSQP4AEwZpoSQI4hgMkNBVQDCC
gA0cGKqhDKFLaAIiCI6ELkUTRoMgTpAWwEFxVBQcqmD5fp77xzdzdvfs2bN7
z549N3nYuKxXKjuOUwFVoEW84zSHQ7GOcxiahhznTJTjuJUcp7rPcS7TVwEB
v+PEwsuu45xivEmk44xFzkb/Eu016DdBfwo6k6GMOSfhzQTHeTbacdJYdDpy
R3SegnWMFcFz9A2E5kF8geexOQhKGCuFQnxbBtHIVSEyTDvSbEYhHw6wPu2O
+PAS6yaFzD8//risM4h2hedfY9qhGMeJh4as2QiWYnsJFMAiWAOrIUZ7hmh0
ouAPbN+E66z3E4zAx5HQDt1UKGeds5AT5zijWK+c/eaw3uuM5cNvyDe0d/bY
ATphozO0Yaw1rIRVkMJazaAuPiZDh7DtVXt+ErkLa6bDEXw7CstcO/80xpci
fw85rN2TOeeRBzBnOPI8mIvd0TAKivFhr2C8GG7j2x04zpxj0JWxZ2ACjIch
zBkK9dEd6H3POsjVOZMEWIMva+Ev5vZhfCH+PECemmBt+ZSPnBS277GK8UTk
m67pSudP12JMsTYDWzNhLmc6B4qR90I35nwTZXPSke9yRndgET4uhgrmXoJ/
OVsH/TjPX60XRP6KNZYgl2OjTDJ6i2E+LIBEn8W+7kBL1o2jfQ79JrRTsR/P
nDioj+0GsTZHc3VHdFcUI4oV2ZTthmFbWz40Rt5K3xZ4jLOoBSeRy+AYto9D
DrZfhCEwFHoy1gMyGcuC1sxppdhlz40hBf8qsN8Z/z6Qf2GLdZ2xi7wXG8WQ
hm/p8IA9+fElKJ+wOxhfs2Eac6fDCdfORmfwBfIudD6BPVAMP6JzDaJYNxr8
+OKDO9i4C71ZMxf717F/k3j+jjlnvD1qr/XQTU6wO6i7uMqL/dXe3YtjLAiV
GYuAJfhwEX86Ya/AtRhQLMhn+d6L+5bL+G38bUV/SthiU3emBfL7zDkXZfdn
IfLTIWuvRj8Z/x+nrw58jVwGadgbyvgDbIyh3TNs56GY6RG2b6BvUcJYKWxF
3qJvw976w0Z82AD18K0+9Pf813qZyAnYD0NV5lSDH7BxFUay91HwMXO3QzPm
psBs13yXz3OQ5wct1ynn1WXeYNrZgjMbDBfoOw9VWCMSPmJOJ85iE/r5+HeE
Payl3YZ2NdfW0FqR+qaQSF+Y8XaM3+KsWtNuBYX4tByuuZZbdB6XkWe5dlea
0p6JvA46Ml5EuwrzP/fWi4Fo2WKNlnATH2/BG36LXcVwKf79iv4vOmf20h8a
+OzsdIbjwuajfNUd0l1SzCp2FaOK1cPKXay1HXsB1k/1293VHV4RsBynXCcf
5Msk9FugP4PxCOUi9BdAOXs9C93RSWH+ecaTfJZzlXvz0BkOEfRVhhL0SuGR
dz7Kdw+R64YsX+k9SkBvt+4i41uw59d99dmYdEaGLQcoF8gH+dISn1tAb/r6
BC1GFauKOcXexoD5Jh/T/PaN9K3aodMe1hMDRdBebwlcQf8yfEbfnjjLMco1
6tOY5miucpBykd5wveV6k/U2T0GeDPtYaz+MCNi31jdfy3gVYjgCriP/DF0Y
vxttOaEX+6vMnDzvPdpM+28vH+vM/kF2/PZe6ZuMc61GUK3QCznDtRpAtYDe
bL3deoP1FudCHuxk/g4Yg85YmM0eZ8EVuAqTYCK8wFlkx9ibX+DVQKqFakAi
rOO7FcE2bG2FHGwNgYPMPRBnNYBqgddcix35m49c27Xcp/1msL/dnOUun+Vs
5e4DrLk/xmJcsd6dvm5QinwC7rP2vXjzUb4GvHym9yMWOYyuC0exeQxiXbtb
umO625/i825IwkbteIthxXIhfctDVuOp1lMNoVoiw8vX+kbvYfd2yN4GvRH3
kZ9QTRhrOVK5UjlPuU9voN7CCmLwEpTTdxb6Bix3KIe4rtUEqg2UQ5RL+iH3
VS7hTFdAqr4n+8skfh9i537QZPWl+eyb69srpyq3jmB8OGym70OIClluU47b
RvueV/+onrjvWo2nWu8Atg7Cq+hPCFmOVa6tFbRcoZxxEP3xXj5QDGZ530Tf
pkCxAoeZewiSOdt68RbD8zx9xW61kN1t3fFd2NpE30a4wbn8HrCaVrWtaj7V
fouRF8VaDaZa7B3Xcqly6rvIsxPMvu5MP8Y34O961W34sg+yIDPGYlyxXtOr
X/RmjQnbG6q3tC12UiGRudWV09BtDjvxaYdqJXQqwVtePaZ89DbyWJ+9hXoT
09Ef7LPaVjXuMNoXmXsBTrPHb/1Ws6l2y+Uc8mCqa/8KqsmnIbf12VutNzuD
+XGsGYyxmkC1wSjX8qH0RyPXxFYN+BLbJX7zUb6qRlCtoBpdtfp6znIDFLpW
b6n+We7lBOUG/XPo36OQNZfBI3T/hjxs5cZYn8ZUc6v2Vs2i2kU1lmot1eQp
3hm29e6g7mKxVxtpD9qLajrVdjpTne1pbJ7ycrBycSOf1Weq2SeqtnetttH7
NgB5hWu1vMZXulZTqbbSP8j//yKuvd2673pb63vvo+qDrqqTae/xWU2m2uw/
jT/M/Q==
          "]], PolygonBox[CompressedData["
1:eJwt1nuQj1UYwPHjzm6y+9tdNF0mqhmMmGGi+oOQQqgoaijkrklpjFxKUm0k
ZlpdKJdkbVFKK63N0oSoGSk1kfsl2Z2JqClskT5n3veP7zzP+9zOc57fec/7
a/bI4/3G1wwhTEQdbM8OYRs2NQrh9roh9MwJYXZuCLNwKhNCrXohrMgKoQF/
fXySF0IXtrXkPDG3ypnH/vdlIZzFjfJbo6GcPRZoQ/+e3oj+mZz1KEc9trpY
Re+k3ofkD/rYhROXh9BY3f5yN6Cl3OMNQ6igb8TT+qrin0YWiZ2P3uzD2b6T
v1/sARQ2THqYrM9JeAqvyzkt7jWypbxWWIV6htJNPxPYn0RX9YaJ26peU/4r
8Cb/f2z7+G9SqwMK+btbY1RBCGMwFsXsy5EtpwvfO/S+ZtQHN+qpTI1StrJ8
M0E7NdqKK6X35++Hs9bINpdqcozY0RiL3eKe5c8zr3z+DNnTcy/cbP4dsVrv
k6zxM/m1Nbejjt5/lPsNfbCYQZjOP17cafINtTvx14n7pC+Iz2qf5J+lh1V6
/ADz5RfhBFtN61eR4xomtQ+zH8QhLJV7K/8Ssqa1a+EPnMEFOZfxXSLX5Cbz
WEd2w+1oE+eEYv4/+UrIQvYXcYR+iW2ROtPS/qeSZZ7XYy7+ZftWXA/xPdE1
/g7YkUl8O8k92I1b+FfrfRd9eVayp8pMcv7je3CHPrrjF7YafL+Sy7IS/Xgm
6Sn2NkEPNbxPZxqEcM7z+WjLSvpfIa6J56YoR+v4nqnZxtzaopy+Hnszyfna
T97hHN2krz5mfie9B9bZw27n9GF1XxYzJ5PsL+6zTzxzcu8i34094sqoq7GI
/pD8wRiU1u2t7vH0PXubbQEW4pg+ekcb/93896DKb1iJE3he7mhnZ4Saw9Fe
L3/Z+HRxG+kVeNssJqqxmLyohwtxHuYyw3yK4jut9ud4I30Xe8VzJn+v2kvM
o4CvMarETuB/hbzXmv0wmt6BbUY8a2IOIci9FN95+hi+ITnJXuKeluCa+mZA
Fsl/Fd2jTdxFeXv0uxtH030fIUNu0v+ieKfEveI6tZuj2Dr79Fkd7wz++8Vl
kfvU2I9H2cehVOxAvtzYi30uwGP81X6/Xfxb6JsxJ93jXDLkJH1d4F8hvyTO
ydrlWKavznwD9NY+vS/us48BGIjL5Vay/aO/j/nX4Hf6KRTT75V7Pt4D4mqj
Ln6KdyN/Tk7Sax55VE/HUNko8TegH6f/iiY5yf2TzZZPL0ArDJZbYY3J+p6C
oRiC1dnJfOqLaa7vZthmDtVshWpc7fkqbGA7xzad7RROomVat0W8m9yLr2NB
fvLbP6eXt9ReiGfSb0GbeIbS79VvUapbG9fr4zq8lEnustnkwfQOOUDerNYt
6Ju+P2VmvTzePXjeXGeiEGfV7WZWR/VzBIfjOfSTzSTft/Z7KEEH8+kf3x29
jpDzQloj1hqGoRiCjuIeELdRTndxFWTjOGPsyE/8D/J/S9+Jj/X6t/4+IkeK
GYWK9JvdR70N+q7A0vS8z0u/LfEbM1KdEfEbr/+D6s6Stzje0/QdbJP5pqDM
Xj7DIbYWfGvpq9JvyUqy1O+yFv2t0Q8vpt++vvTOcjqhg7otxFeZZ4VeV/Lf
QN9E/wLvqLPO3HbG/wXYhU/YS8RdK24t/VN8np6JcnKwmg81SuYQ5zEfm+P3
g7yY6qEgOSPxrHyVnrGt5BPyJuA2vbazxpfmvAVb85JvTfzmrElnO9Xe/gcK
n1LE
          "]]}]}, 
      {RGBColor[0.6311293017605206, 0.5255087002992245, 0.44805817404493364`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlnuQjnUUx3/u433e27Pv+26mpgxdrNsylG6u0Q4palcyTWoIiymmZkKi
ppQlhnGraKMaUdOYtHZcp61mKCQhRRiUsDUUJWnGjD5f5/zxzPm+5/mey+/8
zjnP22rkxPIJDUMIR3ga8VzOhFDeNIQG2RBeKQrhXJMQrkuH8GouhK7NQqhC
ViUNvwbeDedfOPfAeTAPRj+rEEJjOOPRlxSHsClnnD2JED5A3w3OQnSLsEkQ
axo+suifhrMxFUInYg9HXxeF8Dj5dAZ/FYew3WN1x66e31+g7wU/zlme2/G/
Bv0t6NtidxT7ceBK/B3hXQ5OPfqT+GmPvgz8ZNY4Y5GtefJwTsBt5PlnOUsp
uB05jybOqJzhSkn0U7Ctxe4n9/8XPtdlTb8BWcczFdwF7oKcnX0x8ktqFYPT
4KXkXAOnKWc5if0D4NPI4zwxPg/gu1ux1WcX+eyHNxHcCp8DsG+FnzLk8YTl
r3NUYtsFPyPwfZnfc3Sn4OFez83UoCM212LbTudKGifAGUGMW8HPwB3jfj6B
f5inL3gTugZen7XkkvO7U47KSbl1wEddbLF0h6si66tALgd4XgZ/j1we2XlP
wRnlsT4qsjvQWVrA6YavH8lzKL5Xgt8HH8RuPs+98LdiV+Q5tOb95xnTb0Oe
xU8B/WRyqXd8V9ZqqtoezZiNbNWDfTjPTvAFZDm/q/BTDz9NrAL4GL03nXp1
JocXeX8obfrj6kn0c8GNiTWpyHp7Mfr+2I8E98taXVSfNknLQ/mcTlg8xe2N
nO1zdxO2xcRtge0Z8Ic5q4/upD5t+rPIGQWzHUxPfQz/BnLrCfdP/M+C8xix
nkffE/wOtkszhpcjb8b+PLbzidnD724P/vqCKzVT4O/yVnPVfjd+qsHrwSOJ
0RZcArdhbGdPISsiy1P53h9ZDwyHPyyyvlJ/TeJdJ2yfQ5Zx5jG6X+KswH4d
nObo6vB7Av1g+EPRr1Tfoivxuulu1SuKpX7XzGv2V8N9NmOx9oLL4Y8CD0LW
ZqyH96s33Y/6IuX5N0Eeio0j7j7vkx/AgwqWTwWyR9p2kXZSO6/hEvClrO2W
PvB75e2MTyVtL2g/aA+di6y2zfBz0GfhDjhNssY5nLD7kM/2+H4pZbMwlryO
xRZX8XfEdkad9VGfa83cHu+x1km7P8U6H9nuUJ8PRD/Ne/gF5K9Z6/PfkKd8
r55A3p2zXuqFjHg3FH1GPUWs28Gj8Tk3bXssAeciftein4ftprz1v3Z8qe/z
jsh5vvM1H/u9zjX4q3KfM5Ab8tZjK8j3dZ5L4NkFm1XdxXjqMcf1D6vG/N6o
vYS/7l7zyco9bXOk71h7v6M1+LgEvh7+BWRfnzvNUIX3yT7O9Znv7S3IGs9H
eamPr/YzfkZ4/z+B7I/+Z+1h5Fu+z99A/pOw86oeuj/d4y/oFqfsXtQL+g6p
Z7bi54rP2m7kf57njZH1ivgXwU3ht0TfAfw2NnfCX5azvaMePlNk51cd1IP6
BmtXV+dtp6gm+mZ+m7CatATvwGcZttuRA/wsbyZtfyn/ruiH+Aw+FNs3QHc3
Du508G2qSWR7VjM1k/Otjaxn0tSw1GfzkYLFU1zNzWr/XrfJ2Dvhrti9i74W
vDK275D6fBvnWu77oRpZ7WevSdo+0h2ty9usqk/2cr4pKZspzdZCbD7Fdgly
YN7uXfffMGX6Rcod3jDwNcg/fH/+jtzp9VlAblHKcnsP/vrYem8z8m+f/d4Z
m39h6VQj1WomtquK7IyqR2XS7kvfjW88Z+2bObHN0XxkqX+jl2E7weuguR/g
35SvI+sn9VU2a7tD520Gvs//G2yB08h75go1H5KxHtB86P+NekPfc/Xf1fwj
+z+nPaP/bs1zNuP6zzLV73oSsjayWhVnbW/qLMWx9a56eBfyf21aUtQ=
          "]], 
         PolygonBox[CompressedData["
1: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
t8H/yM//Rw==
          "]], PolygonBox[CompressedData["
1:eJwtlnlQlVUUwC9qCu89eAs818qxcgkTcMENc8klSMUEJMZ0VMJIRU1LR3Eb
N5YwGPclBDTgD8kiYEpwssal1BK0mkTLpUxDM82ZAivLfmfO/eM353znnu3e
7373ft1SFyYsaGWMyYJHoJ/LmMy2xnziMeaXYGOa4A2nMYthT6gxQ9oZU4j8
I8SYx/D7C1mMTwk0QD0cdxszlrFPkccYPwqziR+ELRvb515jotAnYDuKfgz6
+Y3pCz2pv5BGnkXOZHwGpNPLHPxfQRpqP/QZE4L00ssmci8lZzTjq5BV1K+G
MvRSqCNPKWNJ1FjjMGY11Pm0/lTGH6VmF6gkZi512+DfkZodYAU1oqixCjmX
5zmwgzxVxO5GHifmGOwlz3CxId30mIxeie88esuALvA7uXOpO5n6CXAVmx+/
EPw2oG+EFdgz4QP8+jGWRr44xmNhHD3+SC9xfp2fzPMQzCdvKD1voceBjG8O
1T6l38v0eAnOkrMFvyvoQbI+5C5CD6ZmCJxDH4AthZgz6PWw3q3vKwdZS0xd
sPpKTCnjNYw5sQ0L0dz19Pw2dfJhPfZ10IG1SMGvhrwp2F+CELs+TuR87BmQ
T75KbHnIC9AIWdhHY7uInkmN5XAYWzdZA+b4G88dGW+PrRi9BAqomQ9X7Npe
RI7A93FiKvCbyfMsGBeqeV5AzqanV+E5xkdBLfUOEfsRsoUem2Ek9t7Y7qO3
Ddb3v4vxQHIFwe0wY36FRN7NNfIe4X0E4RsI7SCU9blAjR3Ebofbtvcm5A3W
dyL6dWQ7fAJhpFvrXWdN9/G8Hxx2vwchY+hnGLio54Rm+UaoMVr2LvXC0NdQ
pxN6Z3hIna7ka0veA9grYLJXv4tkWV/Z6zDJ9h+PXMvzOpgCSfAV89vPWANy
n33/JV49F+R82Ehf/RnfIOvNc1cost/FcvR6emiw6yXrtp3YDxlrRS8H8btH
z2eY5wH0Cmh0ar2H1PsX/oNsxrPghE/36wL8fMzPCx4776vy/ZD/fXjGqfNu
LecAz7Uw3alnRSa2rbaHLcgIiIRy4svgNjU2SX/Ymtz6DpfR6030WzDepd+e
D9lDzi24RQ85xNxF3qTOLSiwe7sZv63EbYNw1qgzc4tAPk+tWLhJTDZ+Cfjl
oOfCbMbD8UtDDsUnBnKpcx9bHnIM/YyFzsyrE3xBvVRyxBI7mecXYY9Ta/Uh
x2DiB8EM9KexpSJfs2frZfwM/gFQZ7+BSHLH0+8kOEecV9YX/Se4Bu/hVwH9
ie2B/0H09l5dt3Tm4UX3ic2eA35kEHEOOafd+n1/zzrvJPcu2ffUO02N8bzr
iRAP1VBIr1XICOpEgkO+LzDkziPHA/KWwrswGPtabOc9ugdlLx726J12xKPf
unzz232657oz3288GtMo3wvxXWC1S8/+laxRGL5+n74neV8r0R345xMbQ19D
YQl+kfgPC9M7U+7OdPv+Isj1D338DU32Pf+M7OnWdSsn3yLyLoYMl+ZZSuzr
sAhq8F2GX7VH7yW5nzbLnYDtFDnmUSsD2hDfGk66dew0Mp6YNPREpJsYD5yw
93MB+nnm0Aj37BmyzZ6hcpb2d+s8/yRnFHpfGOPRPRYn8yAmB4ZiHwIjiPmM
sRuyJ+ROh0Kv3jfFyO7M8ynItmdFtkv3r+zjHPZzi9iQ5fRTBk869R/jPvpe
7IVQ7Nf9UM/YTpfeibHYTrHup+UMpo8EOOnQOzdJ9qpX+2pCRhM3EJKJ/Y7Y
aGLDwC/3K31chY/teofjE40+ALKw+8kXhb4SfYW8Y3t2F5HvZWpPhSlh+n2+
5dd7Xu774fYOikHGyT6Cbfa+LqNGgN3Haei7yL8bzpK7AeYG63f3Jfol9B/g
a6e+0wT8nrD/S9/afy/5B1uC/U2Y5tLz6I78yzm0/17o4dAbqlz6P/cOvUyg
p4kwy6v/HonUmIY+HQLwTZB9iu0O+e9CL5eeIbNCdc1k7TrSYwfog/90OT+Q
R5yqR8h+kfcMPbB1l/PG5n1AzP+cIFcI
          "]]}]}, 
      {RGBColor[0.7778805308349549, 0.5770826146704314, 0.3617890809149147], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
fFSOtmL3P6qHkf8=
          "]], PolygonBox[CompressedData["
1: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
Km29Q9/dqPn4f1/7Vov6D6P/Mrrzdff/B4XwwwQ=
          "]], 
         PolygonBox[CompressedData["
1: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
VfGcZt/6zuTcfJp7sdhP5d+NnwFJ5XQ4
          "]]}]}, 
      {RGBColor[0.9039347859280175, 0.6298369648200437, 0.3021978363768542], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlV9oVnUYx3/VbPm+533PzvvunJplGRQYFkoGqbNpWVQ2a4VLhxetYRGz
baKDijHTi0wLUVCjP0Q2WBK8F0WNxfaCF/27KqNGWF3Eugm7GJV5ZUSfr9/f
xeH3Pc95/j/f53duHhh5YvjKEMIEz1U8vVkIG68O4YM0hFXgmUXIKyGk1RCa
4BJ4HHkDnfkkhPt4/xy8rT2Ej9CpgEdrIfzB0wk+iZ8DpRBW4vzaIoQT4KQl
hDX4OIB+Kzr96DbzEM7iv7/ieIpb4nteD+Fb8OPIKui8CJ7Bx3ttIYyBz4Bn
cutsQece8ngVPEhuZ9C5Af/Lys5b+d9F3PPgPeDV6OwuO89RfBzG1y/k2VE4
b8mPof82z1rwrrLjKe5y9BdKzl91bC6c2wZ8Pll1vap7FtyGzhFqHK457kp0
DiFfjLyLOOuw3Y18Dp/7Y69uIuZY7PNLnEei/hX04zP0HrsmhFuxvVRz33qp
aWPhGn/m+7GY/wLfT8aeL0W2BF+XGPheZNeh901rCDfm7qnyH6dnnejdhu2v
2I6UrL+J+DtS56YcFU9xG8i6K+6/ZiXeiD89xFmN3xeQT5Xc38v95PtP+GoH
fwW+P3FczXZR4nyWgtPUs9BMnq25zwexe6dmW/kYSB1X83+U2veBt+PjDeTr
0XmT861Y+yfgsdSz0ExUm2q8G9mpdttuxfbdum1HmfUDPHeA+3LHVg7znO/z
voz+T3J2F+bDFmyPttnPl8QcifkfAvfRi0ntCOfO3P15Gd9Dqf1M5O6X5BPI
tkYO7yGXrsQ9VC+n49ynOIvcsbbxfVfuWtbhc0nd+/g3/lZkrrdJzq9F/oh3
qk01TmTmtLh9HLujkTPa3QX0OsB/Vs111dhNrMVl938O+YWSfd6J3S2Z630F
2f7YK81tPvZ5vWZSmP+rEvNbXBpHfzhyTNzcV3fcjrK5Lv+K83rqPA9znq25
V6fBfbFX6pnmp56ICz9Ejokv2jfF1d7fG/mmfd0b4y4X3xPv4CD61xfmjPam
Eu8N7daD4OfgZz+xnmo3fpqzM87oocJ1ql7NZHNq/nya+S7TndaKjxUx1m/g
85nzH0a2I/LkC/D3mXNQLgPg08if4dwe9057P8j7h8iHOH/MXaN63FU4Vgu6
v2fORzv9cBLnyPdziW2f5/u53PqyWxPjXt6bWLvufnFReQ5h15L6ntd9r3tf
fPsHu76Ym+7yR2LtDd0hNet/XPUj/C/+b4990P3XG3dZd4lmLw5MsU/fJa59
Z+Y+ymdP6t7JVnNrxjv2v5I5IW5ozzQPzWUtOpPx3ssLP8K623pinrOZ91b8
0W7pvpbP6ar/H/qPHKx7r1Tvxcy7Lc6L+7oj5Ed1X6ha/6+q7z7l0Gjzf0X6
X2f+P6mfmv9c5OqGzP9O9adR9f9SO9JE/j/zEu0L
          "]], 
         PolygonBox[CompressedData["
1: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
o41pzWvt6zf7/gfdLIbD
          "]], PolygonBox[CompressedData["
1:eJwtlGtMzWEcx38oqXNO51KsrEw2m1wmZkuq042FaZSljkTCtNQpvSlrXd64
a7XxwhsObd2241WlRpvCUKarmg0jxFzWbMgQ83n2/F989nzP7/r8nv/znIj8
kgz3XBFJBl+46xDpg5MBIs/niVitIi8C0TAJfvNFpvElgBO82CzYSsips4tc
gAaIxVZqEnm5kHwowtaGrZDVbRY5TTNXMH3xpcBbeAPr6edP3Dnq/qO+DV2J
rRwqYDZA9/NBC8yBPOoU+IkcYA0JEgmFTfSOJO4D/d7BFDiN2nXUNhFjBi/7
XoNtu+pB7QqIJHYFdAXq/qvQHuxXIdqq606SN4F9HNqxmX1ERtFpFpFBZsvE
NsU87+E3/IIN+HvwWYi5jD+OOlfYQzvn0QFLiHnCHL7oyEUiK6GfOR5BJ76d
C0S6WZdbte5CdzBzJxQb5/uM3CD8wXCDPl4IN+qGsDbCUnKvs45TdwLKiDkO
h6nRQo18Vh9+32KvUegZYn/CV84jFH81e66hTy2kQSVxHhtnijZDDJRjc7KO
kDcKg2oPsMOI38aaDdXoenJn2cdfyGWWfXDQ+Kap7GMjedGQZcRfwxeFLkO7
+Q7HoAhGsA9DkzFjMWeQQFwFcZtZ+7EPwBFjzmFse5kpB9LpvQvSje+XT24f
9MIDdZ7E++NPon6iOm/jDseju+h9E6q4H2t5M3uo14Cuh0ZyE8kdwn+Cvl50
Fesr9vEaEuy69hg5ceh4yHPod1aLLYoa62ArOhXu07cJn4u4cOPeXcI/Rs5T
qDHpfpn4M2A3TDv0e6wnvoXYVijAdhQKoZQ5VlO3jdhWdfeJ+8OfQhM6y677
5bAeUncEluGPgEmznqcS31n0GTjF3QjD9o299tj1eeQQewfdq2Yjf4h+2ay5
sB8e2vV/TQlxA+jH6vtQqxkuUi+Geuet+l2r9/0d/z1si9FfmPczVNn0d04i
p1u9Xbht1297C/6UQD2TW71jZvZAOLFhagabvq+x6E98k4/gtep9utjfD6Nf
stIwA/8ByLW0tw==
          "]]}]}, 
      {RGBColor[0.9273774742785661, 0.6884436856964153, 0.37487017026355496`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlWtolnUYxv8UFbyH53nfd+/zyJRp1g4FUuisTFLT5SgHOedh1sBGps1a
0zTrQ2wlqWAHEqQjGIbBRNGaZIdv4SFLv+SHCCPoU+AH87A5gqjod3H9P7zc
9+7n+t+H6z5s5tObe4ZuCiF8xO9mfr3FENpvDeGnagjrsxA6bgmhLQ/hnloI
G7D3VkI4BaYX+33Y27DvQ5+FXFcKYQ+YcTDLCiEsx/GshhC60QfQp4O/kNre
ie19/Czj7Rzsz/D3OPYZ6Curjvsa3/cmxsvfN9jbsT+CfSW4T9BPEPO96Geo
HMJb+P8YfRT7NGJnt4VwiTrGyOkVcptBns/x92wwM/Fxe279QXx0YP8d/BBv
m/HVj76wHsLd+GlEv8z3BXXbFyPL+PyZ3J4s2Jf8yN/pzPn0JOZOtbQiv4u8
TSXHB/DZhJ/5yJPR/iYx+2quazlyccznYWQXv3vJv6toHsXnauIuIod+7Nf5
PjXW24jsLJqrO8AewtcEmNGae6ZYZ8G/A5+L0DeDXdBgn6vwOZh6Bp5H7iKn
1WC+BbMv8rwJ2w2+dYP5C3mM3xL0MeTSGFe9OoD+OPpI2fWLhxFs84rm6g8w
vanrWoPcXfIsrQD7Wcl97EFfUzDP/2XOVTmfxGcztffxtg3ZzPsW9NbUPKpG
8X1/xXOl+eqMM9mUuzbVeACfn1f9djb4TYljqbcXwTyG/RfknbnrWgt+XWKu
xNmjDfb/ErYfeTMMvgOe2xLbBwreGe3OD2Bfp669+LnG92cT83MGn79VzeHO
oudbsQ5Rx07sR7H/C2Zh7PVDFe+VaulKPH/K+TLYLZEf9XZr4t59L954M8jb
p8jtRuZdOI7t11jjn9jm5sZ/jY9rmbltqXiv1Hf1/8uS5/PD1H6F17u8bv+K
o9kS/68SfyJxT/fw7oPMPKtXw0XPg3Z9NPa6i9y2l82JZmcg3gRx/EScE+1B
Y5zzfmK+EPt4AX0s5qbbcBZff2M/j9xYd726AX2Rq+kVz5/mcD6xmnPz1pJ7
DpTnCd79Q7zD6NvAJqnr/Yrv3bn7uIOYQ3X3Xf2/XvENnERWePOuOCm5fvGg
e/l2wbmdq3k/1WvNl+ZAtbejb6067nbk2jg/45nvgmpUH3Qrxc96/E2rOZ8p
NdegWraBPxJ3/+WC74Xm9kpqrsX5YN03Rdyeqfq9/GhOr2Te8Unw+8vmSrs7
Ent0sOjbrdnQzdN+iltxfC7uwiS2N+IM76iaU3Hbknq3lcNBYr0Y51Z9mMg8
S1sq3gftxQpsd8U73Nrgfqvv+n+lfdYuLC34fqnGJuZuOO6aeiVOlfOnRfdP
fdRt061RX3aVHEOxviC3NPauhLya+VbPI+75sudW8/s/xmfhGQ==
          "]], 
         PolygonBox[CompressedData["
1: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
bxVDU6mtfIP4FlGjq9VrUi37bc7mXngZW1+Bm/k2vBQ1ydp0mj6nsqGh1dJ3
8K2uFBpLrTWO9u2l0ChqFTV3+/TOeHd8g/gWUVOoLW6jfWsp3hS+LXzz+Pa5
ik+a4R7ObjxMpz0jF5pH7aNmVbsaw8ayOc/cp8ZT6x3Th5WhadW2xrCxfCvt
sdnUxlJohB2pBlALWPOt/Zfw3eVMvDl8e+zjt0aog3Gw1ztaEWfu2aux1dpq
YLWwGkgtpA3acpk5/lcWMWQsmXPMPdZUa6saXi2vxpyQ7tm9e4e8S9bUkWkN
s5a9z5h/F+MN6ltUzaH2cA3XMqaNbTWWWutm9vz1bNRka7OaVm3rHt2rGk2t
ZowYK/pIX6lJNqUaRi3Thd86p28833ot8WGLUtwp75Y1ydpkjJxO75h3rdG3
bGWcqWfb0pyXaiq11RlsOJsJTbww1cALUs2r9jUmjU1zkrnJmDP2zBHmCu/s
Z3e3LGqJGkut5RvLt5aaTe3mnT2YvrF9a6v51f6+YXzLdMfGbjCHMXPTN6Bv
Qd8cvj30ob40Zo3dLfz2ajHuvHffmm5tt+ZZ+3wj+1b2DeRb6FPOqrkiNPip
9A3jW8Y75l07TN9DxdDkavNj+OQ/0AmbOleGhlRLDmDMjbnwmb5blGrntszR
phQ5xFxijBgraha1i/8n4P8NaIO2GNPGtm8o31LmDHOHNchaZA4wF5izzd1q
ELWINcJa0ZYxbarizeHbY2mqjdQcag/f9L7tzXnmvjfVwN4d1mjMRA43l5vj
zHXGiLFijBlr/wfI1He+
          "]], PolygonBox[CompressedData["
1:eJwt011o1mUYx/Eb04y559nzuJfQmiTopp2EG9omuWe21F7QRMiXpDHaLDfX
ZpvTLCwiPbCCzEgjKModJEovdlKeZEy0UBJDRRSddZDpnJvbEiEM+jzc/4Mv
18X19rvv6/7/p7/YuaJjXAhhMSbgiaIQGnA7E8LOe0NoLAzh9eIQtmJhSQhN
E0OYkQrhXEEIZ3Fe7VPqLrLrSkNowVuTzDCsmf8fvpZ/JxtCWTqE+7FS7SNi
a9gj8j+j2axRB6mU/3ByCLsxKD6F3izaF2heRKfzfKC3yLyJuA8r9DxN72O6
v5l5Cn/q/QNT+avkjsr9gOf4abHLcv0Y1juEW9glt838CvmZNL41u4JmJdJl
IaRQmI36GbYOC/B2Nt5xO3vSuf/lv+8+xepLUJfsbQHbZv4G3CyNe7tAaynt
ZRjWP4RBnLOLlfmdJO8wwhaYNQln9ZzBM3qeVfd7fvfO2ILWVNzFHnftNueA
3i52Nh7GV843JnaQbdXXhnpnueJ8DewLztiIerNzOJHc5xd2tXy12YvMXsN/
Hm8mb32S7lV9f+NLsWViPWJd6EbWuTPYXBD195u30Z3a+WV6MvkaDDjjdXQU
xjMtpFHj/cv5j7I5/fX4Xu8WvS/pbUYL3kjHt+6jXyVfjVrUYFM6fl/z+PPo
zMVpOtVmtNvBCJ0mfp38ZrVbsMMZt6Ocv17vcrqLCuLOd4m9JrcVh/X+iJnJ
d7M375uzlj+D/UvPVVTTrMKxbPz+V6m/IT6AxzJRP8feFB9Eb7LHl2nV8ufw
P9P/k7sewVE6ffhO7eN6v2EH7O06frWrdWKrzetWk9O70YxN/B7sUPOR2JjZ
I/ndoFztgzic/CddYl+Uxh29YvY+fi/asQHzkzO18cervQc9yTd3V6zKveag
ojj+x7PZa+Kl/Kn8UbVjyNlhHRqwTe8JZ5iWif9Aq5kP8aej350voy8V7/Mq
/aGi+DaN+X84/444lOzjktk1amvxJJagqSTqP0C/1w4+Nec99TvxLo7LH8P+
VPzWF9MY5Y9gfvIdDrtDJ70OVCbvfEtsr/49+ASf6z1k/m3+cvl/2H67uIIW
fc24k+SG9P4PqhG+hA==
          "]]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
G+Cbj/wnwf8DtKbeOA==
          "]], PolygonBox[CompressedData["
1:eJwtlntM1mUUx59U9Pfki0i8vCRpgpk1URqoc2WZ/hFlFzUb5ay1KFszMp3W
NLqZZSEYrsvwFgbiUolIKsHGSMiEUpyYOmY2yjCxFEExq5HW59vhj7P3fM/t
9zzn9rzJjy+Y9Wwf51wR1A+6Ndq5b6Oca4Z+iXWuOOTcWviN/Z0riHPuMrgK
vB58ETwl3rkmcD14Kvyf3rmVgXNP8/vmYOeujvALX4Rs+ZXOrcD/CvBp6H50
i/neGPgf0ZcMdG4I/FfEuwhtR3aWmK38TkI+d5Bzr+Hv4H+HZuI/Hf8b4fOw
qcE2EdlK8EZwHt/byW8isYoHEFexwUngcvAu8GPcMY2zb0a2N2Rn0tn66Pzg
WeAz8P2hzeBjfKOcGEfAU9EdAW8Dfw+eBO4Ct4Engxdw3iXQVPiTyM6hi+K8
EfBh6HadFf0d8BlQPnwtNm9jOxo8B9s0vtkJPgS+Dft5Vzn3Lvxdyin2l/hd
hT6b30LyHcZmGfwmaB+2Ldyvlvs1cr/qGOdGod+J7kvoBvgkaDt8JZQMn8X3
lmE7Gp8e4i0kh+uJ/zr6CPqJYeuFXdgkcb5GKBm+kny2o8vme6/q2/i0cpfd
1PQE/H7ouO7m7Sw6UwH8SG+9ox4aBV+G/w5wPXgM5/0HnxDydKgf933Dm042
K3p7QL3wL/FfDlkNVIuz4LEhk0k3A1kn/qnoG+HfQVZH7BaoDH4msvPok6Hx
8M3I2uN7awxOgAZx12HRdnf1Z3rYYijWQ+gf5LwveMuPZqYv/BJvs6KZ2RpY
jVXrA/An8F0KvwF9JfpNyHqQ9fB7H/KmQXYmnU0zo9nJ4xtz4KOgUnCmt1qp
Zrn4Tcd+IrJj8B3EWoP9I956Vr1bSD2Owqcge5K7rIOGaL41D9ynIWyzopkp
RTeQ+89XLys/9MPD9MNa/LPAl4mXCV4DLgdfG7Gaq/bHoWq+9QT1fMXbjGvW
W8M2e5rBWvB8evQ9bz2uXs8IW76+Vg+if4CYHegHqEfRV3CfR+Hfx3433zoK
fRxYTpSbxGjbHyXESCHWNWHja5GFoy2GYiknyo1mTLN2mBinidWF/jNsf4Va
46xGqtWdsie3B8AfgZvBN0dshjXLOoPOcgv+5+B/RjZNvRlr/V0AZYcs58r9
i9BsdBfw6Qhsp2m3qUfVq9op2i3aOdo9XeA/wJ8G1n/qMfVagfo4yuIv0tzJ
B9l5aAq+8bGmz4UWgdM5015vPaBeGOot18q5enULNX5GvQH1xXZ1YG+B3oRk
ZDd5y41yFAd/NzG7A8uJcpOr3UKsPejfgr+eGNX8VmnW4a+DvoD/HBoB/xc+
fwe2E7UbVQPVYgI4lVwcAm8JLKfKrWZas60dqF2oO+qubeB7IrYjtSs105rt
EWGbVfVEAvG3EXOat55T72nHa9e3K2fY53jrF9lXIFtKPuYhewoKiO29vRV6
M2bDpyCr0U6ChuM/DrwP/gN896i2IZttzfhB+qk0sNwJa/bzoRr4BmR58N34
nMImgN+Bb1uc2cqnGzyB+Pu97VTt1vHgJvCH4AZ8O6Gf4FM1r9x3K3csgn8J
isV2MP3wHPxC7TNwnbfdrR1ep72D7KS3mqq2k8PWW+qhkdH2Jiuf6sFE7D4J
bLaUs5zenaTdpDdTb+dib/6aAe36Gch+4/cCfpnY1nrbPdpBVboD9bnXW0+o
N7RztXt7endjfmC9/H/P9+4Y7RrlQLlQzpQ77Qztjm7uuxr+IDan8E8g/jhw
DHQJ/APxx8K3oD8Dfj7GaqGaNOGbFWO9rJ6uBw8jZpneWuwz2H2FUAn8KmRD
I/YfRv9l1APqBb0hekv0H0X/VbSztLu+A6fpLQIXB1ZT1fYb8IbAZlSzmhNv
86b3o0fz7I2XTLOoN1Vv63L4HM43HJ8K+HXI5nK2/wCI73qi
          "]], 
         PolygonBox[CompressedData["
1:eJwllnlQlWUUxt8pqO+94JV7QxIXFBUds5hslVHD3NBUbCwQddIQolICtKxM
s6J0zBbF9EIlW6FgaQXZYnorSBaVGswaDDJNB6RSUMQyC+p35vzxzJzzvM9Z
3uU790YuzpyTcZUxZjkIBHPcxlzBGGONedsx5kAfY9p7GzP7GmMehMuFS3AZ
8wPcNLgm/Dvh44lLQttyrTFV+HvA0DBjHoJrg3PjPwDKiEvyGLMKu5zYy9Sa
jz/mOmLJtxX+BHwHcWdBI3YO3K+sjURziXiDPR7uF9ba0aRSeyz+cUf7vIAm
IoS82CnwefAL6HmyW+ttg3sLLgvOT+296NbDrQN96TmK2KvhJuCfRneeGpnE
3oV/ytG8kWiyic/HL4LvJu9cNH+SrxX7ZriN4CJ+V5AxYXB70JaAw+T7j9gI
uMv4M9D5ic1AO4Tc9XDPwS31KC/rf8FtYe1GuAj2Nwx7O3wxvI9cneQ8g+2V
cyVvEv0NQ3cf/jEwgLVcNEVgEPbPcPOkBppV1Agk30T8ItZq0RwK0pif4BrB
ZM5lXrAxj5K7Df83MBsuzaN7r0C7Bi4FP4bai8jXAnc33FPkbybfWHTfwzXD
xRFbh3YfulfwXwb94GaA03LOIA39RGrGg3TsFrhWMAvNM8RmY3/n6Fmsllz0
vQE/CX603L2cE9pP8b8Cu3iHy+hjJnwifpDV9zqfuN1e7omYAqtrojkH30y+
GKvfRBPc4x69hxVwweBfND+yv3jsHrRD0bmoMQFdHrpuR9dEM5peDooNF4eu
kn39w931w66Fm87aTnSdnF8mdgZ4nrWF6LrR9ceuQ3cPfAW6IeT7GPtLuTf2
MZW6w+mxEt0mR+9e3kCyV7+fTXKPIJvYDeQrQFNs9c2FoFtH3SX4I6ze89/k
y4FfgB8KOqixgv2ugS/H/hruczCcPtwgS/oHAaztdOnbkjf2BnVqyJcu59dH
81TDfwaiiEuEn4u9GV21fEf4RcQbdKXwj8ldoWvshZ71Y+hugmvCv0S+8/gB
8p2zdihEz0bOaIvVmZLF/qeQ7wz2+3DvgYHk6yQ+Gvsk8aOIPYs/FZ0Pf5HV
+XaEXgLIdwt+L6tvuAfdePj78XdY7fMUNWLhbiAmAW6KvGnifMGa+6B8V3DR
1G2j5yP4Ufj1rPVnrnngV+MXWn2HK116T3Jf3zg6PzrgaogtxI+1OqOWu3Wm
ymx9V94jXAO9RMPfLnMOtMNt9uo3LN/yAUfP8VuZS3Avwq0Fn6DbwbtNcWnM
h3AfgEFoclyau0TepLwHuHR6+Z29e6yehZxJMmfTQO6N1HgN+OW+vfomyqy+
JXlTqeR7k/VUq7PiDu6tB20y/mKrMzQRTVuQzoFH5E2Cp9FdQNdK7CSrcysW
LpJ+ymVvVntagiacs88gNg0uHZSiK6d2LdxW4hfK/vALQ5n/xOzH3wdGkSuB
2C402x1dK0YTSC+Dib0CNxNdDWc8Au1euSOrv3Mp1PVRZyn+SKtzyyFXFpwf
u6/oiL8ocxhU4n/h6Lcdjh9Bvl1wu8Ef7O1eziAGrgF/v6O/GWHkW+vV9Tz4
20AkvdSDWfIG0EVKXfrNhYuD81l9/yuJm06+k/gnrJ7POPLlo5smeyI2XH6X
qBvq1jkVAn8ruB4/hpwF7NOP/xEYTK5M4tejW4b/BAiR3wT20hv7Satz8CWP
znyZ/cet/gY1kquUfkqIfRYuH5ThRwXrHK1CUwqOkusw/DusvwDqZF7iV3Cm
VdgD4c6h60JXDbZhj7P6P+Fheh5A3VfxXwd+uKP08j9qcUHj
          "]]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0ktI1GEUBfAbJkympuWDLCtTCyqCXoYpzriygloYGBQUZbUxtBSJLFpF
C4PAFrZxIRhUG6FFuZpFCRolFIlJBEItKnJhIT2g1H6zOJz7nXvu+e73n6k4
29HcviwiJiGrJOJBQcTa3Ih3eAOuh0P0A3iyOKIav82LeL4qImdlxFR+RKow
ogFuwgJPKa0ImmTc5nlmZpeMUb1hc4+hVsYInjYzCev1+3PcSZtaHVGJr9N7
4KO5UTn7eMbV12TvkT3Ln8Q/aFdoteoaOEffyNuK78raqTfLc8KdaXwGn4ZP
sutxSn+c7xUUmesz90b90A7n+VthK30L3LDHlyJ+cwP6CecJ83958mmNPB/U
9zLv9O5jzk/wPO2S3Qp5jmfuwevkDOttx2XOubgUb8Z1MnfjcucsvAnvxwP8
d9ZEDOI6OUl4Kfen/Pu0ZvcN4V73v6clnbPN/lGPycy27y29NG1G3mXnKp5q
6OLphj79ObmPfId8eoHv1CEzgTtxMa4032OPKtwgp43+jd5oPgWnaAczb+T5
6jyv9wt+0+Zwi+xF+snMb27/Cuiw3/fMf0z9mV6OO2ljtL32GLHrjLrNfDsU
23PUngW4l7+M5wV9ArppNe66iNtg0NwQTMtoyvxGuBUuuGORb7l7/ul3md0G
OyBNW5J71fxTnhJvrDX7mu+w+oj6KM6DJTkJ3I8XVkT8B7xscdQ=
          "]], 
         LineBox[CompressedData["
1:eJwV0V1ozmEYBvCbI8wwY3HgY4jmq2wpS2tLsxLZ9tbstSSvDVk+Vk5MHFht
JeXAwZYD2VK+ioMdkYTCwWS1MqsVCjWxdy8zRsv47eDquu/rvu7ref7PP//g
ycSJaRHRCzPyIk7Pi/icFZHGabxtdsROehl+uTBijHY5O+LtnIjMrIgWnJof
UaguyI0Y5hk0H4BqGbn8r6BcRg9+YN4Bq+ZGrIY1fOvxnZyIG5DH1ySrXG6n
3B24jp6EQ7ztMgp5nslImPXa7ecfxGnabtprdR9U0JfwbsfNsjrMPvFcxBeg
lCfbnUtlTrhryjeW0/bjUX2W3U67H+yW0I/ZbYR8+nIotvd4QcQV9/oq7zfv
VXyUf4OMrTz9/BnaOX2V/jweo3XLb7Cby7vWfoX6rNkv95nEGTyBz/BWyn2n
/6Z/g3/gj/gS7sNpvFnOF5yUO2qnTV3tvNapb3H+AK1Ev0l/nPc2bULuOL7u
/BfOr/A9K3hWQpK/Dnb57rv8zbw59Fvqm9BI75F1wH9J2KvXP5x6f1lDU28k
t5Wvyt5SezV4hOc7NJiN8PxUv6en8RHac1oRb5e8U3LqZR+GfWb3ZdXiFv5F
PI/oTyFlt4i3Fu+BJzI2mre7W4Gcf7Rh81HImG3xXmUymuR1y/urns5zz3yx
+TJYZ/+a9yhWd+EaWZW0vXhS5pA3/oPb8PjMiP8haX1D
          "]]},
        "7000000000000"],
       Annotation[#, 7000000000000, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0l9oj3EUx/GzK5lhxkzJvwszjEzKWrOlWWm/ttAyS7E2ZNFWCpOSFYVS
pMkFtkhNSLuQJeFmZaKUbVqhkAlrNrNNy+S1i0/v8z3fz/k853l6llTXb6tL
iohuGp0acTo14s+0iD6cwB0pEWVzI8qxZU5EbnrEdVyht1A9j+5Nj0iaGfE3
OaJtRkR9WkShev3siDwacv+D/vFkyWyStcr8U7OVeglM6HfMiljLV6X3TP2Y
MvgaZW2X+1DuTtyrX02HeA9Ti9kTeBP7zX7g/41jVMM/iLtwg13K3S1Qn5K1
GPs8u9TsI6zm2ypjt+xOO9Y63+E7YibVHg141zmhX8lfzNvOuwlbZXT4Ljdw
VO44byse5F8jK998j5khvWE6q7fMXTatpgrf+7n9vumvc+7H187n8RP+wm78
ie+xTP4xeePOA84TOILHsdgey+2RJqdGvY/a5C9ynk8ZdJJv0B4D1CUnz37Z
evvdXdUbk/8dr8h5Yv4a5nrPL943Dw+YyfcdPvI38yabH/KMESrSr5I1ri7g
TbFXgd4Zeefos9nL2GD2ApaYz+ZJqN/wlWIvvqUud6+wSU6dHS5hLe6hCrtU
0mb+ZllFk/8ef7pdbunfppVmM3nvq3PMPvAuS/Xa7dDpXMT7EtNoi317eHsp
yz6ZlCOvSnbj5LdSv8OL7of5X8go9J4lMjZi/+T/J+MrHsUp+v8BCDl/aA==

          "]], LineBox[CompressedData["
1:eJwV0l9ozmEYxvHbrNbsL+/2ZrPF1mohhaLZbKMVExKKENaikL1DI0uS2MHG
ioNJ7UA5MCfKASu1g1khVv6sWRorDihLO1AoIZ/34Or7PPdzXfdzP79+Fa3t
O1KzIuI9/cmO6CuMyMqN+Ie5uJW2JCM24cviiBrrYuuHeRFnC/jmRAzlRyyd
G7GYTtFpmq32l+ewPq05EZO0QXYCb+vTJvumKGK3/Wv+VbwdaqPWz6iEt1vv
ArWReRFF2KZ+jKbk8+0HZbvkHmGZez7zV2E1pdy/CI9iHu519k12hn7K/MDv
VJpwF7WYZaP6fmzSP+WNX9P3Yb3aeurkq+QpUj+pnoUFlEt55r3rjhmzXjNb
hx4nzNXrrB1H5Kb0GMIu55lqT8z2iy9TrUH+nXW3sys0oP9mvY7LpOi5NzTZ
N1At3XLea55+XO18oR4ZWIYrsFbvCkza52AJLsF7/KWYsN+lTyEm7dv1P2i/
j7bRA76b5rhBk+ZaZ7483t/Wo3pnmb/f2VO1L/KjeF5tp/dewEN8A85fpb+H
75KQv4ov7Bvl6/g/8R7AFhri34PTuMz5db5qPCLT7J0d1jVmPIMNuJamna3E
Eff1yA5jqTs/6tGp9zmqtB/Xqxz7+BeYY0x9ggbVauQ+WF+W3S53P/2/4XK+
Yd+gJ/3fuiPh3iRd4r1I9dRI42rZPI/T/7NeVTJj8muwWY86LKe3eszHO5ih
/h+Qp3Gi
          "]]},
        "6000000000000"],
       Annotation[#, 6000000000000, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0l1ozXEcx/HfCjUzM+yUhXEx24yMlSUPF7OSExnykMXqeFpkkjGpw4qW
C5o0ucDEzSRpF5sVsZvJRJGnVp7aMszC2INOTXnt4tP79336fH+//zmzYwc3
VCaFED7SUHIIpyeF8DclhB4cwTp8ND6ESEYIWyaEUIRXp4aQFwlhrHiG+Haq
4bQQxlDTxBCqJsvhCnOLp4SwhPr1fKd/enL41pudx+Oh+a1yUYzKt6eHsFBf
uVybcxnW8MlyjuNd3tt4vzC/S+6Q3iq6ZjaON7DPzAe9AzhMMf2/cDsuc5eN
atOdT/HKwh67N6mvMZ+hvh5L+ezg32FPhdotvUfMpblzNUblmtVL8T620koz
jWbbfZ/rOMQ7obcR95uvpAX8etUKsc23nWWm1s4z4jnq+TSfNqs9lv8mXyju
w+fis9iFv/E1/sT3uNaeY96REP8Qj+AgHscS98m1M51PzHk3NfGfKc6kCJ3U
d0L/NPdpUcsXd5vJw33qe+mydwzb04uX1B7wuYJFZj57/1da6nt80luEDXqT
fa9+foNULFfOL+G83EyKfed4JeGA3kXq3d5wUa6aRx2uls9Xjzq/HP2NsBPf
0iu1Z1jP64B7XMAK3Ell7tJu1yr9DaPfXm+m3GHMNXPTeS5m673jXGC22Xta
7W+hDnGxuz/FdFrnzm/0dlKO+2RTAa8a/nv412IXvaPzev6YecKnxB1S8Z7e
OI++0f8nfsGjOM6O/7tWgcM=
          "]], LineBox[CompressedData["
1:eJwV0l1oz2EYxvF7VpO9she2JqxpTSmTaYYtraQkrWWYvDQparZhE4USU5Zp
K3NgQlabk5WDWZSDWSFWMs3KskLNwcgZSqN8dnD1fe77ua/rfn7//gWHm2ua
EiJimmYXRHQvjEhKjfiHKXgPh5MjinMidqjfYNniiGznR2kRZzIiztHT9Ijr
mRGPsXhRxElqpXnqv+aOyKlPiZikrfwTeF9WH41lR+xWvzVfarZF3qhzM161
e6XzFRyRn6X3we7jelO8aeoh3ja+J5hvz7TZQiyiRvuX4zFMxTp333l/0C+e
Ktpj/091blbEIed62k9V8utwF51y12jvFuezzgV8WTwn9JIwnVIo1bc9sKPT
u755703s0u+gJu8b4ZuS8RTb3CXqPfe233aVmEnUT1bPxx51g/sb9vXbs11e
A28jvfItVeoKKqe77jvM9eB698v4EzAfS7Bc5grMmcvHXFyFA+bzMFNdKycD
c9RN8g+q99FOGjR3R36r9/TOfae5DJnJWKr+4/2j6iT3Pb7rhf5XOaN4Xq/G
TC31u6vGXuz0O2X6va7hazsq+Tea/+z+AO6lWf1aHDA/Y8dqM116RXiUb5s3
tTiXee9prMBNNONuLY7Y3c4/jHkyPsm4IP+L7ylQj8vqNrtB7xYO6k04D2EZ
30fny7zVfA/1RnCNNw/zt8/9l+3ItDeHLpm9SJtpXH1b9iS+5HtGY/IK+d7J
qMR1OGTngIyl6ve4BPswwY7/fI527A==
          "]]},
        "5000000000000"],
       Annotation[#, 5000000000000, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV02toz1Ecx/GzTNkMM5smTMplVoxpS0bYoi1mzKUoasvigShiyVjRWqJJ
RI1pWU1iLcaKtCfT0mhueTC3xmzNcmmXMhFee/Duc873+/l+zjm/f/+ZRfsL
9kWEEPowFBXCydgQPuEUvuAzfo8NoZI+ig4hISGErTEhZNAr8SEkTw4h0n6a
/c1xIfwbH8KoCSE00INxanS5ufRJIWTRX3o/+CLk/bGeI/svz3kZbfIu0VxZ
ueotE0NoxU6+ZrqdlslIsr4n+w62mX1mpkRmvTPG6PfwXTVfqtZn3Yt36gO0
g0Y5u9DcCv5MFKhNtT8hL4lu5tuEtebj9TfQfHk7nFuI3Xo3eHfRo2ZXq91G
I/LVHtAmZJmpM9viXTV0SPYw6pAnt5Zmmi+2XuANvTxptNn9ZpgtV6+wn+2s
hUjk3aLXqt6GNLV2+hSn+TppN17hLTqwzkyJ71mKr/aD6McR/mz3ykGsnD00
jrdBfjydrpaA43zH+BPd565eiv1H90ymRepLeKu8I826hn5DLy7yPJR5mWaY
7fI9erDU9/kgt9pchf01ulJtUPYqOkx/YpmZaJlnZAU6wLdIfzEuqB2WUUlz
1FP052OjfZf+C7XX9CV9Qp9jr3uck9lmHalew7975LfxjjXmquXVYoo7HdCf
y3fdeh6tp7eQar7Rm5p8y3bralqFbvOx9uvduwDv5ebRdDmznJNKy3iK5ZfT
TrzBWb5+c49lZLtHDL3PW2q2T72Pfsch/Bq5Fx3t//Yf322JdA==
          "]], 
         LineBox[CompressedData["
1:eJwV019ozWEcx/Fnijr7y9msNYQxo6XJ37Etllnm38L8yZ9alKRthqLmQm0X
+ycrU0yaVpub5WZOLlY7VoiVjFGGYkWh3KxcLcnrXLx7P8/z+34/z/epc5ae
On+gISmEMI2ZSAjdc0P4Ny+EHk7iv5ycGkIvx5NDKJgfwm77V7wxO4RM60dp
IVzOCKEJw+khXI+G8JgL9DeiVl9tIs/ZWT6N2pQQmtXfznIfJu37ZY5bH7J+
re8tLqoZ4wZulbPMelT+CKLOPrg/lWOZ5uRs2TH9LWbKtc7BN315PMVRrjNH
BqfgqLNpmfvcu03PH5TjsH0lt5ppB7dzB447P4gL7qtz91brK9alXIKorGzM
Rhpm4YE7Oriff5n7ljm77DtRb9ZR+Z/1DnNL4p14asYKuaNcpK47keV7xH4O
99if03tTzYA5quQ2ysh3xwvvyuNyZ8XoVNOOHnXr1WxGQBFWo1jmYl6OCFZi
BQbV5/Ai1MjJSrwP9fJXyT/pbC+G1N2Tf8k8feZKMV+6zAjft1+HMftjasa5
1/t68Mz37/LG+Kre/epqMOBbNe/BLtxwV6m+l+4q46/OvuCEviOYcV7Dg/oe
olBNl7N8PqO30r1VaLIvNPsPZ1v4J6/hDWjTHzdDUeI3IyOufiFPedsSnpA3
iU3uvaNvyNl76xh/4o9o1l/tNxLX89u7RnjE9zbnFXJ3ItcM2xO/QRnX9JRg
wtndRD4/V/8E4+bJ0/9GXhmv5ZieQb0L7N/xB/RjAn0I/o//AUTsfwU=
          "]]},
        "4000000000000"],
       Annotation[#, 4000000000000, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0UlIl1EUBfAnVmaWQ5oGDRDaLjRJiQYqo1RKrDSohdKAJBQURUj0Fxch
TVCLhoUiSEISGWYWmEmLrECJCtwUTVoYKklZkVgQ9fsvDufdc889933vW7L/
SNnhmBDCOPyMD+FUcggf4SyUzQ5hFP9JCOECfjwrhLR5IeRDrF4yjsEdc0JY
4HwTz0gKYRl/e2IIx+bS8FpzeakhFOAp/a98rTxB5lL8l+eSnP60EIrlFEIx
vTclhBJcqa4090BenYxF9HvOd2C32Rdma2TesiNO/zPvCERoY/gEnm7XW704
PBP2mmuTvc7MDvo5WVm0FHWfuszcFnOp6m24lLfC3nJ8g3ZA/7aZk7yb6B3Q
CaX0HP5u5wLe6869vqsZ/5afGdVwiYwWvNp8lXM1jPA8dLceWMxXTzsDWfbk
QAbvTr2ntH7IpT3Hz+C8NxjEwzAAb+A1bDVT4/0i8EX9AybgBP9G9yqCJDnV
OIW3XX4qXkhLg1reCGS4z129Lhhyz320PbCSt8F35Do343S+cXyVp0dmI86n
jXqP9c6rvM97uU3mTtOuRf+XupD+RMYG3kk71uB49SMZifgfz3fe5Xy/cDf9
sj219CJ1Nk+jme20TzxD8Ir+AR+09yU+hPtxH8TqNUf/Y/T/eIvN5ppktcB8
9zqq3+qczbvL262Q3UbPxp12d0X/Kb0JGmDYfJJeubsP4HdyS5zz5GTak43r
eKpk1uNEnkF8ke8KTKjj5EziBHyfP2J+TP0NV7jjcTwVvRuelh7Cf0yXha0=

          "]], LineBox[CompressedData["
1:eJwV0ktI1VEUxeETNNBM85GIFYlWGmJCD1IchTbILAstsxdSJCZJVlBhUGGB
WlKRpdnDELKJo0iCbilCTwd5SYiSooKaCBXUJHAQ9t3Bj3X2Pnuts/+Xm72/
uerwrBDCH0zHh9CVHMK/lBB66YG5ms7xtE89MieE3PQQUtU5NJk+TgzhIU7P
C2FvQgiRpBA6U0N4RHN5m1HHV8cf9L6YaXCuo608PfO9hxlE8Qbb3I3z1dJ9
3jlq7qXMNjk5+qPOw0jRf2+HBDqUZk+aLjsD5+yUSc/SgzzfeJPVKThkjwey
k5x36P92v9m7FSgzf96bW5xrsRUd6vX6nXS7eheqcMSbJ3AcJeoUOQ32mVLP
dv5px/vyLzjfo1Pqa3b8a+ayXpMdRuV+5I3QDnf1es/sVyZjlBaa60I34tS9
tAeN5q6auY4NcptlLPXGK9+UTdfpFeGi+w70enO1meLYb60upAUokrmYLkEc
8rAMg+Yz6CJUy0mLfR+a5C+Xv0dvE27LuoVj9um31wASZd6ld7AKY+qdZqK0
xVyf73zue7/LG6On9GrMPfHmgLtK5wqU45K3ot4p5Y3IeKv+rL+brwbT7qrp
IN+4uywz+Wa79evVG9VP5bfo5cd2xy/9kzLa+Nao22khXRH778gZ4VlIv9on
i07I+oC1PDd4PzlH9Bv9H9pkT+q30kp1NX74rmHeYTPt+uVyX9NMO5TG/n8y
zvCUYELvZiyfXjHzgidqn3fIllEgL4+upEN8g/wL1JO0mN6jE+jHjJn/JfmC
1A==
          "]]},
        "3000000000000"],
       Annotation[#, 3000000000000, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0ltozmEcwPHH2l5t7GDz0mxqsytpLIfFjZu1GK014cIWssghpxSxMKQp
p8bNtHpr9Y5MYyVjcWGkuZHcULOTtnYhMqJhs3zei2/f5/k9v8PzPv+3cNfh
TYdmhBC+4EdqCA1ZIYzzxJwQjlnXzA7hDJ/C47QQ0qIh/JoVQoS/8c30EK5i
MCOEdPsLXJcdwgq5hTkhlNhvVPvW2Ud573hMrGluCCPcok8zYrgm1oXlcjr5
ODaLb0VxZghxfdsw391aOY9fuV+ydatZMSSZ2ys3hfv5iJlDPID3Yp+4Rf8q
s2/xabX1uGH/xLyfcpbJGeepxDyxaZ6p93PrCDfY9/BLlMsdsR/FRfcZ5n6s
Fl9rdimvQpZ+HepjYlFzY+aVqG/mUmfbrXdiyHmX9xrkPs6Te0D8IHL13cd7
sc1ZVF2BWAYaxM7ihPf4w3/xGb8xgS3mTPIUPmAa/3BdfoV7bUCpPvs5V99u
/efxYrEinJd7DgvdZ8DZqPs94zHeI16HNfJbE9/bOs6L5Mad54uv9wYVWGpf
ycX8yHuVoVP/+9gtfkft7UQ9vie+NWejQn618169suyL9G90fgnt5uyw7+A0
d+qTk8yRxP9WXRKnio2qj3C7+nuIqH3j9xe4w0PrfH7K3aiVW+t/V4N6b3IS
lfqvs39t3aSu3HoycQ/7KW5z/tW8OE8mvrtYlTllZh7Vs8N+ibMUZ3flLVD/
gINemdZJvJJz8ELNZfe+gmrxRh7GEHrQhP+WUYam
          "]], 
         LineBox[CompressedData["
1:eJwV011MjnEYx/F/kqSeXhRzwmoma9g4MLOZyRgHOujBlq1osaSN2ljrANEw
85K3UqQNHVgHZpopaplpOSmMMYwDHdTmZXOAxUw+98F3v///un7Xy33fz5NX
URPflxBC+I5/KSEkzAjhWWYIL3ATK9JCuE270C23dFYI+WKLaC59FQthBE8y
QmhKDeFNeghtM0PYy1uaHUI1LVQ7KDdHbogO8J7OCaGPFunTp89n97jzcflG
52OodK9CL987Pd9jeZYZdCUdVRdzfmROP2bzLTYrZmaf+xl71fPV4atYgVy/
/vX2eEgvq21Ggfs8/mGeLj3i6n6JT+AHnovfl+9FIe+w2Ag26luEHnt0qntA
b9Dr0R5qRj3DcLSDWSPqStQ/pcvUtKMDae6dNDXqa7863ha+VhSbsV+PfL0G
5RbSErE4rsi3ocvMDJ5MJCMdMazjPeTdHcZU92lIQgf/OXXnsUqf9ZjPW6Z/
sdhmbBDbSregyj7Vckn2a7VnMm2mF7AEA+5r+R7TXdG39bxvzcnV86z3UGt+
E/1p7kU6pvc4Tqr9Rr8g0XlcjzFU8iXSA6hB0POWflPoPb2Ko98GbcSJ6PeC
TWJzeX+b/Qd3op3t002z7f7JLrvN2IOjUZ43VSxHbrqd7rp3I8Uur81fED2X
cx4dooOo5Ss3awcazHuJbdF3pZcQxFtoGxp4r9Ij9CPPpJkfaIV5ZeauMWs7
PaVvrz1L5Q5Ge/D1IMMOefplRbvQft52taudr9Gd4q30r/0m/GcnkeL8H6B9
iIY=
          "]]},
        "2000000000000"],
       Annotation[#, 2000000000000, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0k9Mz3Ecx/F3mFkl5c/NxDiQ4YILho1cHKwDI9r6baSZIouLWoYDiq1a
hoNx0WT9kX/LbDbrovmzFeZvpWw6cFCprQOP7+G51/vf5/X+fL6/35JUeUFZ
WkQM4XBmRHpORNrciClaKt+8ICJFN9BN2Ijr2RFP0yOWiVdgMbLMLKWL1N/N
jyjMiOijRXSUjuEy31b51nkR+80V85maHdGvdk3/BlrUq+dE3KX18kZUoRfV
SNlRQz/a9wmVeMhvFu90PMiizrar9erV8O+jx9WP4Zxeh32T6gvN7BM38Zwh
vk870YF2pOmdUJ+GgzxGaBkmxK36k3Qs8RZX4CjKUYZab8i160NyV7zHIX5/
6QS28+mUj4uLzZX6Ft/lM91xiB6Rl9Dd5gZpvrcN0ILk2+ltkxfR2/bfse8W
zfebtSbfLbm7941iFhrkbeo79NvMNSfvo93O7+Xzgla4x3HskjfrNdlTad8r
vXXybPdaS3vkKV6F+sP6e5Lvk+zDKXk/j0EMYKW5m75DHq3Tf+L8I3xBi/wz
HbfvMY/XZkbFE+gR/6Ev6WK9Gr7L7W9Qeya+4my93mm1Knzjc8k7v9Iu85l6
b9UzzWfgudpJvWHcc3aInne/EvFZegYj+Imdal3u3MDjovwCuu3M4bfF20vV
D/D7oXaV9wzz01En/2W2lv6mq8ytUs+1K4+uwerkv6XezKedNsrX66fc/Y1a
qAXPf36n/2coh78=
          "]], LineBox[CompressedData["
1:eJwV0U9Mz3Ecx/E3rVVKKfmzcKg5WFioOdgcGDIHmjhgHNrYmOmgRq1JMsxC
HYz5cynSL/2Z2cw60aFmOfh38G8OWrpRTvywPH6H516f1/vzfb9en/1+xTW1
u0/MioiPaJ8X8QzjGEZ1TsT1BWZzIi7zz2kBvwi5mMmOyKfLzEudBwsjVtM/
9C/qCyLe8VXzIypyI5J5EevpA7ML7i+hyW7SbIucUX4Mp9GIQ2ZN9LV3vEEd
BmSly83AY3sZMtO8rUdmw9yIBD1ifhitsvtSXb4t4Sud8+yPmHfKfUEX8lPu
u2gC9zGmp1f3S9qONXLb+CLfV+pbQotlDchYTn/TJHbafcv/ci7X99m7dtmf
sF9Fv/BL3bf67jxfoncFSvHU3VF7Q3SV7wf1raSb8yP69XXwwb93nkm9i+9z
3uT+HN/Nt9ID9ovl7aPH9Gw1W8xvo8f5Iv2f3G3nx+VV0g/8Ou8td3/XfRn9
6S3TKOR7aR8eIk9nhd9go91mnS04iwk5k+h3/kZbdA7LaaaZ9Az9h3syutGF
dPMhWqGjQ3+j+zvOV2XU6ak224ObZrX6bqTernvS7CLSfD8bnXJO6hxFwu4I
PSV3r3M9fYQ6XEEbbsn+av82beev4ZXstWY7/BZltERmu1mN/Cn3P5DD99Bs
mqC59r87p+vJQiaemDXI2O8NG/iDqd+CT/qfmul0VsR/ZJB8ZQ==
          "]]},
        "1000000000000"],
       Annotation[#, 1000000000000, "Tooltip"]& ], {}, {}}}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.969023589454808*^9, 3.96902362238761*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"de731507-e9bb-4653-a77d-38bbe2c37f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"x", " ", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969023642278084*^9, 3.969023695191691*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"ab1237ca-a1fe-4f1c-b7ba-0196b2bfa983"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJytnG2MXkUVx7dU2VC2YLe7bXHLdl8ehdT4QU2MxjW9RGnaSmLVSIwSSBr8
YGpLRSSS1MSWllAjVEDEQGITI6Ha0kpaV5SU3lA+SKMSNcojVYoB2/IWIGKj
iabKM/ub6/yuJxuJ+2XynzP3zDlnZs458/Ls+LprPv7Zs/r6+ra8ua/v9fLg
hmPTG46dXff1/jr1Az18+jA4ld0p8KFEXwH+afq+An/k9s7q2zsLMv5Jj74o
44tWv95gacZreu3HM54pM0a+1aldlg+MfGDkAyMfGPnAyAdGPjDylf11Mka+
TvouywdGPjDygZEPjHxg5AMjHxj5yv46Ga9K/OrpxCfLC0ZeMPKCkReMvGDk
BSMvGHnByFv218mYErldIj8Y+cHID0Z+MPKDkR+M/GDkByN/2V/HuDVvPU88
DtYL7BJ9y3XbnQKjLxh9wegLRl8w+oLRV37CuLUuvQ48zzxu1gvsEn3B6AtG
XzD6gtEXjL5g9JUfNG75Ha9zryPPS4+b9QK7LP1vd6r0v92p0v92p0r/250q
/W93qvS/2c8bt/yq/Zj9hNed56XHzXqBXaIvGH3B6AtGXzD6Ko4Zt+KG/bT9
oP2K153npcfNeoFdoi8YfcHoC0ZfxWnjVlx0HLKft9+0X/G687z0uFkvsEv0
jfIMx3XHUccp+337RfsNryvPO4+L5UZe5xmO646bjkP20/ZjXudeB54nUV7m
PMh5B/I5Ljpu2K/a73hdet5GeaLzMudBpf9txelWXLPft1+03/C6WtnjP2cm
zk/Ue3r0E4fBE71yoD7WE2xZTXsw7cG071VPX5Dbg2kPPtP7W5hLvgfzPZjv
wVG/5gN2CX8w/MHYwXpbL8tpvmCX9BeNg+1sO9ou1sP9uDySyhVRvcvLEr8K
fHHqL+OzevNqKONNSd6Mn0r6ZPy2pG8V9eOS/sD0B6Y/MP2B6S/Sw/24pD8w
/YHpL7KL5TZfl7aj9bQctrPtYDk9DrZTuQ+YUJ7crAv8GvMHvwd/z2vaQ6c9
/dMeDB25oJd+dCLvO+wX8LPI73UMHXm87qAjD3T8s/0Zfhx57JegI4/9CHTk
8bqHjjzQqUcO6r0vtd/1Ps5+0/se+znoyGu/BB15oXvcsLPjjvef9vfej9r/
e1/qOOB9nP02dPSzn4WOftCZ5/bv3m86vnj/6Xjj/ajjj/enjkfepzouUY++
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
vpyPwId62v0LNBdvVw==
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxN3Qe0LUXRBeC598wRDEQREVAyiEQRkCAoQVDJPHLOSBRQcpIo+ScpGQFB
FFBQEMk5CDyJikiSnCQrKBj467u978K13qzZp29NdU9PT1fXrup5s2zxnTV3
Hu267taPdt2gzjsNu+6fdf50nVeuP1w90nW/rd8f1FFF3RR1TF3HJHVMWseU
Kf9IHVPl7G9H9133Xp2vrOOEwteUnn8X/myu/2QOOqrqbq2q67qSucbvkVbP
Z+qYMXpdM3PpGa2/jdQxQ+r2t1Xr2kGVXVV4+rTR3z6XOqZRb/199jovWMfm
Jf/p+n1j4XULf6LwtYU3KDx54esKb1z4hsLXu7Y65sbCU9Yx9UhrF11zpI3q
nDNn7Vqjrh2W3NWFF6vO+Vjh6es8d+5fuzav35+s8s/W+ZS6r7nq+FT9nis6
3PeWpeczVXZT4W0K31T45sJfqPbcrA/q+Hxk6Z28yq+vsknq2Lrw83X+Sh1f
/J/2LtK1a7Rl0ZLZofTOUjILd61uf9u1yuaqsjsKX1Dt+mIdc9Tvb5b8nvW3
+QufV2UL1DFb4QlVvn+VL6Suwt8uPFPh79b5ljrfWXqW6Vo7FqpjuTq+1LU6
Vy35fUpuwZL7WuFb6zx3HV8vvHuVz1t4npH23L5ax/K5zn38quq/rI51Rpre
OfIc9qprj65rv1Xlh9X5tjrfW+VLjDQdq9axUckcXH9btMqWqWNZz00dI62t
q6eNc6ZfltK+Oq9Wx8F17Ql17apVtkXh2+u8WB3LjbR7W7OO/av8uJJZucp+
UPjkwqsX/kW1d8k6Fi58j/scafd0ev19rcJ/LPy9kj+ifq9Yv48pfErhNQtv
W/iFOi9dx6Uld77nU8f9pe87dZxR5TuVzEvup45dCr9Mfx1X1t/XqmPjwntU
+St1/kYd+xb+a51XquP7hV+t8yr6rfBrdV5NXYUvrzbsXnjTOraqOr9bx4+r
bNv6/afCPyqZc+v3dvX79MLnF96h8FGFX6/zGnX8pPBFVf6dwhcW/kXhXQtf
XPiywt8tPFrvw6rVzq0L/7jKL6zynQpvbkzrmzoOSf3wlvqlznvUsVXhb9d5
T2Og8DZ1bFd4k9K3t7/VcUXpvLJ07mO+KHx14f28/4WvK3xA4Uc9szr2qmu3
oKfOu9dxe8ncVjKHVtlxpfPwOp43HurYLW26vmRuKJnvl8yhaaNrD8tZOw/P
WTtv9i6X/MEZXwvmPdm+yl9UVsdtVc8WdRzjXarzVnUcZ6yUzH117fGeQeEH
Cp+obXX9QWnX/+Wsz47PWbtOyFm7zoicv5+Zs78/UTp/VPp+WMfThR8p/acU
fr7wY4VPK3xidLinB6tdu9ZxVpWfVr+P7VpbTs9ZHY/V307Wv4XvKT1HFj6i
jrNSJ32TlI43Sv8vqvw146rO59TxVuFnqvy8wu+Y3wqfX/h9Y77wT42xuv7U
rtV/fs6n5z05Pfd6X8nfVfJHlfzjxlkdJ7nfOv+sjrMLf2CsFv55HYNqz6sl
f3Hhn0aHftq4xurb3tM6X5q6f1HHL7uG1X9hZN3fspn/zCsHmbtG2nWXpX10
T1Hl75TOK6v8+MLfGm32ePLCV1TZr0eaLWWPJ69jdNBsNNtq7mc7pyv8n7pu
ldFmg9lCNoV9eqz0/LPKrxppdtvf2Es2la1kiz9SOteMTZ0i17Fz4zZ+7JpB
s9dsDXs/df72sSpfO/aPbf9k/jbPoNkvNou9Ymfmyt/ZQ/brUyWzYezx1Ckj
y/ayu7ORHTS7zBaflTnzYe2r8k1iv39Y93hy3+zrJ6t8vdFmg90DGzF7dM+d
dpxasj+K/Z0qdY7315y5Zs7Ss23s8Qxpu7/NXuVbZT3x7dhc8/Oq1bmrVfmX
h81WW38skOsWzhhYqOR3jK2cc7zMOKi2nB+b+5M6nxs7u0LJ7xWb+OXCO8d2
r1b4gNhQ97NI6liqyr8XW25OWaZrc4x6lst4/FbJ7Bubvsyg2Wv29x9V57Hm
nL7ZZDZ46ehdPtcbQL+O/dWn6jB/7V56jon92rjw4bGz7CQbvErJrFflh4w2
O8j+rp72sb+rpZ1zpD/oZX/Zbfb7gLr2xNjWS/tm38ft7xq5r71L5v+yBjik
8A9jr9cq/P2sVdjeNXMvx1b5GbGze5qXCn/T3FT41Njuv2VOeqfkf5X31fv9
5KDNa+bJXWN/2dyrqm3r1rFZ4Z0zn7PLh8fOsq0Hxf6yuZcUviJ2cL/YaHaZ
7WNbxuxubPoKdRwdG822nlL4gtjfcwpfHLu550iz2ezT/8UWTzDPFf5V7O+1
1uexuedX+S9jo8+LfX+ka/bQHM9m3VEyd8YOsrlsGRv8w0Gzu+wsu8zesZ3X
l+7r+mZnf1My18T+/qWOX2lLyfx2tNnov3TtXtkpdosNVye7fp11eGz0bvn7
QV2zsYfmGvbab2uFG4zn2OJxu8tW3WLNFps7bptd/3js22uFzyiZn2UNM3HQ
1gTs1O/qPu6I/X2kyv8Ym3u79yQ2etzWjtteZ/aPPWSPTk27x8v8nU1hnx4u
nQ/Gpo/babr+PNps8avGW2zv692H9vW03MeJuWavYbPDcw2bvT0x9/9AtfG+
rBV3yHrSGuPu0WaLX0hbjG02iW08K3qfHW22+M3UoZxt+/qw2d656/xybPLb
VT4xNvbFwi/Ebr/VNRt7Ya5/fdBsMPuuX9jN86L3wrSj65ttZovH1yhndB/a
eNe8Gfv89+5De+9vr402O/63zE1fyxziGnaavf5StWG7kpuZLenbuGRnvzts
dnLeOr872uzvu55X3+zzPwpPWde+X3jSkdZW88K4PXe2TjfGf5X7+Vbp+nv9
nr/Og7r23cL/qfIPzDF1vF940ipfp3Bffzuq6jqyb350X+UTRpv8f+v8zkiT
/3iVv1f4I3V8rMpnr/Nt9OSebik8c8lsXb+nqt/TF/5vnaeoY6bCH4y08k8U
Xn+06fl04c0KT1b4dH534Wk9oyqfu/D2hU+q8k0Lf7zwSJWvVPhfVddUhTca
bX1yVskMCk+nH6t8WHjGwrMW3r7wNIWnLfyfkVbXDIW3GG1tO6Ou3Sn1zlXl
feHpC3+0zrPW+daqa5Iq/+dI66ufVPl6df5zlZ/NJ0q985XMbqn3nCr/cR2f
K3xxnT9R5Z8vPGWdF6jzXXXtwiW/R/puy8KfKry4/qrzfOaAkpm28O8L31d4
2ZKZrH5/oX4vXnjvtO/npf/AwnMWXrrKD0pdKxb+QXRNVecvev9Kz3JVfmj0
LFl4vzzLTQtPYy2hPwt/ofCO5s3S//Hon7HOa480/3GNkjk2etcpfHzhL3mm
db63zveXzPSFHyj8UOENSuak+r1I/f584V3Sz5+p8/11frBkPlt43ZG21pqu
8H2FHyi8GR8hbfug2nNm4SULn5328A1XLpmj0r8z1PnBOv+hys+JTvZlq5I5
Lf38l9Lz+cJ/HmnrUpwPDuejVf6NKv+l5114xcKXFL6kzhvW+XHvdOmZv35/
T//XeYM6P1blF1X5fPV7t/p9U+GFCx/kPSm8SOFDCl9a543q/ETJ/8GcX7+P
rd/nFZ6n8M6ujY5nS+balD3tHS+ZBer3HuaBwvMW3oV8tfNLhQ8sfFqV/ybv
zq/rvEmdn6xrr4/sM8ZtyVyV5/to4a8UPskzSxtfKZnfVvnv6ve+nl/hxdPO
O1I/n/T+Kl+sfh890p6D57FB13ihO0baWuqGats9Vb5//f49XqLwCcZ3ySxa
+DDvWPryuZJ/KGV/LXx3yS9Rv//P/FL4B/xhY6Ku/VPqvTd9/HLJ31x//336
4ZmSWbrwqYWnzti8p2SurPIv5r5+Wuf19UGVv13ly9Xvn6jbOqrwmcZQ6Vym
8NmFX6ry5wqfbg6s8n9knGxa8+x7hb9Z53+UzPKFL1Afm5L232vOz73/ufAR
fZvb/2m9FPn/FH6r8IWefeGn0/5hyf494/Bv1nJp578Lfz3yU5XMNwv/tvA1
Vb5Q+pz/xo/jY3UjDfdd8/nG5nV211xVx38L/ztzPp/us33jGcm9Ujq/lj55
sfBX0w8I3ZUzJ/+zbzwsPc/2za7wK98fbfbon2mLdvALV4md+UQdz/Vtblfv
tXknxzlbMpPV8Y8qe2qk+aF8upG8s5/MvDIx9vjS2N1h5m0+5kdjv/iMs/XN
xsFrxhZ9quRn7xs/6/dkg1YX3/Nf3r/gtWNzpu2az8eezFR47r5xvn7zjfnI
fMGpS8+/R5pvOGffbC68cfR8umReDDfLxk0TO8U//XzfbCU8RXR6nt8bNtkZ
6jxd7Cyf9P3YUD7mPH3jdtm4rs7PjDR/dsOUzdylfWkv7pd9nrXw8oNmh/iA
m6R8liqfbdDsLD90xkHrEzpnix7+2Xx943vZ3Pn7Zt+15wt9s9faueWw8bdL
1fmlvnG87O97dR4ZbT71afGvlV8SP5Et2yPt+nLV9XLfeGP2d47Ybr7zQn1b
h8Bbxc7Maw3WN97Z77kHrU9wBR+psmeD+d9s+Hwlv9ig+c7s7Jf7xiHDfGy+
trXeIn3jkNn6BQdtPTTOS9Mzf8ks2jdOm61fZNDWFnzqnXL+Qhe+IH25YN/W
J/r5331bb/HN+dns9ldKZolB883Z7sX7xo3D/4m95tcv0Tc7C18YH58df6Vv
/DD8lUFbn/DfzwxHoT8Xy9pGvUv1jce2rvjqoPUV/33yKnsu+Ct9W//Qc1ja
uVTWw/Okz5YOtja+KPwDnew5jmXlKp+lb2tU76z1D/9+7a6td/AHi1lf9417
Z+u/MWjrKn9bfdB4BmsS6xpcxeIlv2HWNviBVQZtPeRvmwwaP2BdsdKg8R50
LtM3Xp2eZfvGw7Mfy/VtfYVP+Hrf1lF0rjloNoa/v3zfeHjz0YEpW6LasP6g
cQLK1x40LoXO7djZkeYf8RuWSv/8t/T8sm/rHLz94umfzQetz3ERl+bvytlb
vAebO2vfYk59dCnX99vwqUcad3R4dK7UtfgGPTgTf9cG/MhMsY/kV+hbjEBf
Xd63+sR9tB2fglv53GhbGytfpmvl7um3fVvHigWsO2jztT6cebStndz7LKNt
fYW7uHuk8Sx4kx1L/q6U44TwKcu5x9G2jsKBWIfiYFas8u8M2vXKZ6/yP4w0
fsM1dC5b54kjTc+Erq0ZjbEVzG+FH0o79xm0daxrdxu0a/Ahn05d65T82n1b
Xym31sblfN199y22Ml/qWyb9MVeV/WmkcSkHDtr6FidjDYw3Wq9r62ic0zcK
z1n44ZHG4Rw6aOtkWH/QiYc6Kdd+s2tr2zXzTOco/Mfotw7HLa3ftbUxGeu0
4wZtnYyrmS71rtu1tTb5b3Vtze/d3LDwkYO2ntf+q+seH8m1+LOx++waz2Md
aE2O61o7dRkz62SM4VTXjc4r+sbvGTer9y0WY8yt1rf4jvJzI79R1zgZXBP+
5oRB4xeMoRMHjf8yhtbsW9wHPmnQ+DJj5fhB40/p/03fnp9Y1cmDxnl5luv0
LQ4Fr9G3WBL9xoV6t7TuGLYxjXPjD26XtuGEcEP4Hu3DqSkzBuGtuvZMyOCO
xuNJuCfX4LOUeeYwXmtC3+JWG6XP8WfiTXOn3h265uNsm/6kC58lruT5wHit
z0dm+649n63zXBYs/MZI49OeLv1P9c0nurFvfJq1NI5u+1zLL8RX7di19TO8
ceEzB40b5FOs17eYF8ynwRHu1DVfCd6k8LmDxn3xbdbvW1wM5rPgJjcvmV8M
Gn/IN7hg0PhGPswGfYt/wfwt/OJ3uuYP4RR3VtegcYz8qA37Fv+C54/+Xbrm
05HftGvvpWeBY9yobzE49W7eNx8Mr3jZoHGn/J/X+xaf2yPjYs+MjbG+T//r
y73yvH49aH2Nf9y0bz4afGX61nPk24l/7to1rpKPsnfX4kjwPoUHw7a2157L
48vgOa8eNM7Tmv+NvsXyYH4hLnO/unazvvl95Lfsm0/ob2/2Ld7nWYtL4c7w
Zlv3zRfFbd44aLwoX2ubvsUEYX4tjvOAkt+2b76c37cOGi/Kn/x23+KG8O+r
/MujjQfcoW8+JnznoPGlfL/tq/wPwXcNGg/M7+Mv4oMP7BrPiC8W47t70MYw
7pTuN4O365u/emiexw/yrt0bvxVvOLFvXCu/DD/Jpzyia3FI+MjC/bD5v3jX
neJjwg8OGv/IL34s56NKfjhsfiv+dt1h42+XrfOOffOF1ft23+LpfEM+MS72
mLp2l7754X7v3Df/lp6/9S3uqZ279c1Pxgn/edC4XP77XX3jh+m8NO/FZl3j
ITzD/Qs/Pmj9I46wVJW/FfyXQfuN/929b/41/FT8aJz1Hn3jK2BcMd/05K7F
S+EfWqeZQ0YbL/xQ33hgvvMLg8Z98xn36psvjB9+PmU/qmufi1+Jd/7IsPmb
ZPbsmx+tXAyWD3qK9f+g8dRnZhzgoI2Lbw9bnQcMW4yXb31u18b0jzPGXx20
e8cJL1sybwe/MWi/cdD79M0HH+Ojww/gl/ftGw8An5h6xXZPin5lfw8PgKfe
r298AvzuoPHU2oTr5sf/uOTfiy+P496/5F8J/teg8d18/Fcjf07XfEJ+opyi
C/POinGsUDJ/G2k89kjffuOmD+gbbwCP9o3XwmUf2Df+AcZj4xh+3rX4MHxR
4Y/0jRMTl/pT4UPMXyONc758pPHO4r24kIu7xnuLOZ9X5ydHGsaBf79v/MYv
0lbXa/vl0fXrwpP1rf248Un7xrn/Mjoui84/pg248jn65quPxYmHjVvXtkf6
xofg0A/tG1cDT9k3nh1P8mjfuBj8+2F943DgqfvGmYt5z9s3X1c8+OC+8TDq
xWOIkffeqb7ljeEtPtk3rl57nu8br0IPDkHsfJwbgPny0/SNG6cfv3FNysX0
rDm2zHoHtn74VN/4bXHuhfvmx8J8WDHgcd8U5ktO2zfeWMx16b75bzDfTcx1
3Ce7NdduH39k9axb7wrmi4itWr/xJ27PtfAdKX+ibzy2WCkfgi/BH9k2fgef
gk/wu+AV++bPkMdR3Jg275Q1v/Xt9H2Lq1p37pK1Pb/A+l1u04TgiSmXfzQx
5U/2LcY65nv0LScJ/nTfYsfW93iLG/Nc+Ad3p96V+parZI3+mb7Fgq2/V+5b
3hL8rb7lNtGzSt/ykLRzhr7Fc62t/9q3XCN4ur7Fi+nE+eCFcEfisH/I870n
tozdF7e1Xtw660rYmlBs9+Fg60TYukWs9k/B1jKwtZ+Y7CPB5okn8v79d9Cw
+XCTrPu2j50cy0+KbYX3ytqGnu1iRx6LjDnv8ZEP51XYXHhNdG6XOfKxlD/T
t9wUcwOf9PmME+/+X9K20fBveL/Jg70XU4R3wpt9Ntiz+1z4nFm7lrv4TMYS
//HFjGFzzF8yzywTPxpHsUWw8cyH1R5r2nnCdeBw+MLimNaufPYXMob5sPRb
Q34t8gukb9kU87C1/x/yHPmtYuubd82vfDnjlu/5SsYA3xPGe/Bh/5pr+Yww
35N/92rGAN8Q5ru9FrvGLr+eNngufM/XMwb4fTB/8IcZb54vf/O1jJ+JWSd4
vk8EWxc9Gf2eI3+QPL+V/y4nwXrjg9TLrpkHzYdybifP3M6+zNg3Thj/jPPF
OYs/4pxhnLB50zwsNxgH/G7GgznSXIkH5u+/lHe2i37jBweC+8Xr4nlxv3Jl
cbww/vap6DGuJk07jStzs/ka3/t0sDGGk6JTDjC+l/2duWs5ivxc/heOT5z3
lq7N6eZ2+b3mGHMcvhQ3i7OdpWt8Kc4TB7jnsOEFh20cmdONpWdyrfGMb5xk
tPGfU0W/MS+/F/d7Q9d4T1zoTV2zDezFzYUnDNu1XwzvSn6ertkKdeE/cY44
XnnLM+Za4x/XqhyPin/DueFb8Hzsi/dIri9u89au5e7iLW/rGv+JF8Xd4R7x
k0t2Le8Xvr1r74exbpwvnmvxZt5Ltsq7iYOlH6eHZ8Rbyh++NTLjOb24a/FT
ecKT5lngMMnjTuUYa7847C1pv/xhvI1rcUHmWu+Y9wtvrD9xwquGPxRLlWeL
yxJ3kOuLY/x91zhDfCBOBsfGJuLobguWJ8xe4GW8g7g11+Jt2AscDd98+ejH
w8jXxYeKBcv7xdeIjcoTxh+Jn8rjda24J3tH3hwiN1hd4rDylnFY4rNsmWu9
v6/mfvFF+E/3iIPCpXi3vddyocVoxWfNkeZKXJ+xjycy/nE45krzpDkSxh/K
39YnYnC4HdeaY/Eb5kTzIY6HflyKOdXcihs0R5LB6ZkXzZU4urVS71g8um/y
5uG/Zizh7swN2o8/fCjXmmPZbv1gLhXzEosy58hz5nfIezFHmjfxXbgTHApe
i701V5on+e64GP67/GRYrBmHgGvAM/w517KteAN+Ph//T9FvTpbPjFuRVyCH
GZchpiyHGcch7ixH2rXiuTiWsRh913Kb1SWmLJ8Z5yKmifdwLW4ExzLGxXTN
r+X/8m355nx4/vsV4RPkR8lbxjM81TX7MMZddI0rwCngE+Qzw0937bnh9zw7
/INr9+2aL89v57PjMMb4iq7lMPNLn+lazjOZ57rGBfDh+e97p17cFM6BPB/2
vvjv8ojkNmv/s12zUWPXdi1PWNz2ja7xRfoTLyTPmS8vX0huM99b7Fhuszi4
2DffnP9+dNdykvm/cqLYPT4y2/pW/EF5Sj9KOT/6nfh9cpD47PTz6/nH9PCR
+avGGB/2wGFr5xTD5tvReU7X8p/5wvLE2FI+KXvKV1bOXz435fzW1zIm8cN4
CPeIixB7FetlZ/l+/MHxfGM+oJyl9+N7yqfia/H1+HGTxO+T73Rn+uSlrvmF
ruUbivuK2452zfaO6S+88LDlMG40bHlE2sC+yxkmz6bzgfXVuV3LSeavyX2S
57NyZPhpyq/omj+lvP48xg2bR8wh1urmQ+sf+U6r5NqVkx+76LDFsFdPP/xr
tO3nYcflRIlxWxuIC6+ReUDsVQzF+kGu8uqREc8V97Vulxe0WvSINa8ZeT6p
uLW1irizmLH1hpwrOvnsH488nfKH10m5dc6EtGHKXGvtJOd5QrD4oFjzzF2L
/4rRWkvIbRYvtrdIntUGweLZ66dt1jkbpT1ytDaMjPw0sVXrimlSTv/uw5Z/
teSwxXA3yLVyoemxtpkpbYDlRZO3Dpk2feW++NFi3tZXcqHFha0x5HFtnGvF
zjdL34rniZlaM8hJWyv3Lmds81wrj0uM+6au5W5tFSz+u2X6hI8stj1r1/Kr
xYWthcRqd4x+66itIy/uLC5rPTZbdFrzyG3bJtfOP2hrPH0lv1qOmTWP2PCO
weLRYsnWDPLQdkj5vCmnR+x3h9S1QvrfmkR8fov0P59dLNkaTHxXzNeaSs62
+Ky1k5iycusicdhdU68cb/FfayQ55Fukf8S/d8l9if+KK1sXnRmd1oRytHbN
tXLbtMEaadnIw/LDd0p7rBV3S73y38TErcHkh+8WeXH73dNv8gCsgY29qYbt
HVpl2GJZ4q3WTmKxe6VP5JCLAVt3yU9Qbp0m/ivmay0qL26fyIjJfj96xHr3
Sf+IO4vhWn8uFp3GgFjvvrlWXpx4urWKGO0BwWK3dFrvib/vF53yvQ9M+Wop
Jy/mrtw6Vhx4/2Cx5qPSfrkNYofihvL3xNmtIeXjHRIs1nxwnhHORHzdelve
uxi09aS4+aqZ36zJDx2XH2mxSHWtG53Wk/IAD8u1ctG1wdpS3uARwfLnD0ob
xNDFjK1RcShHRmbLlNPzzfAta3Utlnhi5mQxd31oPbl77t36E29yTLBcenHc
B9Jm5dauYq04E+s0OYfHRUZ88uTci7qOi37jB19kTbt6dBob90WPa+UrGmPW
zPennbAcRTqtk8Xoj49Ouf0npfyAlJNfP+XGmHzOPcfH6kjLT1CvWKs4qPW8
PH+xVetzOY2nBG+ScvfCXzgt/YwzOjUy8huPTl+tnnK+g7i9/ImVU9cpudZe
A3qsjddOG+C1Im8N/0D66qGUnx491uFnRUbO5On/c63yDdM2vNaErI1/nHLr
fT6AGCs956R82+BHov/cYPFfMdSNIjMWa+xabPPclMuNFCu0prUHgbx1stjw
+cHkxR+tw+WvXpByucTnpS759j+NHnFIsWZ+yvrByneIzo2D1WuNLdb888iL
F4tTbh49Y/sguhZLFC/mg5wTeWv4DVIOi8mITW/WtZj1JZGXz3lxZI5PO7Vh
w8iP552Kh1rni2FeljaIcV8anXJQfxn5n6X8ibRN+c5pAz38go2ih4w9F+Jl
cjsvyT3yNcTCLw9Wrxgov0Y+6hUp5wf9Js9u72B+hJjjlXkuclOvTLl46Nh+
jK7FIq9LH4oBw3wK+zjEK5/qWhz26jwL+atXp/zK6KFT3uM1KRdfvjby9oZc
G51nRqf2nJ/+11fiy9enDeKGt+UexUBvSL+JN8PPdC1uKh7KD5Lre2PKxZ1v
ivwNwXwTsdGb0+cb960/t+jafpPrc6084VsiL/Z9a+RvCeYfiWHfHBnx6dtS
LuYqfsqPk1t7e8rF/ejkN12W5+u+xETFVfll4jLiZNbhYpTizXw0/trv8ozs
GRGX5B8dmXL+l7jzPZEX2xVD5X/JH74rMvenHBb7JM//Ej8WR+Z/iS/fm/6U
eyDGyn+Uezwx8rennA9yb8r5sGKm9+Ue7Z25NzrlDN+Z8Xxr2k9G/FIck28l
7vxQ+k3MVSyVvyZW/UDuV470g8Hf61tsWr+JT8NylR+JHlh89oHoFL9+OPLi
xY+mzXKYxZj5lfzHPwUfHawPxVsfifw6w6bnk8OW2/znyP8lmE96eca/ZyFm
KibNBxSLfDnPVwxVLBW/IY/38fSDGKVYLL9SHPmJXGsvj1gtP1oO8JO59rlg
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
DM70qa7xpmenHOf949zLPMH4bH2IG8UZXxD9+FL14lVxqtcGa8M8aQ89OGzc
99j3EEZbLgs8b/A4D00/3vXnkVevnBF5J/a24LFwi/vk2p9Gz8XBuFi8+IXR
M1/wOLeN+34iz/1nKVcvfhY3e1PwbpHHreNT8bLybHDaePGLo2f+4HH++5LI
qPeitIEevC3O9tZgOuePfnp+GXn1uhe8M855gdRr/w8+G6+Nf8XX4m3tMyLz
q9R7RbByOTL4dDztb8fxSMu1uTx9eM04Hml88wXpwyuif5fI/Cbj5KrgfaLn
yv8Zt1cE44DxvHjdu4K1+eo8R3q+GPl9Yj/FUdjTe/J87VHC1eHsjs1zvybl
4gByjJ7uWp4RPM67482f6dq9XJdy3Pz1KV84GP/tWeDQceS4cFwwHpgevDPO
+d5gnLRrb4oe8nj8Z7vGu98cvEjwOO9O/3MZVzek3hujh877Uy9eWT61vOoj
0p7bUo7Lvz16Fg0e5+nFZvDYdwQfmnrx13jmh4Jx0vKgJkb/ItGvzfTgo3HR
DwfbV/VG2rNX6v1d2mB/1j0ZV2Tuic5Ho19u8O2RV6932fPdIO/yNRkDcrXw
9XjsicHiAMbMfRk/iwUrh+9P+d3B47w43hzv/Ujw0elb8Qn8Pd5dLheuXg6U
+MGLqfehjLFHM95eS/mDaZsYgpwwsYMlg8djAg9H56ORp0eumZgHrv4rqdee
LHnu8qRPynN5JOX04Mdx408F27fl2kej/8Fg5WILjw1aTGHtYcNzDFufqFcc
5o/RT0a98vLlodnD9UTaZjw8kfL1hk32S8OWz/bk4MO9YGIJePg/B/8oY+nx
PGtcO59X/ERMWcxXPqQ8f/t+Yfw9rv/UvNfPp5/lrIkZ4NifDBaLkAcnrvB6
6n1m8GGu3DN51k9H55u5lrwcOhw8Ll5OnLaJN/DHcfm4+7cj/3LqfS4y4zl0
z6cNL0aGTvlo4iXndi0X7+3U677eCra/wT6Hse+FjrSc+3H8ap67vDyxCny+
/L3XI4PbxpXLs3s85Wenb19M2+w7ey3P4tnoETNZLm0Q63g2bRM3eCn3e2Zk
xDbO6RJbiMwLKXftX1P+tzyXF/OMnkt/imvI+xNXEFMQixCTuCB6/vE/+N3U
RUZMgrw9JfY/yDN07x8EvxGZC/Ls3kldy0cn7F7ez7OTk/jvYPEKMQkxCHvZ
Pkjffj3yP01d/01/iuH8K8/x7VxrD92buS/9L6Yh5iEe8o1g8QW5jbi8i4Ll
SortyG0U1xEreTMyF2fMuBexppczfuBXc61+FusQCxn7hk8d9irokyeC7VnQ
P5Okz8V8+si/lnovSjsnSZv/Hp3vpp196nozY+yi9Nu/cu84UrnsuE3fZvHN
GXy49tibYc+d/TGTBdvvNnnuF1eMC561a/wqPnT+XDtZ2q8/P54+FM/5WPoZ
H+xaXLV4iLiIvR3yOuV9ivn4ba+ceApuXzwDvy1eZM/e5enDKXK/+HsyYgvy
nuwnEdvij/A3+Bp8DliuCv+Sn8mP5A/ywfhf+DxxNfwf/5RPyB/0nh6aPjQX
PZ15j49Ihl+obWJaclT5I/TgRnDD+gevLN5kT4v4EX+QD8b/4mtrD59XjImM
GBafjAw/jI+onXzBmfrWP1U01m9TpR/Ej/TnZGnz2HepuhbrsQdG/EiMxr4X
8Roxo1nSV+qV8ypGI2ZhT8vMXYtNyPUUD5oQGW17oW/7HD/WtT6nR4xmg8iL
ZahX7qw4iDjdHHlGYlLaI/a0fmS0TSxojrSfntlTr9iK9oihnJSxKqfUN218
80ccQbxgwbR5q3zr3jfvyRrfvjskfjRvxp69NfbbiFPYq+leRjLu9K/vVu0Q
GTmZm0e/2IH4i307s3SN24fFYs5Oe+Rh+maObxnJnxSTmTdj2LVyUsUpzogM
fl5saP68g1tHZpasbZ6O7Xs5c6D3d9e8v2IidKjP93nw9vbG4NL3Ccal47rt
e8HDi0EsnXGOB7YnB2eOc7anSIxgkmDfMpo0MuIF9uLYkzN72iDHdPw7P/IR
cYG7pVzb5JAuln44OG3At+8fPUukXF4jLg6Paq8LTvLkYFwlLsheI1wu/ta+
GpwhTsleHRw4Ptl+Ffyt9bk9D/wva2l7MPg1x0UGz+l7ib59hPudInpw5rj/
pTOnHZq2aTNZ3/3B306Z9uC6cYn27eBFcbxk5JSekHbieE+JDP5WnGiJjFvj
BfZdpuXSHtfie1bO/IBzWilzFL5lpcw5+J+VMyfwf+3P2axrPJ49P/g5frf9
MPgQPpS9H3zMsW/X9B9yad/KXIfvWSVzJk5A/h4fbez7xH3j9GaOTmt7XNMq
maNmSRvwLb4pIidQrqPY38KZA/mD9qvgDfjy9mPwPfnavreyRdfOawdfGYyr
dPY3/Ay+2Xgzx86f58u/HuMjM5fOk/vFS7zat/3A9gLjSNeKTvuA7K/GYd6Q
9uAE+Pv2I23eNb/eWOKnv9Y3+S27tg+JDB7pC+P3NdLsnTwG+8flwvjGgXwY
33iAfccA/+PbH3Lk9ImcNlwHn1qe3Nj/FxCMb+GH2vfCf/RtFnt08VGbBtPj
7Dd//77I8219C9E3PeRK+WaF74HIp/KOyEU7OPcuv42vekNk+ErXpm2e102R
0T/0y7XiE9Ht+xS+TeE6dfgmBv/LniI+KV91u7yDi6Scn8uP5FvyX/g49gjx
ScVgjRlrjEVTzq/k42+ZMXxbdPJ/8Q/08E/lhe2Ue+TLaxu//tbcrzmBvym/
bSwHrW/Pht9xT8rxJHul/Oi8O+rFLeyc/qTTuJXDh6vZpuzNdwt/fNj8U34X
n4vft1v6ga/9vdwjX8b63treelvOE5+Ff+ZaPpdvaPjWBz/xgejhPz4TeWt4
fyfnOxt8UrlifFi+pPbwH/mYe0cPX0xOGH/nkciPfYd60NrDv3giMmM5Y6Nt
/WftZw0Ij333YNDW39ai1vxym87p2rpdjpR1OP+CjPX5vbkX+WP3Z/wYn6/m
Wutn+8DtB/eNB76YXDT+2vPB1tLq9s0H61JrWjmL53Yt90q98q/e6ZuMteLf
+6bzkq6tq8mPfVd9tK3rrDk957fzrN/L+2vt+vl8P8R3RNhZNtt3CH2P8PRg
+Qy+O3xj7J29E76b5/t58Dyx0fbB3ta1vbautYZhT5Wz3b7v57t8bKIY+hmR
/1nKrSvoPCv62Y6zg/39J5HRNntXrFt8V88+hyVjay6IjHb+JPX6TuD5kbEH
lwx7dHHK5TOIw9rDMGfq+lmwv5OzriDDpk6Mrfx5ZNjEiyJD/8/SBmuSi6Nf
e85OuXWIfSPWHv5fAN9PFgf/V/CiXfsmzH151r4FK78TJ2Z8GWcnZO69N+PN
t1vvC14xeXHy48wV5kdz46zDxoHtOmzfu/J9JXOy7+j47o85DUehbvXaA+f7
PsaM7wbB5kB8ke/b4o701YV5ptozMW0jPzHjje/wx7xT2vhQ/6F+Y9I3fNz3
OemHsW/f1vH9rrXHPlU2xfh3rfFqH+Efcr9fzt43e+CMc/LmuuWSR7pO+vKB
yC+UveH2iGvn79NmPJ4+2Tfj6qd5dsbqaXkX6PlD2mAM/CLjwTwsH/e43Pvv
0j/u8c6U658Hci++8Wk/jL0wviPru7TW5L4j6/8pkY83Y7596huovgNArv6N
7Tk7Ke/X53ItX9JzlM9qTnNPd6QN5rq70s/Gg9ziY2LL7BFlB/GHt6Wcnrsj
D9+e8WOM3Br9+FVj0ngie2tkPBf7Uc3V7v3ulLMndwYP0+9Hp2335Hm5jxNy
L/IS9YPcRT6O+9UX5pWTc+++4350ZMQGjss74rqjUu7bOL4vf0XenQczBowv
8vYmPxc9o11bHx+bcchnsX+PbyXm63n5u//D49g8u52H7X396LCN4WPy/qrz
iNRrPWwsmXPU+4O0c/u65jd13m3Y5jxz3415vvYW8vHey/1+IfPqKWmPPjkl
/eDvPwx+P3rmyVx6anQemT6pS7sdhu2847Dd95G5912G7Z37xLC13T3wr99K
m7+fcWIcGAOzD5vtXT7vl3nD2JYL4fs49tf45pD/I8daEfYdIvdsve2bNfZP
+bYneb6V/6/Kt/8mZJ35WNrgG4S+RbhW7uv99AO/1jeJ+OnW5PjZ7TLP+/6C
+Vlc1bcGcCPv9q0d2mCfum+j43LZUt97+nX61jdrZopN8T2IsX2RfeMFfD/d
s/BdCXOCfMsXMz7VT6d98NrsHvkp+tJYZIvxTr7d5Nss6nw49T6cNvim02Np
p3vHgTySsWSMsROfSxvez7P2nUO8tD7g+7+XMcNHce/8FOt66/vN4h/wGTbO
PGAfu3lP3M2+/T3yvN7NOBaTsh/ed/OMBWPi8NgCe79PyDqZjHWjPrgmfeu9
I2NtZp1ivXJZ3tfX8w7qq6vSNvOw9uyfd/EfeR+tJawhlsjzZdeXTJ/8I++e
+cO3ufu8F+/lPfLdTR/ilmPjG7C+rb9kbD2ds2U+fyU6jcn/RoYtUJf395cp
l/Njbxk9D2f8vJNnxwaZ08yfcqHt5b466yhjyXrGeL8078jt0Uun8fLbvBfr
pd3a7JsDvkmxTp4dv5F/t2Su9U2q/0YnPfPl/8Xw/2PMM2x57ZsM2/WXRd75
V2n/pMP2ze4ths0P9c3QLbomrw32pm0wbN9u25DssM3x/l8Uf78iMvgNNnHh
jGffKTPOl8p3sFeXSzts4/c7zsPGUS0xbN8NFONZf9hyDOjUB57b5emHBYbt
fdtj2PKmLs+9mDPMHcb/dMO2732lrGlfyjviWV2W+70q/cwvNi/6hruq5GbQ
tV3el6sis2r0T0idXfrS/Ml+vJex7XtP1uG+h8mP5cOy0cYAPlPOPHnzrTni
qf7D/1OPvLK9Uv7t+AHWTtb5a+e5e2cHWcN5Z72b/l+Ep7vmz9oDZl3H1+Pr
su/e8RvyTrnuprzLU+SbDAdF3/XRM+2w+Qm+9/+VPDvfMl8mz2jdyN+YNlhX
3Bidnxq2tdo+w7aXnj3betjmh5sjo/7rUtf/A23tthk=
         "]], 
        PolygonBox[CompressedData["
1:eJwlk8lOlUEQhfsOFQ2KUUFwQPA6oIIMTkTNjUoUIiEgEDQOgIY4B8EBMAoq
bnwAXeMSnsCEtc+gLnRj4k5XKiYQXfCdnMVJvtNdf3d1Vf2F4bG+0WxKqYjy
6GGk9DqT0i/Mc/gy+kTAT/Yuwc/QD/w7YvbBLeg8Po/fAh9Eq/DV+ALcjDL4
cnw1vB614ZdzKV2B16Ei/g37u+AutJB8Zjd8Fr1l7zH53IIfoffsf8FPwbfR
OPyZ+DPwmnCsztTZ7eg3PM8ZpfBxdBFfS8xqeAD9TY4ZhMvRt6zv3A0PobV5
xxyBe9Ad9j8ox3CNVKsZ/AN4Bv3Dt+BHwzkq1wW9Ab6JrvF9Gf4GPI2+s79E
/H34FLrHfg37JfCI6pcco9jhcO4lLB6DX6FW4mfxtXBZuBbq4U74Oqoivpu1
o3CdaoT/gz8Hnwj3pkA/+uCr4d7MsdYWrplqp56pdy/CvdedL+FtOi/jN03A
W8O5/UdN8PbwWzUDT+C94VxV46fwZDhWZ1SFZ0izpB6pVwfCtVvGV8CNaDHj
N+lt+8O5aiY3wZ2qf9YztAE+jT5mPSOalZPoLr6RN9aEJdbMHoJ7w7VQD9SL
Hagp52/07cZw77XWD+9BX3O+Q3cdDv8rWrsAd4RzV81Ve824Zl3/VGu4x+q1
ZqoIV4ZnQW9sCPdIvdIM1od7qF7qjZvhsfC/ppnT7K0At4tiPw==
         
         "]]}]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1:eJztXWdUVde2plnCUGLhWGJBBAGFKIixxbhiC4odVCAJYAMssWCJsWCIEBXF
RPSJxq7Xq3gFKyIgKk0F1GvLQcV6QMUGSrAGMW/vtWbeD8b4dt56g7zw8vBP
Rr4xx1pzzfnNsube+2A9dppHgImRkdF3NYyMTJX/vrQ7dGDH+Hss1HJSYkwP
A2uwf1XNw32vM49+PYbGlqSzFq7urxJb6tnaVze27HUzsCfhhWW7Ffze8sfD
Vbz8/jxLFV/+lcCtvhd4f0PVxIv2hEXXLcxgydFpH+WP1bNfdzpetf7OwL7s
/emAfyny4alBQaq8a0603d/hvJPW2fj/+0U6m+zd5/YtKz07NXei987+BmZu
9LyGet7bVgkjVPkwZ32jv8N5i8m/R8m/ZeTfhSkf5B9V5IPzU92PKfKWbwb2
O6jIP4z5qFxdx8i3v4e6zketsy217LCiip1X1g7/WLYu1fWXdHZh7OnoW4q8
TXP9yH+7Yf67X2vwVl2/2ZpXfH3TOt9r2ucn0seG9BlYRe2D8h7KDyiOEK+Q
PRHfbtQr4np6NCriek5zXaBp5+d0rh50rjGGqslPVEeQfVBeQnZD/ET2dHF4
wHGWJPTsUne+pp0TpgncaLHAa+Zr2x/x/8/2C9K/Gq9cvLL8hfiA+IP4hviJ
9Ef8R/GC4gvFI4pfFO8oP/xV+Qr5Bdkf2RnZE9kN2QfVF1SPXlD9SqH69Zbq
1wx7Ue/2UL0L3SfqXVWry4j/yM6In8ieqP9Bdqtq9kH8RPZBfEO8+r9iB9k6
iPISiqOqdi7Z8yL+/139i+oIynsxBYc32j1PZ3eG9Wo7UfH7lxEnrPsofi9J
7cDzSdTG3/j631xYztcP9Ok+aNyBGyy2+eiLvt/fZIdzTUIunTKwrj87nD2t
yNvuL/8pVZG33RLw/mFF/thCY75OvYxf+Dp3y0KFnu63vDLtMtimsgdLvvlQ
zw7Nup/ffISBzezgOWaPIn+xZafDqvys4LYTVPmel57x8/pbF/N1vrcM4evE
jc7vO35ZJjvS3SWw10o9+8rHJsd/l4HNXv/ZwbeKfNOt+weeV+TnZb0OTlPk
a47bUUflw9rsqFHcbh8ENlHXiT3/iK9fPvsJX39w7HzN8yL90b6Lh6YsUPfd
fCd+Nj/Xuh0d1fV1jfdz+xzpbcPzUtiN3Xzfpv8U/UnJdeHf2e2EPshfyP7I
nsgOSB9k/043BQ8n7RB6xpQJHiL+ID6g9ZFfkH2QPvZrBB60UuA5jwTefr7A
nSMEfviuNo7WQfsiPdG5kB2Q3ZCdkT5ofeR3xBPEK8RDxFtkH6QPiiMUdyMo
TjdXiFPbz0VcF1Nch1BcI78gO6B9EykvJVNemkZ5Cdkf2RPpj/iA7I/Oi/iD
/BV89OCKAI8c1nv3EFc/xyvM9QKzyjcuYGUTQy6p9nF+uXiFus75CYmfafWZ
te/7831d39bh/m3WaC3fdzXVO2uqd+4G7f52Jcm3IvkB/0v1N2JM0p7l9RW/
BETMWm2vZ+PcF5TaDjWwU2MsPpi1/iSb4/XS7Ofrij5GZt0bFBqY79qsxqp9
zOr/y0ddp12+cTN+b3WPnLZfwXPTDzdPVvA1u5zW7lPw7bRvG9p38O99b8NX
HG9/6ynHpy5fqKnntYQfFg7++GfWu+7AL6wi89hnY5xPfNvnLqtN/cBi6gfe
UT+A/IX6w/rxi3/j8dKkiPvRscxTp9V35ZCeLqSnl0H7nojOhfRH5w3evfKq
fXk6e6/Ru9CH1nrWa9PEa37uBoijPgr5C/EZ2af7FHGuYXSuYDpXm9kPOX5U
J/KP4xfzNe2A4hHxEPEW+RfxAdkB2Q3dOxCOeI7ywIypwj47yT7JBu05zw8g
b6DzovyG7IDiHcUF4gnCEd+QfZA9Ed8QfilY2C2a5mzhNGdrv1/gD9cKvGWJ
wFG8j5wt8JVLCC+Yp7k+8hfyO4oXFHdIHumP5FHeRvKy9Q7JIz4gvyM9UR5G
dkA8QXZG8Yj8iHiFeCI7x0Y8rGrzdtTnyM7n/+x+CcUpsjPiFTqXbP5BOOKh
bD5E8YXiSDZOUf5H+QHVHbQvqmvIv/sorqcTHvkH/kJ2Q/ZH50I4sk9lPX9B
9R31CQhfRn3Xlgp9Vyz1b57Uv31K/ZtsvYPvaUjWfWQ3ZGdkH4SjPvP3Pty8
Qh9+g/rYBdTHDqE+lh0RfX4g9fkO1OfL1n1kNxQvKK5ln++j8yL7rKH7zhG6
73jTfQfhsv0MsgPyO+KV7H0B+RH5XbbvQudCeRLlGRS/6LyVVU9Rvyf7XADV
fZT/Ef9Rvqqs9wRk10HykZVkHyR/gOTbkfzwP5BHdRPhaH2kJzrv3/W9Gln9
kX2QPZH9kb9Qf1vV/IjeK0B6ovc9kB3QezgIR+ugfZGe6Fz/387baGqDsNSc
QlYY56Yg+aznxsxW+2dcZVtMXVwSFPlGHSwSjiryfgddnu1X5F8fFX3ghLai
D0ydrD1vLO1ep17tnzKY6fb2Jp0H61mb+AuhN6caWMOcvU/VOtLl/vY1qry+
1Q+DVfnN50Wfn1Yo1pnUie5NFfj/X++lp8WePLXqNpuVXPvjsKW3WJ5DcIll
8R22JdWu45el6ay2Ueenzkpf5Gux9VhDpS/q5/nYQt23PMHVi8dRdDF/LpPY
S+w7KlWs79JQ7PsftG/rCvUU7Rv73b56ie/S2bRdNeO8W+tZ0AH7FSlKn2bf
fsLYvco6UQG5y5KUdcKXdmuu9jMjrMfx90xmvhvB6+by05f5+kueiH1jY8S+
7DfiCenjSPp4/IEfkf2RfZCeFmXDa6l2G+3VeKS6bytr+8bqvkfMa/C63/9E
Kddn7oXvuD5jk4Sec9YLPfuVCj09iM+jSP85pD/iG+IJ8iOyJ9IT8TluvdDz
WZTQU/dknqY84i3iFfIvshvS55OlAr8YKfDMQoE7hQj8GD2P/vCewJd8TfWR
6s5mqjsRMwSeTflnH+Uf2+kU14S3Ijye7pVJ5Mds8uMV8u98wqP/m+9lVYxr
FHeI/4hXyA7IzsiPPnpxjyscJO5x08cs0OTVmQHTOX4goj7n4Ywn6zmed9v/
nYqPdt3AcfvnFvx+hOIL+QvpuSOtCd+3U7c3HG8ydTHHP6+TbqKuH/TokqeK
j9yn4/d0FF/JLebmnVH54DExOU3Bd4UtNElQcIf1Xbf5vUxnq8I2l9RspWfn
th1rmdUf8wfZDelz/b2eww4ouH3NVl+o976P6mSdUfPPwm0p80LfpLPEQeZ7
7yn7Dht1Pi9sgIG9alZ7jLfnGfZyQVyT4zOusESDd6J5zwLIW+QvZAe0b+1p
It/22Cvyrc0GkW9RXCA+IDujc6H4QrxC/kJ8c15TNDC5bgZzNvF/GWanZ/VT
Gll9OgTL64PE+w9tfEQ+LF8tePj6dWdjVd7aKYD7906HJK7PvHofX+kyPZtF
Tv5w/LInuczULyuz6Gw+s85fEnUm7ilr59O37ZL3HjPX6d5f+3bKh/q3Tk4f
H6f2z55j+qp1Sncj9466/sQjp97MVO7Xc8tPTnnG+ePgf1PDPuc6i3w+yUzo
v2qQ0H/m9rq8jmT0/ITL98g4Ie6z5BcD+WUn+SXl8YRPw0wy2MqnjjMDbfTM
NjyueMtAAwu0OJbsPTOD3fjHOpfjvRW/r/M5Zx6I/e5vWc5Uuw1qrB+v7vtm
22Rbdd8+N9J371Pwvo8z7/G6bHRrwj4NXu35VuSH5RcFTw5ai3OtbmzP5bd1
Kue4Z3YEx9tR/1BM/YMd9Q+I/37NdQf1yjoDlw/+OlON96ZBwxI14gjxoU3i
aVsVz+n7ma+Kr8+r01IrTpPqi3MZHxLnel5LnCve9QXHC7zFfKlRMzFfQrxC
PET+RX5Efpe1G8p7KE8e+Wa4sM+vtbnfgw6v1sy3CedF3tizVdgt9LXIGyh+
UR5A8YjiDsUp4j/iOYoLxDfEK8RDWTujOutw8Cm3p89FYf8GFxdo4qiO62KE
v3avEXi3p/M0+Y/yMzov8jvKkygfovyJ8hLKPyhfoTyA4h3ZB8UFsgOKF+Qv
tC/yI+o/3VcKvO6PAt/5UBtH/a3xIoHraA425P7/TB7dL2T1RPcXWZ4ju8nm
N3T/kq0v6H4nW38Rr2T7E3Q/le3TkL9keY70kc2TKA+g/IzmALJ9CJozyPZp
qE7J9rFoTuJC9dqlQr1G8SKb92Ttj+oRmi+hvgjNqVDfNZH6tJvUp82kPu01
zcHMaA5mT3OwvdQHrqc+8H3qA72pbzxEfeMt6hvvUJ/cnu59w+neh/KJbJ1C
vJXtZ2TtjOaWAelizrmZ5pxHaM6J8p5sfUfxJdsHIp4gPiD+oPOi/CzbF6E8
INs/Iz4j3iKeo/ws2zfK5iUUR2n0HH82Pcd3o+f4L055XX6YV8x66M6e8/j1
ARu1efHwPoNvw+87olP3m6r4w646/l7K5FWDeT8/PmCEzSXFzufi0teYKzzR
HX80qVT1Y+RPDR4p8sMLRlrlKPLXipN1x9zw9x17T/blPO8yswb3O0tZyfFI
ms8E0nwmnOYzx+dYcflZjco47mO0lONdGrzH8fM3n3P8TdoijqP3zPvVntZ3
rcLzy4OuevVS9H8/z2GVtcLz6V72JWzOWVbUNiH1csYV9jIjfPbYRQWsjVvB
y7P7MlhgmxttIjz1bKrHz506zsLfp3hlR3M+53iN4+f65+3bXJ8TA3zzjii4
d7yDU4qCW1ge8zyg4JOa9nirvsdy3t/bXuXn6BLfLFUezanQ88quNDeLJjyW
8Bdbyji+1bqE43U3fivmvStKOf5jgfgupmOi+C5mo9Okgxv8TzPbgFKfeB/l
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
NV6NV+PVeDVejVfj1Xg1Xo1XAv6ffKpO9A==
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9690236959212227`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"9d56a96c-3de9-4547-934c-d82a0ca283bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Plots ", "Subsection",
 CellChangeTimes->{{3.9690244470973063`*^9, 
  3.969024452495977*^9}},ExpressionUUID->"f6d4f956-764c-46a6-b677-\
ce6266283efa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Plot3D"}]], "Input",
 CellChangeTimes->{{3.9690244635382338`*^9, 3.969024467144566*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"14afeb03-2a7f-4686-ac3e-710ae166c52e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Plot3D",
              ButtonNote->"paclet:ref/Plot3D"],
             "\"paclet:ref/Plot3D\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot3D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a three-dimensional plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a \
function of \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Plot3D\\\
\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions. \\n\\!\\(\\*RowBox[{\\\"Plot3D\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the \
symbolic wrapper \\!\\(\\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Plot3D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes variables \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Plot3D", 
                    "paclet:ref/Plot3D", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Plot3D.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Plot3D.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AutomaticImageSize", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AxesEdge", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"BoundaryStyle", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[0]|>,
                    "GrayLevelColorSwatchTemplate"]}]},
                    {
                    RowBox[{"Boxed", "\[Rule]", "True"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "0.4`"}], "}"}]}]},
                    {
                    RowBox[{"BoxStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ClipPlanes", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerLinking", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerPath", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExclusionsStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FaceGrids", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FaceGridsStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#1", "&"}], ",", 
                    RowBox[{"#2", "&"}]}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NormalsFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Full", ",", "Full", ",", "Automatic"}], 
                    "}"}]}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotationAction", "\[Rule]", "\<\"Fit\"\>"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"SphericalRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TextureCoordinateFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TextureCoordinateScaling", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ViewAngle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewCenter", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1.3`", ",", 
                    RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}]},
                    {
                    RowBox[{"ViewProjection", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ViewVector", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewVertical", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "82", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "82", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Plot3D\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Plot3D",
              ButtonNote->"paclet:ref/Plot3D"],
             "\"paclet:ref/Plot3D\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot3D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a three-dimensional plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a \
function of \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Plot3D\\\
\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions. \\n\\!\\(\\*RowBox[{\\\"Plot3D\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the \
symbolic wrapper \\!\\(\\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Plot3D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes variables \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Plot3D\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) generates a three-dimensional plot of \!\(\*StyleBox[\"f\
\", \"TI\"]\) as a function of \!\(\*StyleBox[\"x\", \"TI\"]\) and \
\!\(\*StyleBox[\"y\", \"TI\"]\). \n\!\(\*RowBox[{\"Plot3D\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"y\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) plots several functions. \n\!\(\*RowBox[{\"Plot3D\", \"[\
\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{StyleBox[\"w\", \"TI\"], \"[\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) \
plots \!\(\*SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) \
with features defined by the symbolic wrapper \!\(\*StyleBox[\"w\", \
\"TI\"]\).\n\!\(\*RowBox[{\"Plot3D\", \"[\", \
RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"]}], \"}\"}], \
\"\[Element]\", StyleBox[\"reg\", \"TI\"]}]}], \"]\"}]\) takes variables \!\(\
\*RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\
\"]}], \"}\"}]\) to be in the geometric region \!\(\*StyleBox[\"reg\", \
\"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Plot3D", "Web" -> 
      "http://reference.wolfram.com/language/ref/Plot3D.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> 
      False, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, 
      AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
      BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> 
      GrayLevel[0], Boxed -> True, BoxRatios -> {1, 1, 0.4}, BoxStyle -> {}, 
      ClippingStyle -> Automatic, ClipPlanes -> None, ClipPlanesStyle -> 
      Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, 
      ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      ControllerLinking -> False, ControllerMethod -> Automatic, 
      ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> 
      Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, 
      ExclusionsStyle -> None, FaceGrids -> None, FaceGridsStyle -> {}, 
      Filling -> None, FillingStyle -> Opacity[0.5], FormatType :> 
      TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> 
      Automatic, ImageSizeRaw -> Automatic, LabelingSize -> Automatic, 
      LabelStyle -> {}, Lighting -> Automatic, MaxRecursion -> Automatic, 
      Mesh -> Automatic, MeshFunctions -> {#& , #2& }, MeshShading -> None, 
      MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> 
      Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, 
      PlotLabels -> None, PlotLegends -> None, PlotPoints -> Automatic, 
      PlotRange -> {Full, Full, Automatic}, PlotRangePadding -> Automatic, 
      PlotRegion -> Automatic, PlotStyle -> Automatic, 
      PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RegionFunction -> (True& ), RotationAction -> "Fit", 
      ScalingFunctions -> None, SphericalRegion -> Automatic, TargetUnits -> 
      Automatic, TextureCoordinateFunction -> Automatic, 
      TextureCoordinateScaling -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, 
      ViewCenter -> Automatic, ViewMatrix -> Automatic, 
      ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> 
      All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, 
      WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`Plot3D"|>, False]]], "Output",
 CellChangeTimes->{3.969024467472192*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"2afb9474-0bfa-426f-97e3-57725ea11bb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], 
    RowBox[{"Cos", "[", "u", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969024478492167*^9, 3.9690245581157217`*^9}, {
  3.969024598855548*^9, 3.969024613260118*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"55510d4f-afe2-4027-b41c-9c43b29cfffc"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXd8T+cb94OgtdXeu1GrRo2SOl9baSnSFjViF8XP3qVmjBoRm9orUjNi
Rc4XsTcRkUSGTGKvhmg9v+d7XZ/PeXKe/vrP95W3q/e57s+5z33f1z0r9B3R
eUBWNze3Oh+5uWX77+/dAZPOfviQ04lfr3d9/nkVf9L45seWL9v6upMH3+vp
NXFwiGG2zVfet3IW8lX7zmy4suig0X/MvtVBwzJM8IqTJt3J7u9ntHOl84r8
YmxoQtbOW80+Lvs08tX3zi3Ks/2w2cPFo8jf11heL/twp+nm+i/UE/z4qsj3
TQqcMv8j9gb4O7UfKumTL9H0O4o/5IHqz8/iP3kr9f+k5NcBvlHz20H0IT+l
+ujfDrue+Bu6tj3/nwELS8RTZ/xm6bVtyvbC96gzeNFBBd02HLxJncF3mhn1
R546SJ3BvUrcW9l2+GnqDP5dx65+2deHU2fwN9ETAi8MjaXO4C9Dy4RebhVP
ncFfqD10Bm+j6UNn8KbqD3QGv6D+Q2fwMppf6AyeQ/WBznY9oTP0e7Ij4Pzl
zQ/5PPBSzsfHamxPps74DY2v23dxhXvUGfyzSwHdB58Loc7g0XNOhnVqeZU6
g5c52n34oXXx1Bn8p039m12dkEqdwc80aH7oWMpD6gz+o9pDZ/Cimj50Bj+m
/kBn8F7qP3QGv675hc7g5VQf6GzXEzpDp9sbGucJ6P6UOoNfGzy6SbNdD+kH
+OttjQe2qxJPnfEb1WO7l1+ZU9QZ/NyBUo1/uX6DOoMPifr5Ue/jidQZfMBv
3l8vuPqIOvN9Tt0dcm33U+oM3kftoTN4X00fOoMfVH+gM/g79R86g7/X/EJn
8DDVBzrb9YTO0MP5+Yglewc+oc7ge2bPPXzh7gPqDF5pycwNMRvi6B/4wcs9
xq9bcpI64/ed63u3dAYP2FQoPXdJS2fwy4f3Du7zJI06g2e5/Ou9nw49oc7g
59UeOoNv1fShM3iy+gOdwa+r/9AZvJrmFzozv6oPdLbrCZ2R77xNBld6+yKF
OoMX/WHaq296JlJn8CtV2sZ8UyfSKk/K5xzs2nx1wHH6DT7a69irYw0u8W/8
Ol3lM5Y6g7d5VGdhtFsydQYPf36w8MvaqdQZvKXaQ2fwQE0fOoN/r/5AZ/BD
6j90Bo/Q/EJn8BKqD3S26wmdkb+eL//zZIVXJHUGX7gkd9DufuHUmXxkqdfZ
L1+mzuCRuxKbfTxsD3UGX/N5zI5RaSeoI/hIc/Xmf36+wb/xe8ulZwR1Bi9S
4uLYY6siqTP4NbWHzuBDNX3oDD5R/YHO4Pn8xX/oDL5S8wudwZeqPtDZrid0
Zns+5fz9U5dPB0Nn8O/SRpUpHO4Mhs7gXWu+Xbx8x6Fg6Ax+rnuJjGrxK4Kh
M/gP0wdNOjJtO8sl+J5O63KV+vwYdWQ65b9696L2KU/8bf+Fzvg7VO2hM/hW
TR86gzdVf6Az+BP1Hzrze9L8QmfwLqoPdLbrCZ3h7wjRn/0q8HXyvtgPAN8g
75ftFvhTKc+sZ8H3SPnh9wk+VcobyxN4gpRP5h/cQ8qzgb/xG6f20Bl8nKYP
ncF/V3+gM3hFKc8mdAbfrfmFzuAbVR/obNcTOsOvwlKfUGfw0lL/UGfw21Jf
UWfwRVK/UWfwyVIfUmfwC1J/Wt+58g5S31Jn8HtSP1MXtntqj7/xe0LTh87g
PdUf6Ex79R86g8dqfqEzeDnVBzrb9YTOeP5paR+pM/h+aU+pM3gVaX+pM3ig
tNfUGTxD2nfqDL5H+gPUGfyq9B+oM7i79DeoM/gltUc+wbdr+vgbv6nqD3QG
v6n+Q2fwGppf6Ax+SPWBznY9oTOeEyb9PeoMflX6h9QZ/JX0J6kzuPafqTO4
9p+pM/hg6d9SZ/ZnpT9MncFDpP9MncG91R46sx+h6SP/4Np/5t/41f4zdQbP
0PxCZ/Bbqg90tusJnZHeA4lfqDN4MYl3qDPjJImPqDN4ZYmnqDN4uMRf1Bm8
pMRr1Bn8B4nvqDO4U+JB6gzeRe2hM3ghTR86gweqP9AFvKv6j7/xe1HzC53B
NV6mznY9oTP+v2YSj1Nn8Nc9XfE7dQbPJ/E+dQbfKOMD1JnjATKeQJ3BdfyB
OoM/lPEK6gz+SMY3qDN4ktqzflfeVNOHzuAN1R/oTP3Uf+gFruM59A+/71Qf
6GzX0zZe59DxJdM2XufQ8TrTNl7n0PE60zZe59DxOtM2XufQ8TrDNl7n0PE6
wzZe59DxOuoMruN1hm28zqHjdYZtvM6h43WGbbzOoeN1hm28zqHjdaZtvM6h
43WmbbzOoeN19NuuZ47vds0bFpXV6dsrtkflr3M4H26ePtN3yTXj+YzkX4ZF
/WOC182Za3VlT9O44/r//yJ/uyUk8JznavOEy5/n5JemNOhe+6cz5inhBrip
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
YuD8es8TqRv4oYhRXeIaxlA38DuX2qw/HHvZRP0AXl6+RwN6gs+T75d6gjeR
75160h+pH6gneLTuQ4Ge4P+oPfQE333+z8+8VsdTT/DvSsZ3an0uDPGXtd5f
/YfO4BOkPqTO4MOk/qTO4MelvqXOGOcJlvaIOoNPTdo8+13NBOoMXlrqc+oM
ru0RdQb3kvaCOoNr+0I9wbPpfhPoCR4k7RT1BC/Yadv1Ij8mU0/uC9TnQk/w
5uon9AT/RPMFPcG1XaZuGI/KIv0f6gau7T51A58l/QTqBq79H+rG8THph1Af
8BO6TwT6gK+Rfg71AU+W/hL14ToLTR/6gGs/h/qAT1T/oQPGxz6R/iF1AN8r
/UnqwPXj0v+kDuCNpL/K/HKfiO7XQH7Bs0q/mvkF95B+OPML/kr67cwvuI8+
F/kFP6t+Ir/cByFxB/MLflHiF+aX81wSB7G9Bp8jcRzzC56m+yaQX/DZao/8
gv8p8SnzC95c4lz25+3+I18YN9gvcZZpi9MdGqczX+A5drniPnvc7dC427DF
1w6Nrw1bHO3QOJc6gGscbdjiYtrb4l+Hxr+GLc51aJxrj0MdGodSB/xO85h8
svrHUeynPYssuDNoWHZnq+jU8q++usF+2ql1E2YMi8ru/HFsa+fhnsHMbyMd
J5nQ59ziz/zO871/vLXQo7a+OZ1HBtd5Wi3bOdP23p2PbOMA5dWfm0MOf+W1
IZr9tOfqz9ndW/JnNA5jP+20+hNfaePgN7GhzNfSXGPftfXN4hywvlK2U22T
mS/8Bvn7XT2zJIb5qr+o+d6gYVmdnt3aDTyy6hLztfvWuKZRQdmcpRa+6li9
7j3ma8rye8V9K7s7f/VYv7xc6XjT9v06Q2xx7jL1Z+yEhhvbx6UwXwPUnzlJ
2wZ2jrT62w3Un+wp6dPHZw9j/Qx/vB7PXH+l212W86nqT/En60f0zRvHfulH
6VM7VP76vZk7ekF4vuxW3Bqg41u+Hfp1L1/Lilvxe6hgm3Jhy68z7nil46ZX
PsSdrfRVIMv/qhyBFaKCPpjby16aGZ/lLuPWsmccQyt/7eb8rHrppGqDE01b
fW4G2+LW3OrnmmJzznR7bMVle9XP50vXlp3Uw4rLOqufx2PGrY/OsOKyN1in
5tXAbfK3OxmXrVY/67wPb15+9w1+F/Cz1NO9hZJXxFO3J67y9tp8f3ft/i9i
rLjVV8cR+4R1fnt0raWbjAf+ZU58n76/ajcr3sfvI9e+JCtu/fVBm8nDotLN
Fx95/3G5fqTtu3hlZrXFrc/Vn08KXZjxJMTSZ7n680/3ucPr3LL0aaT+7DLi
0zy6WnG9jk+b0a565gD1mab+lNlVtHOVCjepwy6X/o/N+ukDNzWOSrLqB5fO
T8y1Tz2bPW1rjS+Vdun5zKzj4/Yw5qJVfpw6f1U7//F3nt9sYX4Ha/wYaYtP
9+lzX50f2mZET+t7eaPPLf3Vo2Y5ou8zv2X1uTte+gzc4meNC+l8n1m3dv6U
bw4Fsn545Eonxmw2rLLPq2V3mS+ZZ4s3a7bNci/+bBjzJfOW903P25839sh3
lvX2LxoPVrTFm281/RL/aTe+YMMo+n9a0z/VKo+jZv4I+p9L0w8dsa3kmm+s
9re2K/3dpsO1b92ffnbQ+SPZZ3SQ7Qt+t40ucyCs2m3qnPl3XzD8XKXpd3X5
708/p2v6r1zv5Qj97O4qn6GmzyLv7o1/P8j+9n197u9l2xkNVt5i+YnT58wV
zna2s84rba92IO1ZzvO2/tINo9GQCS3jShxgffKdzjc5xR/mt5H4bzwu7vKf
78Vb46zitrgPvytFH7anrdWfw1t/nuL37WW2p0fVn/4lu7oX++g469uy+tzi
8l74viq55hMeGJ41O3e5GJrA/Go+jKBfY67OCYhkfmWeNNkovKnH1QfrzjG/
Wg6NICknzO9jKVdGASlXzG8/jXfCbXFZafUn69LiozvWTmJ+8Svr9GKZ3yXq
z9hyvzQbVusG8/tQn2vI98L8Snv00nhQ6s96q9IfML8yz/zCONA66Ea64z7z
20+f85PvxxtCXl43M48/Pzfc5TtlXKD1ibFWvmu2y1r/GMWlHqAO7TV+cbPF
UzvVz2UV5j/2vZbG/Lurn4NfDmtcsH0SdcCvV8m3jYxpEew/h6ifPlKPsf9c
Uv2sIvUe2+un6ucqqSepW+iz+4ltfd8Zhc8s9Lo60YqnKuh8VLvee6JHxFjx
1BSpn43PpH6mbhHqV4DU59StvtT/xgap/6lP//8RT51Uf1r4//4w7yArntJ5
RSP6r/0/R1VKoS6T1J8Mab+oD35L13S1d9TnC/XnF2kfqcPTOTtaRQW5OU6t
8xhnZk2lDmWkXXaUlXaZOqyQdtxoKu04dXih85kbu7jafeZXx/Mdp23x1GN9
rt/n8z7k/vMB81tan1tT+i3Mr58+94D0c5jPZ/rc99IvYn7xGyD9KOZX+42O
ktJPY379pV/n6CH9OuY3omCB/pW/zua42DCwT4lGF+3zaI4XtrhpkqY/U/ql
zNcuTb+q9GOZrzuaftduPboF+Vvtfk7ptzuqjt3UJi3yDP3EvOfKE/t3vd9t
xXeoJ5Kk307972jcEWaLa3Jo+s8kLqCfX2j62yWOoJ/9yrduGBWUw+FXPWnk
rK9Psh2sr3HHZvGH7bXaOzvl7zUwdPhh9kN0XYozRPdBgy9Rvk45vqOBms4M
ea41L6ZxR5rGHfCzr9pvUHuUEzz3pKYPjue23Soc5QbPraT+g4foc7tq/IV6
BvHXb6oD+CONmzra4rhwee/O61KuqI+uD3Je1n3Z4O7Kg5Qz/tV0vpXyQ15X
4xd3jV+QX6Qfo+mAI/3Sun8c+Y3U9I+on+BIv67GaygPN7V9+FPaWeZ3vrRr
Zi5pZ5nfDrq+qbbu7wZvrry1cuRrhaYzQtpH8ncdpf+2XftvKA9z1H642iO/
nbHOV9MHb4r1VsqR31Wajrv6D56uz/1U+6XQoamuR1os/Svq8Kf0Z8wK0r+i
DkN0vVg93T8O3lh5B+XIb6im4y39IvJS2j/8QfuH0GGb2rdQe+RX18eZbo0k
ffBqyivqc5Hf85rOZ+o/eGF97m73IQOmRe5i+df1S+YO1QH8yWjp33bV/jN0
+0P7meeFsx4eI+kb1bO70qc+fXV932Tdtw7uq7y3cujTQtMZL/qQR2g/c7r2
M6HbDLXfpfYsP5q+vhfyzcpriJ7Ux1PTiRR9qGe0Pteh/W3oo+vTjHmqA/gQ
7SeH2PrtBSR+MVpJOaQ+32A9pu6XB++KfTfKoYO7pnNIviPyjdovHaf9UuhT
WO1vqT100HWLxg+aPngP5euUQ4esms7n6j/4Zn1uHu2fQ4fj2j/3kDiRPFXb
sRO2fn5Dqa8cDaS+oj66HtaxT/fvg+dSHqqccb2mk0XqVeYL6RSX+pMc6URo
OuyPaTo11B+WB+0PHND+Br6LF9KOOJpIO8J8hUp75Ggl7RHzpetDHQt1vz/4
CuUByvF+T2o6sdKekg/Sdn+CtvvQ4Yzah6k98ovnNpL2lBzP3afPRX6dmk5r
9R8czy0h7S/f7xPVobXqAP6l9lvGab/I1o9yfi79KNs4Ug5n9eSVBzZGWu3X
Th3f66vje9AZ9ulNQ78csP6YYdPZGWTrt4AH+z3vXsLjtO17dHcW0HMJ0O+q
p/2Hmx827hl96hw50nHvWyz1dqPr5DvUz51flvls1MB7rOdhH6rPtb0XZ7r6
Cfvb2r731P4D9Id9iuYX6cD/5uo/+p25VGd31Rm8lL4HXx3fxnvRfrLT77u9
STH1rPFSrE//feqcOfFLrXUsGi84z0qcwvfF823aTx323DOavJSOK34cePND
TILVP5+gz+3a+a5v6Q7WuDfSWd8/KPrX54nkafrclRKnUH/Yrwu6naP4qDjy
kvrca9P9YitfSaTOS3T880FFnwvtv7Pid57vUrfJ7sAXD5hfp8SDZhGJT5mv
0rrOVONTjktoHOdcon6i/39Cx8PP63g47LPpeO86He+FPfyZrOcYwP6M+tNM
4lPae9vWQcH+gY6X5tPxUo6javpP0ko0SQtNIz+h6Wv8Sz1LaH41/mV5e6b5
dWp5AM+q+cqr4+3gZzV9jffJU9XPdzrODP2xHvnBjeQQt81p5NtlHMNMkvEW
jofouIEZoX6C/67jw+k6Pgx9kH5gVIdfp/g+pn1OGQ8xB8l4CHmyjru+z5K/
1oeqCWbm+O4vM5uen4D0dVzIXC7jLbRvrePbf1+S8W3Yb9Dx3oc63ov3gvQP
qZ/gWzT9JZo+6mFdz2u20fIJvlB16Knj9tAf6aeqzrDX8Stzr4xfkSeqDrl9
5hztMdVaNxig/ug4GPl6zVctHT/nej/9bS/jS/y7qI5jr9Bx7Mzjgf/9/7y6
5I8ZkUh7rL9qLusoqCfsK1S/cuxQjodMB7+ynzeWfwfquLS/jktn/n6fm9f0
3AbUzwP0+d/JOB7b0yLq/9OZLbaOmWJx+Bki61WoD9J/Gn5k+qlOqdQ5Bn5p
HAe+X/0srePzSKeKjHOaX8m4K/ltHYffnn24W9/zd6k/9rX0HbdidtVJ1jgk
1nd563kL0Af2SwNP5f35QRT153misi6I+us4sJlDxl2pZzfV4brOd3BeWP1M
/WJYv1yzoqgznvtp+fLtVyWdtfqx+tx96if0gX3FlQkJM97cof6w7yXrrKgP
7BNrLnkwaG0cdYZ9xirXei32Q7CvaOSB+c4xTfexHwLe3BYngq852dss2Ocw
dcb6sbN6DgN01nkB87SMw1P/rDof0d51vsEhpo90aum6Nc4P6nO36nNtcZPp
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
65G263vH95KQ01VOcH83+Soph2Zefb/gA6Uc4t5w8hdSDo1d+lzwdE1/kb5f
fHf+Uv5NnDMIPly+FxPnDII30fUDOJ+O56XJ92jgnBrwT5TjnBpwT13PgPNN
wHUdrIlzN8D3qZ8V9Rw0lIdIWW9mdvvXuO9oMM6VQ723R89FwXl80EfXfxpx
+K6U4zyTyvpc+LNY1s0aOA8UfLqeC/H4X+drpnjifgVw3webRzaP2YhzKg27
PfoxqK88df0A+hPgY7rsrDG6x0XrviTlQTvad2h9LJx68TzOwWsvVXsQze8E
PF7XCXOdlvJx+lzoCO6VuNP7WZ1T1v1HyudszD/9Yctb1vn5Wv+dexnpfHvf
un8W/M3Dt/UW7N7NfPEexbMFfm+VYs3DcVxoUcF3tZzxzBf4t22Kjnu+PJn+
8xyvNEkf/oMfUn/gP9fr6n1eeK/gVyN+7XmxbJJ1ToLm712WvPd2LzpI/8Gn
Rh79cdSf1j1WvP9nQp8wf78k9kvAg233T4H3avG8Y0iGP/0HL5XhbNgjq3Vv
Mrh7v3XFVi6y+qnwt1H7jXsnVLbubwKPst3fBF6yQPOw74tb9zhkLp/HuV/d
Vs+z3GbmC7nPNjMPsN1XCx4UnPm+WqsdyXwvrfW9Z76XluuKgzPfP2v5+b/W
2Wa+l5bjSMwXnh+i827IF9evRuzqvWSkdV4NeMnCVx5GPb7Odg78N9f8l3V/
EHjdjv7/3N9onc8G/lCfi/fF9XLV/uPV/Yx1jg14lpatNwwYfJn1F+PNiz9s
71IkjOUDz6+c79zthU12Ml8cH1u1ts044ybzBR6l9/4gX1w3W/vyurOXE2zn
VKQYEzR9+E/7A/3yGjUuWOPmypt//s/ByrPv00/ep11o5vMjZ61z78n1nh2e
Y6O80qh6l5aNtcabwJv7T24Z8Ga7db6o8pkrziZWbW6dyw2+OMS7y9a18fze
kV7XvzdGTh4cyXTARyy/8nl6n5ssx/ie6un5FeCsx3SdFb5n5HuypEP/WI/K
c1kPwq9l4qd1j7zyxZIv6x555a92uXSw7nlXXlV0s+55V/6DnjfLe96Vj5P3
Yjt3LsVsLe+R9S94kO1+DY4DS3mgn+AeUn74/fBcOilv9J/nDev5tPCf+8ql
PNvus0sxp2j63Mei5Tpevhf6D15cvi/6D/69fI9MF7yxfNd879xHLPE18wW+
UOoH5gu8stQnzBe4U+of+m+P6/Fce1wPbp+XR76g06fSLrBcguPeKN4HpLy5
tDvUjfOY0k6xnIN7SLtmrQND/CvtIMsZOM67g9/guaWdpT/gPtIu0z/wz7K6
2nG2dxyPlXaf3xf4UT1HDv6DX5J+hXWvB/rh0s9hfc17kqXfYs0HKL8q/Rz6
D95d+kX0H9xL+jnMD/gR9aesrb+Kc8x4T5bypdJ/Y7543pX091h+uA9O9+Uh
X+DnpZ/JfPGcZumXMl/gPtKPpd/4//bY7r9APm5srtf+zIRT1j16yqfZzufn
efOpq+9W6JNEjvS8nG75q3aw7uUEf+phZlvyf+8D0Xzh3yNH5umdMzmZ3yns
b3ZcFnLMw7pPk+tXr9y9ujXdKj9sb1e7pRU+kcDvDva5dR0pvmfw5eXmznx4
xzrHAeng3HU8F3zYrnVD52RY5xYinXUjhwR97f6QusE+1XY+PLj93Hh8f9kK
pGWduDqV9Rvv5dbngsM+eUvc1vH3rPtbYW8/7x32X0/tM+7DH9a9t7C3n98O
+0N7qgXV8XrI7w32N1VncNjn/NH/UsHr1rmR4C1b5BoUGJPKdJGPPKNTW3v/
P+04z5PRc2Pw3TEOsJ1njnRa7P2+0N2eF+gP+AFtBzOfI5pijq0ZHPlPkNWf
5zjMiqDUisGn6Y99XWLmc1lTzKpbh02/ksea98K/u6+OWTy0rjWux30ieyps
+22j1a5l7g8v5jyivT/P9fFaHvfbvl/eUyHPZfvF+Q7JF8sbx2FEB37/+P9a
yPvi9wX+sbxfPpfnNuj4MJ6H9D8Vffg37B9KueX3z/6slCvqAvueOq8KHcH3
SflkPjnOLOWc9kj/oJ5PC3/Ah8v3ZZ27qOl8yO/6Hvm9c92U7bxf8Ac2jnKx
UeoHlhvYD9bngsN+m9Rvtnv6/jKy2s7vhf0NqSepA+wDbefxwn6N1Hssn7DX
75rfO+wfSb1NHcC/l3qe7wtc1+3Tf/v+ffgPHiX1P/Xn+Ie0L6wH8e8OXeeD
75f76H8t9GnHExeZf/DJag//2J5Ke0c/aJ/RfV/gz9Z9uHifyq31lMrTe9eJ
6rQn3LrvWPlJ8YftCNKbb7tPnPvsvNv7/p3nNp+L99ZO6g1+d0ivo9R7TAe8
oNSr1Af5GyXps7yB+9jOGYYOGZIva52NvreLuh6b6x2Vp9s43v/vOi6X+Rx+
q977P0/SLjM=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFm3f8V+P/xt9n3h8pKqGMNDSlYRQqmzLSkJEZykhKiQZllK2yM0JFKtEk
tKOhUkRIWQllr8iK3/XsOt/H74/zeF3n9b7Pvu/XvN41L+7dqVdcKpWSTJvk
u2mpVElyi5TX56XS+drfvaxUuk34CenP0LgBwudIv5v0HXXQ49LP0vh20t0Z
lUqnSvbVmNMld9WYEcLPaMx5OnaydHdozCmSN0s/XvrzpT9L5xknPE/nOVN4
rPBc4V809lFtD2v/COlvlHxc+mY6/i/hUdJ9quPPFq4meYzO2UV4L+EyjbtS
x/6h/eO4Z8m9pf+E6wlXlfxCW1fh/SW3aLtcuKnkzjq2j479W/vtdexFknWk
36ztMuEmknUT62/V2FOEHxCeKtxJ9zZUx54geZT0t0k/TvrPtd+Q+9exf2t/
X84tuUn6A4RHS/+lxu+vY9+T/Eu/7SN9O8Zov6n0n0v+pv09pD+G96P9g6T/
QvJf7deUvpPkFu0fKP2nkht1/gbSP6bzHxb0foX3FD5P+gc05mzJEzRuuPQT
dWx77e8k/TTpjs38XG9IHq/tIeEVksdpe1B4ueSpifE0HXu88D3CE4RPFr5f
eIrw8zrn/TrnmZItdQ/nS19Dx16g/bulP03y1Mzf/SQdd5y2u4Wf1bEN9ds2
4fulOyDxN7pL+hbS/yv8pHRV9I3qCz+qc7wd+Z3UZV7rt+aSl2r8t5I1pa8i
WVfyYG3VhHMdu5fkvTp2ZeT3X1X7P+uYGpIdJL+SrC19Ock093EjNb6Wfqsj
/c7aXyN5iLZ6jNF1W0heFvt8zYpzHqBnv4Z5I3mQfttbWxX91kO69/T7J9rf
rq2pcFfJt/Rbk8j38Y22xsKVJf/Rb00kL5TcFvuaZ0u+GfnZuL99JRtFXs+r
I8+H/YR3zT1PftH4H3TdI6T/TrJM+r2lv0/PVU64gfQPCh+VeW4skWyZeT4v
ktxNx9+oMYm2IzN/98WSh+u7/Cf8FOfW/q3CC5k/rHmNPU7ycP02hDmpc5yo
/eukP0zyUOn7S/+Q9G21n0s/Wbom2npLP0L6itoGSl/S1jzzeeZI1uE9SFde
+wfq/Q7QMZdKbpDcRbrT9Pv3kvUjP+dJwXObOd5B1yon/QyN/V7790nfU++g
qfav5lvr2J21X71UvBONjzX+Gf1+pPD1wq0lD9J+H97hDqOqOSPRWfg/bbWE
T5eMWOPYUuEyHXMMNkq6jrwb7Kd+20P77SUHaszuwqcJDxDeU7iD8CDuR/ho
YQz4CcHvmfd9vu7zZuHDhY9O/X2e1dhjhFPhicJ1hc8V3ovnwG5qfAVsv7aT
+KaS5RPre+v8+2n/TOl3k5yk7WLh2pK1NKabxtyB7RG+RPh25rx++401Jd1Z
2HttpzP3pG8j/J/027W1Ev458Xvjnp/QsZWE2wj3w4bo96OwpdpvyzzTdrxw
xczvp7me+1vhW4Qv0HN/J3wX6134gMz39qXk19oGCR8i+Y2264XP0phGifUP
61oHpbb3j0p3qPB27kf41mC7M0vHbdO2XPobJY/VvRzOPfH8OtfzkpdIf7CO
/Qc7r2NaCkca8zS2K7UvelB4H+yv8Gf4Lh17p3A3yR7aRmLbpb9S+F5sr2Sb
4PXFOjtJ5wk65ws6T33h84X3kTwi9ZoYm9i2YmM/l7xEx98h3Fq4kcb8yfMm
9mf4L/zYc9Jfha2RnIvN0PY281BjzpD8WHJf/faL8N0avz61/3oAf8qzafzH
ku8ntpXXSX6Y2n/drzGfJbZHqyX3xKZHti9liX3f+dI11n0eh+3U+KbCMdfT
cx8pfJL05aTPE/uyczX+o9Rr6iHpaxdrf7P212pMLeF3JT9OvQYf1pitrCXe
IXZA+sOEx0n/nfZ1mdJR+AhtOe8K28j6FD5O8r3Ux97D86Zev6OEj9DgY0uO
n2rgL/DF2n9L194k2UdylbbPha9O7Hfxv4frgs117MnCO+OXhU8RLs/8Fb5K
19hLF39QeLL0F2Nvdfzhwj2IHRLPn5uFKyd+liuEq+q4DthA3n3iOOcm6XfN
bEPWS+6V+JsOwf8kvp8bhSvot3bCH0oeouu2FN7OOxb+VeO+0z3XE24l/b/S
HxJ8Ts59aPB6ZF1+pK2jcGXJDZntVSXJkDj+OY9rseZZL7HtTDOeETuj8/+k
/W90vlbCnaTfTceu0zMdjQ/TfiPpD5H8XfdQTfhr5pzG9+Z7S/+VzvOSxu6i
7Q3tXy79askN0g+I7FNY/x1yr4UpxF3CPYlDWMcaf4P0rXT+mxLHC6107CTh
61i/wjOFhwmPEZ4uPBQ/ovFDIsdO2KMp0g/GnhCP6bw3SX+x5C2J4431nCOx
LzpFY4YI7yb8juR+2i4QHir9hdhI4Qu1XRR5DXbVVltjukveqTHdpN+K3cMO
6l30wI/oWpdGtsPErPtFjiGIH66O7L+uEd4p97rB71dPbDduIf4XriB8qvAN
se13LfxAbvv2osaP05hewk2Zd9gR4dc0diq+Udtc1qr0r0qukv5x6e7TNkH7
XaR/WXKl9FfonI8KtyG+Fn6EeyTn0NiR+C/tX6X9pyQHSrbXsZOEF+nY7tof
JXyijj1H+leE35T+osz304WYS/f3mM5ziWQ/jdFPpZax3xOxSk9tm3WeQdo/
D9uTex3fnTkfmY4d1vgzhKcJLxN+WmMf0TZF+zfovOOEe0l+pWP7CneWfE5y
tLaXmIf67UHhcyXHSj6MDcdWatyT2AzJTGu+la6xu+45FT5WuKrwQ8xL4nnJ
+7VNEv4E/6BtAraX96dtBjmC5Jc6Zht+XvhhbVOk/yy3nxojvF5yU+bnrim5
EX8jvG/mvIx3tU7ycW0vCm+S3KJz/o29Fv5MOBb+T/hz4R+Fqwt/FByP/iO8
PjhO3S78cXAsjqHdEBzj/iv9J8GxciT5g7Zc7+Zg6b8VjoSbYHuEdxduLfxV
5jnbSPIn6XeWvgU2QPhfch7hH4V3IpYUzvUO27LGpGuWObZ8qfDju+u5ntCY
3/Xb3hp/LPZAuKbwicJ1M8d+U8kHdZ4u0veX/l+NacFalSwnfRvWs/Auwhdj
MzQmET4Ge89zCDcXrsw7Ez5aeA/hMuEThasJVxK+VMfeqmMrC18hfLvwb/qt
mvDR3JvuY0/d81PMF22v4mu4/8w5xGjhv4WrEQMI/yVcVXiM8J46Zx+dZ7hw
VeF+wiOF9xG+SXiU8Du6Vk/dz5Xck/TXSX+f9FWEe5LbC+9LLYC1VFwX+zpE
sjfzinUgeYGOny/8tr5x9dR27E7ytsgxJ/kb37Mtcz+2b8BHtND1s8zxXbPc
z01ePyH19yGvnyhZObV/eVZyXu7YkvH4vfMi5/nYywsi28wukmdHPtdp/B75
XHum9o97SM7KHWfWzj2X8S9jiGGFG3EufGjiOLRv7PyyZeQc88XccWlNyV0S
338fjakm3Fl4cOyY94zI/uyP1Dkp1yJfbB05fyPPax451yNXO6zI1zZGvm/u
mVyhfeRYYUXkmIr8bntmu34n8Sd1g9hzJcrtv7Bj9WPPh0+JP2L7msGs4cz4
LsnZ+r2itrfwF3w/YcLKX4raQsfYcc0+ketFDahFEEdElsvJKSLXj7iv5pKn
ar9d5FiH9X2E5JXSfxL5tx0xUGo5ntxQ99xauL5kxdRzYxfJzyN/Y77vO5KH
Rs75WevEh89IdiLPiDw/OkfeB5PbHINPITZInCuNFZ6ia7TQmKqS03LH83tJ
9srsm34kF0xtA28nz9P+Eum3ElfrPEuF38NHCy8QXiPcO7MPOkXz+SLpFwm/
K/3Vmf3gOdJX1f5CnXOBtqGp7Xl/8qrE51+r32/X+DXCo4m1i/fOO38s9Xdc
rp2rtG2Q7gv93kv4I+EvhbsKL+Q9CQ/VeVYx7yRv0rai5DX+cGobuFj4odQ2
5DXhx1PbkJXCdwtPI56RfDT1nFom/ajU9me45A2Z38Nvkjslzod66rojU/uj
W7EdqX3QEMlt2OaS18sJ0p0YOe7H3iOflvws8pphvVRNHHsQg2DjibfHaUxF
4ROFr4ntizhnd+FywkcRLxDPk+cInyn8Su4Y8lni0sjX5nr4SWLdsTrnz6nr
KsyBS6V/U/hDHXtZ4ne4Xvi6zN+6nb7jtZlt3c+SP2grH7k+1k3jl0n/PrmO
ztW45Dn2aeQ1zPrtn/kbnabzzM6d+zPnqySOw/vH9rcHC3eLbfP5dnzDB3Wf
u2n8QuK14DlzfVGTIfa4Vvtn5I5XidM6CvcTniF8YOa48Ufp2uWO316Q7vTc
x80Ubpw5ljxa566V2YZ/rd8Xpo6ZhseugRJXHkMdJfb5qYdQnyGW5ry1M9vg
1hozN7X+QMnzEseGqzX2D+nGa5tZsny2wPirpyXnk+vljifvljwrcxw4WPh8
nWcesVPsPLtX5DpRndTPOIL5GJzv3hgcW5FTT44dWz3G+4nt38jfp6WuC+MX
jihiAebg9RqzmbkcOVe/PHd98vXM/px4dUbs3GJY5PxiCzYjcj2CWID4dqbG
PBU7X6C++kjsXIMa167C/TX+Ku1XFh4c+Z1Ss+kX+Vt+Fbm2TD5/Ue4cZEHm
2hX5Bfv1Un87ai/E/t0jf6ca2r9Y8jad+5Tc13lexzZI/Tu1IPzzZYWPpj7C
c7xCrBS71sf8IM+4JPI1Fqe+LrkPMQ7v5unY9bxbItdWuuR+xlczxx0zhKdL
PkksE/m9Ezc9IzlFsmvqOvN0neeD3PX/d3Tsh7lj6VuIhSLHqC8yzzV+hOSk
2LHeGOHZwq0T1/Gej13LA6P7JnLNmXnQK3eNepnO/17ueJ551SHzN71GuLOO
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
OLh3hV94NJgHvDozh4eYqSW1umDOELnP+GAOIvnX08HcRPKsccG8PWKkUcH8
3TeJ5YI5wavIK4N5jeRf8J3o5S2QfDiYJ813gfNDTr5Qcmwwx5FYa3Qwz3iN
xjwRzDt/l7pjMHd8LTFqMA/7bfxkMP/4rcz8BmohkzNzruilzs/NN6PHNAcf
kpnHzj1PCOZFkQPeE1zj/kNj7hY+OHFtgZyRvir91RaZeelzJScFc7PIKxtq
v6/00zLz0qmtL8rNV6cuf1RuXjr8vdckj8/N9fkuN7+Besb0zJxz+DYnSd82
N9fnl9x8dTiKJ+M/gzm1fN85hc8m3oCvRb/pVeKv4BrK78Qpwdz5VyTvDObX
cv+vB/fvybsnBnPIyH8P1m8DdK2XJUcG83RfE55d+GbihHtiv2f42FcH89ex
w0OLNcWz3B/7ueDKttL+7SWf58DEaw1O93XBPD/irn7BfFnisWtCaYczwEec
HpwfvCd5fTA3jnjvlmIt884HC9dJ/N0fSmy7GhV5CvYNO9cwsX3g/wTXanyW
mBOInd5UMo/vP2xL4v7FY4m/BRxP8qMFzDfuS3bgkMR1qgHBvMbxRZ41m7Ug
2T+YA0fc2CG4d7dGclAwh48Y8uvYXEE4g9gVYgR6s/Cs6G/BJ8X2UGOlf9sn
+L8E+L4hwT22H/R8Vwj/GpsbeUkwrxE/+0jufu7G3M+EDYSvDZ9t58gxbvdg
7iN+nD5mBelfllyRuC9Mf3hLkX9Tm72hsFHYbXgCcBLge8K72zXy82PL4RVQ
w4TrXjnyu8P2UzumNj4wmBdIHoFPg79H3fuNxLVm+t7YYGI0etFw6eEtwF/o
GczvxOfCAyR/JI+kN/qA5FuS24LnAb1IOGDky+TNtcr8bNTt65d5LtLzOiyx
r4SHDpevLHKMC1+L+uk7krXL/M3gXewv/GPs/wXAVaPHs5bcJbHd5n8VcAiz
yHF2wzL/Ru+pQZmvRz8R/iG1S3i+TwXXj6gXUYfhfymsffjK9CLg0tcs8zui
zg8XkV4gfPYxwfUjakEHaMyg1NyDRsKDU/cdqPPwPxlsDjUKvvMbkgdqzD2p
+xRDc/fd6L/Vk/7P2P8lqSv8R+z/XIxObIvgTY9MbN/ggLP+fi85zsAX0Tuk
J0tsgn+BU4zvgq8DR2hr8PH0Xn+KzSWGUwzX8deS44btweuWXjY8yZ9Kzuvg
Lv5Ycl4Hr/KHkutrcDi/K7keR12XfgfcBNYr/houP9xL/h9CDa5Oma/N/0FY
Q3Am4cnQ3yc3fZ81F/zM9L7/CrYL9MrhdvIfA+p38Ce/Lrl+wX+g6G3Dv+ob
/H8AYlfsDTwW+hTLi3iGHiV+hv8U8N8C/ktFnZfe19Ii/oF7Bi+C3KdK6tiC
GAO+GXkWvWL6/+8Gc0SIw6kLYdMgODMX6CHt6Del7nnRF1hSxIpw1frl7rvR
f1tZxCfw1sjdqM/TA78nd016jzLXebBd43OvAzjYcLFPy9zHxy93zlz3xneT
m/D/mRU6/rnc/2+CN0hMzn85Vkp/cuwYHrw2mONCrnFy5p4dcQV5Kfkp/y0i
n6KP9XbqGBu+6h/BOSl9APoG7TPX1Ykl2mX+3xlxAvUleFcv5OYP4GfnsWZz
2zRs28TcXHdq1KwLau0V9eynZO6bEDtRc6buTf17SO56f/ky88eoY6SpeTLU
T/5MnEvCtVpOXaHIJcH8B4d67brgOgk9C/rVn8auVfKMrxXxA9xF6lf0f74I
zqnp4exU5vnEvOL/eXxT+jyhzLVKuMdlRb2CHtfm4NoU/LaZuWtTcNReyl3f
oNe0KTjfZu7Bz1xUxDY7OIqx/39En47/4NCz4/9VzVPn8ktYd6nzqddT97Xh
xF6Zuo5APYG+zIIiPoTbia+n/0VP9aQiN2fOzC9iOXieC4u4kf4OvWDWS7fU
9on/X/G/Orh51KZI/qnd0XPbGMyDpWcBX5p+PT2e3qlrTfToPg3mVM+W7p/g
/z9yz2ty90OpH+NjqDcyTyYV3x0uAZyCczP34IhRqVPRd/0+uPYOz4P3AOcf
/vCG3DUiej4Vylz3rhQ7Zrsic52WOg81c/gii1LXCXnnz+euoVBLgVNKbRze
Bu98ThHrwo8ltyfHh1NHL6BK7Pi2fDG3mePwNolF56Tu6cSxnx+fAO8L/hf8
Y3pjcETPKWpQ1JrgCsOXgyMKLxnOAFzTjUXsAdcUjjJ2GHsMj4LrNC4z5xiu
ABzatYUPhbvLd+X78j8kapvYlmdz+2B8MfxbOM1wD+DNbijeJ5xVYq1lJfex
qYXiUybkrp0yNybnRV0a/17YNLhGcI6o7VLjhec8tRgDb3lmsUbgM1PrZF7B
f15TzA14wvCO6F3AseK/tMwrOCDkqfzXhv/c4Ifpf8OPe6lYa3Chic+7l8zV
oiYA/woeFtwpejB8dzhM8Ef4/+YLhe2Ca02sT8wP9xueFe/hxtSxHz26vYv/
88IbgW9cqbC92GB6QDvFjiHp72D/mpS5TjisZM7R/wE/YDzo
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmwnUV9P3xu+95w5vKikNUqQolCRjg6FCIUVJKFPmTCnzlLEBlTKTecqU
MTJGUqbMCREJocic+In/83mfs9Z/rfes9+yzzx2+956z97OfvW/rI0YMPDlL
kqRNniT6S14ukmSc/t+pwSurJLk7JMlpks9Pk2QXTfhQrZS8Qvojpb9M+l8k
Hyb9htLdp+P3kHy69OdI31+TT5TueelGSx6t/69L/5TGLlO/kcYuUn839dOa
JNlV/8+R/uI4drHOc7Dkn9Q21LW6aexM6Rpo/HbJ/SVPke56jR2q/pe6/irJ
baU7X+e+WddvLN1syRvq/D015wLJTXT8NI0dLn0meVv1E+l3kv5Udc/T2M7q
/6PWTXKp/yt1vov1/w3JT0t/hfrrqw1V/zi1zdVfT3PGqb8Xz1Pn+0P/t9H8
/+n830m3r653svRbcR+SL9F9HCL9z2qtNOcW6ZtIP0f9Vjq+KXMkD9T8THIz
yWMk95EcJK8r+QzJvSX/q34TtfGSH5RcSH+g/k/Wua/V2MHq36/ns6fkM3Td
czX3fP3fT3Jf6ZvrmvtKP1X9ozS3gY4/U/dzDb9Pcl3J6+uYq+O51pL8oI45
T8eP1dgeGntAx58g+Qqd9zzNraexfaVbqnaf+jtIf4r0W+m4y6VvrnaVdA9J
V6Pz/afxPpKXqN2rsR1ZD+pXzJHuTJ13bx2/q+TGkofo/v6TvKX6/+lca2l+
f+m+VJum/q0aP5H1KHkHyVurjVB/LZ3nBum6SD5X+kvjM1xbbaD6g9TWUb+X
2oXMV3tM86fp/ntp/ik6/mxd71TJb0o+WroWuv/J+v+H5GM0f9Pc6/MK9Zdz
/zqmnfRj9H+s2pM6foD0E6VboTZdY5/rfL/r+Ima96j07dXmS14k3QL1j5X+
Rfab9K9UXmest+/U7tGczSvfzyfqf6D+bcHP53jpX9Lcu3R8V8nDpT9D+oUa
07/kB8lHqTNJ+vUk7yb5aMldJF8oubPO86zk3XOvx2Vqd2nOoxqvo/5otdsk
T9T8ppq/c7QPi3imkj/VvI8lf5Fb/4f0J0m+QfPbSt5f8omS99H7PEnn2lLz
Zkj+Wf+3YL6O/1ryHZq/reSjNP807FPh/Xm85DMlHyN5luRDNX+O5LZqT0p+
Q/p56h8k/aNcT/pZkjdWe0Tyq5mf59HSvyD5EOmb1nifsd++VbtbczarrH9X
/TfVP0zzZ0o+SPNflHy45KclD5H8kuRN1Z6X/I7mv6F+G7WHJc/LfH+bVL6f
1yTPVX+Yjn9G8lAdP1vycZJfknx4sH5F7ue1QvKXku+RvrvkE3T8WZJvL2xv
jpR8quRbJXfkeUgeKfkaPd8H9VvO0nlelrxtYXu7hc73DOtF8taSj9D8UZJP
lDwXOfj57Sf5Acn7Sn6B62neGMl1dc4nNLZS520vuQp+Hz9K3hz7GbzesBcl
11e7QceerPPN4341/irvW/La0j0t+XXJn+v4JtL/HtfHV5JbSv5b8imSP9b8
5ZJ/kzy88n7GHn6jdr3GPsprzXqyMq7nvyV3kdwo2D+1qLw/8R2lJv4v9/5Y
N9g+VpL3lv5z3n/u9X6J9BMk7yO5R27f2Ejnv0e6K9R+lX6YxjaSbp7ub5Lk
+6S/SufbG58m+XLp+6k/KXi/HyW5reTVknuq/wX7WfJl7Et+n9rG0j2v812g
/k0av0znu1H/R+O6NP9h6XtEfTf1r5a+jt73ZtItknxM9Of4u1PUrtaxP+ka
HTg+eP3cgW2SXE/6JzX2WGF/eJXGL5H+JP3fWXJXbKL0y3X8JpLT4P3YVNfb
TrpC8umSe+r4K6XvLvk5yQMl3y95H36L5Md0vusk36hjDte53td4a+yhxkar
/4HaWvx2jS1Q/1TN313yLthnfKqOaSP5v7he26k9JfnNzOvpa+k3wP/G9f+P
jtldx36qdifvU/czSvop0l8s/e+513/9YPv+veSNJSfB+wn7d5nESdEn/6Lx
HdX/DHso+RrskPSF5Pvx54Xt1yFxvQ4O3uvseWxRVvr38ruHSd9d5zhb8slg
MI09KP0mklfjO7Q+H5LcTvJfkjeNeOXc1L+BdzRN+mXgCfXbSn+P5KWSv5e8
seQXCq+/WyVfoevdK30bHf+T5E1qjIew5cxZobmDc7+/ldFHX4O9Z69J7iD5
Rsn1MvtUfOumkieDHdUu4nnqfPXVf1G6zjr/1GB5pOZvk9t/Ywvwwct1vd9K
n2+WdFtp/hulfSMY70fp+0v3FlgrtU95vbRvBeOcUHo+/mhn6drr+JdKY4mB
0u+o/itq/6rfUfrNpJ9dGiscpLGe6r9Yeu/1ldxF/XmlbT/v/ED1Z5W2BXtJ
3l79V0vbsy463+Y6X1/d90U874jB3pH+Vsm9g/HNa6XvdcdgfMbx+O7L8cFg
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
vUbGluaXjk2do4bf/LtyXhKOCK5oY2KI1JhoheQnCmMdOK1lpWNIYkk4nkPV
71saT4GZfiQWrJz3hlOCW4JvOjp1DvQL9bcszPWC6eCT9istwwHDDW9cmpuB
o3mqNL/H2mMPEj+tr997Uu745qjC/mR6ah9M/EzOldzro5JvkLyu5CG5+VGe
7wnwhan3HPHZEYX9Dz6WXNghcBypbTLxNzk//CD+cEJpThwcC56Fu6CGgH3F
/oIrgGMHJ4GX4BbOKcw1sEeIl68ofS58HPffhPPnxggHFI7X7k1t8ydpblVj
O8gaOE3yr5lxM/gZroV4nlh9cGo+m5wAcQfxB1wOOQHiBOIFuI3N1HZKzAE/
q/69hbkTOJSnJbcuzZ3Boc3geZfmwuDEHmU9l+ZS4FQeVr+z2m6JObkXOHdw
XhsOHi6+Ue68PZw73DscO3k4OD24vU2IcVLHs/CHI0tz3XDe80vz43Dn+FD4
fDh18tpw5HDlcPrkyckJwPWPhi9IbSNXRbxGLQg5deLJi0tjmQfUrlZ/amFu
AI4QrvDawrEtMS7c13WFuSc4Kbip6wtzT3BScFM7qR2W2KZh2xpFTMiaYm1t
Kfm53PUwxBc0Yg1iD3Tg2daZ+bdavFuYe4bDhsu+uTA3AYcBl3FV4XiMuAxu
7erC+Sw4OLg48PgmPJ/EeHmy9OsnXpOszTkR39bWBkjuRA4oN8dbG19F/4nP
xff2qMz9YiOwFT0rc8nscfb644VjHWwstvabwtgSTAm25JzEbtRWcC3iI2wJ
8Qz50TOC81Pk9PoQd+bmJJZIHkc8H/EG77g2f1MYC+DzJ8Z4DNucp67fIQeA
n8JmYDteifgCn4vvfT3iFTASWOm1iG/AVGCruRFfgAnABktifAxGB6t3q4z9
iB1+x1fVGCPM1tjwwvw7tUrknMkPkU+hloScEPmcnQpz9XD25FteLIxdwCTf
lfah+NIXUnNfcLrUFVFfNCriUXKN1CCQ/+mtscmpazDIDx1WOjdAzPqn+uvU
GLez5i+RXK/GcQLxwujS+w0u/xa1S0vX+OyXG/Pib94vnIv9VW1htK8X5cbn
1LrUr3GeljkXcO3S5yZHgj2Db4BLa6I5v1W23xfEmORyze1aORYCU4Otm9UY
8z7OntSxSwvHRsRUxFaLCvM15HTI7TxYONcApwa3hj0lR4NPPVfnX1wYmxNz
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13n41WMax/HT7/x+5xRjaURIabW0p5KSVBShBS34ad9kZE2LVGijq8UM
mVKNLSPm0oa0qKZUXNOiVFqEscQULTMRKczrvh5/fK7z3O/ncz/P93zP872/
96nU656b7i7IZDJbqYjG5jKZfoWZzNvgLPE48cn5TKZSNpMZj/XCyjBuwQ+V
yGQWY7fxDxVfyvc43xPUje90vu34f/mW8nXnGynOUTVsB99QqiWvHS03XkEf
yB0idw//GcYjsVFUl2cb3sV4ufVeMlcs3mq9w9ZbgnWVM1z8G14B28z7ANWQ
25aWGb9Dm+QO5nmWjsnbiZ2LfS7/Y/lH5a7BB4oniE+SW57nUayY71R5JbFy
cW1YJyyPlcLOwx7BOmMlsTx2LjYS64jlsF3W/N4eK7G+9hgtnkT3Ga/AZvNN
Fn8iLmP8SOxN9az1OX5C7ia+R81Pi3uKlzX/ENaev4Q9irCzsGFYu0z6gQux
M+O+Y22h3+SXlH+h9XZFPtXmaUyTjCdTX76ychthE8Tl5XTjL43diK3CpmKr
sBHYYuvtMn4BO2qumvgmvneNn8FWmxvJ1xFbh03H1mBjsNOoq/0q4OOoAc8U
7JDr3SauwldovQL8ZHEc3iv5/2eNh+O8Gd+Jr6T2PAt4t8t53vwB7DxxWbyF
8RtyD5jbiE2X+5N4L14fK4O9GPdQ/A1dbN0D1ugk933xs8Zr+cbynB9njU4x
V9Xcw/l09uMZOD+eG2qI7bHmj3LW2ude+RPFnX3+Bevk81X8NfoDb2U5jxv3
tsaZRelcxvl8DB9Nl/Ack3+ApyW1oD5YlkqbHyRuzX9M3vE4z+IucSbjTPOU
wCradwvvg1QT60z/Mp4hZ525cfb9wricdcbgY+Pe8EzFj1hnRDY9n/Gcbsql
exn3tKN4kHhrnA+eRdhMvo7ih42HU5anDf/Z5n/iXSNuGc8B34/iyrwDzFeP
+8PT1L5/xgeLF9Ixc5+Kp9Ag8QL6CftEfA5v62yqTVGjNmNlsMuz6f7GfX5K
fBRfLa9pnB37/iA+E2/K9w+eKXGWsB7YSp4Z+AmsM3Y3TbR2h7ge/Fqe8dgA
8Tz6wdxucTE+QvwELcLu872ejvNinfb22CP3JL6z+Voav4lNNzcA60mj5LSQ
O8fc1TzPR5E27shX1XC/uZewHFaMVccOYn+V+4jPtwpTrYiaMc78WKqC9cIq
ylkit7bPxtgQ7Fa+cva5NptqdtTubbEW9eKZS0ewneIFci/me5u/hnFNKsaH
mb88rsvcVeY6YQ9gDbFZWEuseuTG855Pa4yOGknXZFMdj3r+oby29CfjmnKf
MdeMZ6f5HfQYNt9c33jn8N0VcWGq3VHDW/DOzKZ9Y/86Ue/jPsT7jX7FvhTP
xy+Kc5pP1xTXNgS/lef1wnSG4n23GK/F1wh7EOuCdZezQjwdPx5nHDsdqxm1
zjUOwxrKuw17KN5N9D52LzactsVvzfsU3pXnUC7V22ri5XQ4l85vXENcS5fY
W7xcbv24H3F2zXXDqsjvjm2x7wpr9OOZRT9Hrafy2Ff8lfiK+TZii7EePNPo
e3EzOgv7LPbiq+3zNfrKHlWLUi354fd6E3XneZ4K8Rtb7z3xPLm38J2HtcdW
YXOwG7HKWDdsM7Yc6xu1E7sVW48twrph5bEO2Op4VrGbsB25dO7i/PWkUVG/
+G7j28D3Nl93vnk0kK999BjGF9ANUXfNL5G3NN5d8vblUn2uIF5G+8UX4f2t
t9t6G8wNijOKDcS+wnZjj8b5wO7G9mIfR03GXqASWCesGvatNb8TN3Et32ZT
3Y36W1puPfFM4xk0Ib4/DeUfRkvk9ixKtf27eLdRc3qO50LqJ3eXeD3fA3y3
YxPjead37TUK+1v8TgWpvkSd2WvuOew38c3x/GP7sGpye1lvG7YGG8gzmQ6K
r6JS2E6+qnw9+D7EVmL9475ivbHt2FrsLmwSfSu+gkxnPpJbC7vHddWLa+S/
0sRB3+2dmKOB8V4VN8efjfcLdh9/bXlXRD0WD7ZeG75mv9fxJtl07+IeLovn
j7dBrM07Qm73+C2xC+nUfHq2H4v+Q3xZ1Gq+cXx38C2M3zObri+u88a4NtoT
tdr6BXjdeN6iF8Pux4qwS8Tv5tJzEc9HHbrFHq9EH2C93nz1450SPSzeCJuN
fcO/Tt712OKodfHc8N0jryFein82fcq3Qtwo+m/xy/RZ9IvillGj451AX2Cr
4/7Fe0/8Cn2OrcqlNWPtPlGj6bp86rGi15oW/Qt2cz71bNG7PY39E+sQfQA2
Ve78eC6xg+In6bD4o2zq36OPfwv7he8/PutSPapEFaN3KErP3ZfR71r7FOPh
0R9Rneino07Qv+lo9N4+J9B+e3yQTf179PFn8TYXL8S/w9bn0rsm3jl7o77J
/dpnk+gV+araq3f0FkXpeauLTZH7JC2N84MPlvNq9APUKp/626i7VcQT6TLs
PaxZ9JGF6V0f7/yW2Bi+N+JdTW3y6X9E/J+4I96ZdAPWDBuBzRXPo2uwJ7B9
rmFj9KHW+0X8R/xS8Uv419Eb2mNu9E5xjrF95s4Rb8il7x734GbXc7/4gqhr
2dRnR7+9RLwl6l02/W7x+7UXb6CrsL9jE7E20UNEr4j1i98z+rY493id6Pmj
P2VpJF4U9xmbgA3ALok6Ev13/C8oSL119Njr8SuxF7HxfK3inlArbA42Gbs+
nunoH7PpfR7v9SrYa0Wpb16QT+chzsVmuj7undyn5baL+mq+EOsf73+5b9m3
Qrwbs6m/j2tZKN7IezX2Ct8kudeJP6DrsLnR+2Ft43vxHsf6YA2wmuI6VCJ6
l8JUA6IWnIj7zHMLbY7nXbyUdhvfhf0c/w/EP8d/XXEH2mRujrgW/Rr3Jf5X
YsvEi3Lp+uN7fB/nNXoQ2ob1wPZj5cQvu8aSxl2xmq7vcGH6fvE9494fNne+
eB1f4/hPgo3iay5+M5d+1/h9j5irLK4f/xPjvmOX8zWI/jfqjvmp2FCsaTzP
8Z0L0vmLc/i6eDae57sdq8F3KOpPnF9sANYYOx49Fe8vBel7xPeZl0t1Nupt
m+in+Fv7HV+Ve4bxnXxN5J4w938Xkh7f
            "]], 
           Polygon3DBox[{{1451, 805, 913, 1851, 1312, 1313}, {1606, 1057, 635,
             636, 1058, 1607}}]},
          Annotation[#, "Charting`Private`Tag$163152#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1PU1EYx/FTEBQp6EylTRMHLbYSDfGFNpgIGpBAdFRY3NSIqzqb2NGE
BOKgDgZCWIGwmmgEBh3kxWoBwRfY+QMIn4PDr9/v89xzz33uPc3ef3JnJBFC
eC35mhCin8UUWTkSwkl1FTN4WW+HF3iuPoRudYlf4bd5P2+uC+EepjEjD3kH
PsMSlvGVtTf4OH/h3jfqST7Kp/kcf+z6J3yv90HvvJmW1W0YZENW6CauYgv+
kjX+2Ywp/p1vYQW38Qf+xj/yk//FKv7DddyJ++KC+0/xTf6Vn4l7813cwrd6
i2ZqV2+rz8XvJmUzf1M/x484Y80jPsun+DCf4GveaU89xnv0XmIRn+JFvCAP
eArv4pC1SX6LD/J9zy/yeftU1Pn4DnppbNTL6RXMcyKeE35RD2Czuh+b8DT2
SZJnsVca+U08HufCBryOx/AadsnReI7oMaET6+JZ41UxQlj008pr+aWaw6MK
7/SWEv//Xwe26UZu
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1236, 1532, 744, 1235, 1493, 1701, 2083, 1417, 1533, 1494, 
        1536, 2007, 1418, 1535, 1835, 1889, 1538, 1419, 1537, 1836, 1890, 
        1420, 1237, 1891, 1421, 1238, 1892, 1785, 1951, 1239, 1893, 1422, 
        1240, 1539, 1702, 2084, 1423, 1540, 1495, 1703, 2085, 1424, 1542, 
        1837, 1894, 1545, 1425, 1544, 1838, 1895, 1426, 1241, 1839, 1896, 
        1427, 1242, 2008, 1546, 1428, 1547}], 
       Line3DBox[{1243, 1548, 1704, 1786, 2009, 1549, 1534, 1705, 754, 1551, 
        1496, 1897, 1429, 1244, 1840, 1898, 1430, 1245, 1841, 1899, 1431, 
        1246, 1900, 1432, 1247, 1901, 1787, 1952, 1248, 1553, 1706, 1788, 
        2012, 1554, 1541, 1707, 2086, 1433, 1556, 1543, 1708, 2087, 1434, 
        1249, 1842, 1902, 1435, 1250, 1843, 1903, 1436, 1251, 1904, 1437, 
        1252, 1905, 1438, 1253}], 
       Line3DBox[{1254, 1550, 1709, 1789, 2010, 1559, 1552, 1711, 1790, 2011, 
        1255, 766, 1256, 1906, 1439, 1257, 1907, 1440, 1258, 1908, 1441, 1259,
         2017, 1564, 1713, 1791, 2016, 1565, 1555, 1715, 1792, 2013, 1568, 
        1557, 1717, 1793, 2014, 1260, 1558, 1909, 1442, 1261, 1910, 1443, 
        1262, 1911, 1444, 1263, 1912, 1445, 1264, 2020, 1573, 1720, 1446, 
        1719}], Line3DBox[{1278, 1575, 1721, 1574, 2021, 1277, 1588, 1587, 
        2030, 1276, 1449, 1915, 1275, 1448, 1914, 1274, 1954, 1795, 1273, 
        2019, 1572, 1718, 1571, 1272, 2028, 1570, 1716, 1569, 1271, 2026, 
        1567, 1714, 1566, 2018, 1270, 1580, 1579, 2024, 1269, 1447, 1913, 
        1268, 780, 1267, 1953, 1794, 1266, 2015, 1563, 1712, 1562, 1265, 2022,
         1561, 1710, 1560, 1578}], 
       Line3DBox[{1292, 1592, 1727, 1591, 2032, 1291, 1590, 1726, 1589, 2031, 
        1290, 1598, 1597, 2035, 1289, 1960, 1801, 1288, 1959, 1800, 1287, 
        1958, 1799, 1286, 2029, 1586, 1725, 1585, 1285, 2034, 1584, 1724, 
        1583, 2027, 1284, 1582, 1723, 1581, 2025, 1283, 1594, 1037, 1282, 
        1957, 1798, 1281, 1956, 1797, 1280, 1955, 1796, 1279, 2023, 1577, 
        1722, 1576, 1593}], 
       Line3DBox[{1294, 1802, 1961, 1293, 1497, 1962, 1844, 1295, 1498, 1963, 
        1845, 1296, 1846, 1964, 1499, 1297, 1847, 2033, 1595, 1500, 1298, 
        1042, 1728, 1596, 1299, 2041, 1606, 1607, 2040, 1300, 1803, 1965, 
        1301, 1804, 1966, 1302, 1501, 1967, 1848, 1303, 1849, 1968, 1502, 
        1304, 1850, 2036, 1599, 1503, 1305, 2037, 1600, 1729, 1601, 1306, 
        2038, 1602, 1730, 1603, 1307}], 
       Line3DBox[{1311, 1916, 1450, 1309, 1505, 1917, 1451, 1313, 1507, 1612, 
        1886, 2044, 1452, 1611, 1773, 1774, 1918, 1614, 1765, 1453, 1613, 
        1854, 1919, 1616, 1454, 1731, 1880, 1920, 1455, 1318, 1921, 807, 1320,
         1922, 1456, 1322, 1923, 1457, 1324, 1510, 1618, 2045, 1458, 1617, 
        1779, 2096, 1887, 1620, 1766, 1459, 1619, 1780, 2097, 1888, 1622, 
        1460, 1621, 1858, 1924, 1461, 1329, 1926, 1463, 1331}], 
       Line3DBox[{1330, 1462, 1925, 1328, 1512, 1610, 2043, 1857, 1327, 1511, 
        1609, 2042, 1856, 1326, 1777, 1778, 1608, 2095, 1776, 1775, 1325, 
        1855, 1976, 1509, 1323, 1975, 1807, 1321, 1974, 1806, 1319, 1973, 806,
         1317, 1615, 1972, 1879, 1316, 1508, 1605, 2039, 1853, 1315, 1771, 
        1772, 1604, 2094, 1770, 1769, 1314, 1852, 1971, 1506, 1312, 1851, 
        1970, 1504, 1308, 1969, 1805, 1310}], 
       Line3DBox[{1333, 1808, 1977, 1332, 1513, 1732, 2088, 1464, 1623, 1514, 
        1626, 2047, 1465, 1625, 1781, 1782, 1927, 1628, 1767, 1466, 1627, 
        1859, 1928, 1467, 1334, 1929, 1468, 1335, 1930, 1809, 1978, 1336, 818,
         1337, 1629, 1931, 1469, 1630, 1515, 1632, 2048, 1470, 1631, 1783, 
        1784, 1932, 1634, 1768, 1471, 1633, 1860, 1933, 1472, 1338, 1861, 
        1934, 1473, 1339, 1935, 1474, 1340}], 
       Line3DBox[{1341, 1635, 1733, 1810, 2049, 1636, 1624, 1734, 1811, 2046, 
        1638, 1516, 1735, 2089, 1475, 1640, 1862, 1936, 1476, 1342, 1863, 
        1937, 1477, 1343, 1938, 1478, 1344, 1939, 1812, 1979, 1345, 1642, 
        1813, 2053, 1736, 1643, 1737, 829, 1644, 1517, 1738, 2090, 1479, 1646,
         1864, 1940, 1480, 1346, 1865, 1941, 1481, 1347, 2006, 1518, 1482, 
        1348, 1942, 1483, 1349}], 
       Line3DBox[{1350, 1637, 1739, 1814, 2050, 1648, 1639, 1741, 1815, 2051, 
        1351, 1641, 1816, 2052, 1352, 1943, 1484, 1353, 1944, 1485, 1354, 
        1945, 1486, 1355, 2057, 1653, 1744, 1817, 2056, 1743, 1654, 1746, 
        1818, 2058, 1657, 1645, 1748, 1819, 2054, 1660, 1647, 841, 1356, 1946,
         1487, 1357, 1947, 1488, 1358, 1948, 1489, 1359, 2061, 1663, 1751, 
        1490, 1750}], 
       Line3DBox[{1373, 1665, 1752, 1664, 2062, 1372, 1678, 1677, 2071, 1371, 
        1492, 1950, 1370, 854, 1369, 1982, 1822, 1368, 2060, 1662, 1749, 1661,
         1367, 2069, 1659, 1747, 1658, 1366, 2067, 1656, 1745, 1655, 2059, 
        1365, 1670, 1669, 2065, 1364, 1491, 1949, 1363, 1981, 1821, 1362, 
        1980, 1820, 1361, 2055, 1652, 1742, 1651, 1360, 2063, 1650, 1740, 
        1649, 1668}], 
       Line3DBox[{1387, 1682, 1758, 1681, 2073, 1386, 1680, 1757, 1679, 2072, 
        1385, 865, 1384, 1989, 1828, 1383, 1988, 1827, 1382, 1987, 1826, 1381,
         2070, 1676, 1756, 1675, 1380, 2074, 1674, 1755, 1673, 2068, 1379, 
        1672, 1754, 1671, 2066, 1378, 1684, 1986, 1881, 1377, 1985, 1825, 
        1376, 1984, 1824, 1375, 1983, 1823, 1374, 2064, 1667, 1753, 1666, 
        1683}], Line3DBox[{1389, 1829, 1990, 1388, 1830, 1991, 1390, 1519, 
        1992, 1866, 1391, 1867, 1993, 1520, 1392, 1882, 2091, 1759, 1685, 
        1393, 1883, 2092, 1760, 1686, 1394, 2076, 1687, 1761, 1688, 2075, 
        1395, 1831, 1994, 1396, 1832, 1995, 1397, 1521, 1996, 1868, 1398, 
        1869, 1997, 1522, 1399, 1870, 1998, 1523, 1400, 1156, 1762, 1689, 
        1401, 2077, 1690, 1763, 1691, 1402}], 
       Line3DBox[{1416, 1700, 1180, 1415, 1531, 1697, 2082, 1878, 1414, 1530, 
        1696, 2081, 1877, 1413, 1529, 1695, 2080, 1876, 1412, 1875, 2005, 
        1528, 1411, 2004, 1834, 1410, 2003, 1833, 1409, 2002, 875, 1408, 1694,
         1764, 2093, 1884, 1407, 1527, 1693, 2079, 1874, 1406, 1526, 1692, 
        2078, 1873, 1405, 1872, 2001, 1525, 1404, 1871, 2000, 1524, 1403, 
        1885, 1999, 1698, 1699}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{567, 880, 973, 745, 2083, 568, 974, 992, 754, 593, 993, 
        2011, 765, 608, 1002, 2015, 778, 621, 1955, 789, 632, 1962, 902, 798, 
        642, 1970, 913, 805, 1917, 652, 926, 1079, 813, 2088, 663, 1080, 1094,
         2046, 823, 676, 1095, 2051, 833, 691, 1108, 2055, 846, 704, 1983, 
        857, 715, 1991, 867, 725, 2000, 959, 874, 734}], 
       Line3DBox[{570, 1225, 882, 976, 883, 1889, 978, 894, 895, 1898, 595, 
        767, 1906, 610, 780, 623, 1957, 791, 634, 1964, 904, 905, 1054, 1211, 
        2094, 915, 1067, 916, 1918, 1212, 1069, 1217, 928, 1082, 929, 1927, 
        1218, 1084, 940, 1097, 941, 1936, 678, 835, 1943, 693, 1981, 848, 706,
         1985, 859, 717, 1993, 952, 953, 1160, 2078, 961, 1173, 962, 1228, 
        1222}], Line3DBox[{571, 884, 977, 885, 1890, 572, 896, 897, 1899, 596,
         768, 1907, 611, 781, 1913, 624, 1037, 1038, 1040, 2033, 906, 1053, 
        907, 1056, 2039, 917, 1068, 918, 1919, 1072, 930, 1083, 931, 1928, 
        665, 942, 943, 1937, 679, 836, 1944, 694, 849, 1949, 707, 1986, 1144, 
        1145, 1203, 2091, 1146, 1147, 1162, 2079, 963, 1174, 964, 736}], 
       Line3DBox[{573, 747, 1891, 574, 756, 1900, 597, 769, 1908, 612, 1019, 
        2024, 1020, 1186, 1022, 2025, 1039, 1023, 1190, 1042, 1055, 1043, 644,
         1972, 1070, 1194, 1071, 1920, 654, 815, 1929, 666, 825, 1938, 680, 
        837, 1945, 695, 1126, 2065, 1127, 1199, 1129, 2066, 1130, 1204, 2092, 
        1149, 1161, 1150, 1208, 2093, 1164, 1175, 1165, 737}], 
       Line3DBox[{575, 748, 1892, 577, 757, 1901, 598, 1003, 2017, 1005, 1184,
         1007, 2018, 1021, 1009, 1187, 1025, 2027, 1041, 1027, 635, 1057, 
        2041, 1193, 1059, 645, 806, 1921, 655, 816, 1930, 667, 826, 1939, 681,
         1109, 2057, 1111, 1197, 1113, 2059, 1128, 1115, 1200, 1132, 2068, 
        1148, 1134, 1205, 1152, 2076, 1163, 1154, 727, 875, 738}], 
       Line3DBox[{579, 750, 1893, 580, 994, 995, 2012, 759, 600, 996, 1010, 
        2013, 771, 614, 1011, 2028, 1028, 783, 626, 1029, 2029, 793, 637, 
        1965, 801, 647, 1974, 808, 1922, 657, 818, 669, 1099, 1195, 2053, 828,
         683, 1112, 1116, 2058, 839, 697, 1117, 2069, 1135, 851, 709, 1136, 
        2070, 861, 719, 1994, 870, 729, 2003, 877, 740}], 
       Line3DBox[{581, 979, 980, 751, 2084, 582, 981, 997, 760, 2086, 601, 
        998, 2014, 772, 615, 1012, 2019, 784, 627, 1958, 794, 638, 1966, 802, 
        648, 1975, 809, 1923, 658, 1085, 1086, 819, 1931, 670, 1100, 1101, 
        829, 684, 1102, 1118, 2054, 840, 698, 1119, 2060, 852, 710, 1987, 862,
         720, 1995, 871, 730, 2004, 878, 741}], 
       Line3DBox[{583, 886, 982, 752, 2085, 584, 984, 761, 2087, 602, 999, 
        773, 1909, 616, 1954, 785, 628, 1959, 795, 639, 1967, 908, 803, 649, 
        1976, 919, 1073, 810, 2045, 659, 932, 1087, 820, 2048, 671, 944, 1103,
         830, 2090, 685, 1105, 841, 699, 1982, 853, 711, 1988, 863, 721, 1996,
         954, 872, 731, 2005, 965, 1176, 879, 742}], 
       Line3DBox[{585, 1226, 887, 983, 888, 1894, 986, 898, 899, 1902, 603, 
        774, 1910, 617, 786, 1914, 629, 1960, 796, 640, 1968, 909, 910, 1061, 
        1213, 2095, 920, 1074, 921, 1214, 2096, 1076, 1219, 933, 1088, 934, 
        1932, 1220, 1090, 945, 1104, 946, 1940, 686, 842, 1946, 700, 854, 712,
         1989, 864, 722, 1997, 955, 956, 1166, 2080, 966, 1177, 967, 1229, 
        1223}], Line3DBox[{586, 1227, 889, 985, 890, 1895, 587, 900, 901, 
        1903, 604, 775, 1911, 618, 787, 1915, 630, 1045, 2035, 1046, 1047, 
        2036, 911, 1060, 912, 1063, 2042, 922, 1075, 923, 1215, 2097, 1078, 
        1221, 935, 1089, 936, 1933, 672, 947, 948, 1941, 687, 843, 1947, 701, 
        855, 1950, 713, 865, 723, 1998, 957, 958, 1168, 2081, 968, 1178, 969, 
        1234, 1230}], 
       Line3DBox[{588, 891, 892, 1896, 589, 762, 1904, 605, 776, 1912, 619, 
        1030, 2030, 1031, 1188, 1033, 2031, 1034, 1191, 1049, 2037, 1062, 
        1050, 1065, 2043, 924, 1077, 925, 1924, 660, 937, 938, 1934, 673, 949,
         2006, 950, 688, 844, 1948, 702, 1137, 2071, 1138, 1201, 1140, 2072, 
        1141, 1206, 1156, 1167, 1157, 1170, 2082, 970, 1179, 971, 743}], 
       Line3DBox[{590, 987, 2008, 988, 591, 763, 1905, 606, 1013, 2020, 1014, 
        1185, 1015, 2021, 1032, 1016, 1189, 1035, 2032, 1048, 1036, 1192, 
        1051, 2038, 1064, 1052, 650, 811, 1925, 1926, 661, 821, 1935, 674, 
        831, 1942, 689, 1120, 2061, 1121, 1198, 1122, 2062, 1139, 1123, 1202, 
        1142, 2073, 1155, 1143, 1207, 1158, 2077, 1169, 1159, 732, 1180, 1181,
         1182}], 
       Line3DBox[{733, 873, 1171, 1999, 724, 866, 1990, 714, 856, 2064, 1125, 
        703, 845, 1124, 2063, 1107, 690, 832, 2050, 1106, 1093, 675, 822, 
        2049, 1092, 1091, 662, 812, 1977, 651, 1916, 804, 1969, 641, 797, 
        1961, 631, 788, 2023, 1018, 620, 777, 1017, 2022, 1001, 607, 764, 
        2010, 1000, 991, 592, 753, 2009, 990, 989, 566, 744, 972, 1183}], 
       Line3DBox[{735, 1232, 1231, 1172, 960, 2001, 726, 868, 951, 1992, 716, 
        858, 1984, 705, 847, 1980, 692, 834, 2052, 1098, 677, 2089, 824, 1096,
         939, 664, 2047, 814, 1081, 927, 1216, 653, 2044, 1210, 1209, 1066, 
        914, 1971, 643, 799, 903, 1963, 633, 790, 1956, 622, 779, 1953, 609, 
        766, 594, 1897, 755, 893, 569, 2007, 746, 975, 881, 1233, 1224}], 
       Line3DBox[{739, 876, 2002, 728, 869, 2075, 1153, 718, 860, 1151, 2074, 
        1133, 708, 850, 1131, 2067, 1114, 696, 838, 2056, 1196, 1110, 682, 
        827, 1979, 668, 817, 1978, 656, 807, 1973, 646, 800, 2040, 1058, 636, 
        792, 1044, 2034, 1026, 625, 782, 1024, 2026, 1008, 613, 770, 2016, 
        1006, 1004, 599, 758, 1952, 578, 749, 1951, 576}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
Cn2S0bkNvbRea4SzN0NzFwybk02pu2rsiLktp8/S+WFzufNzQPouy8B3a+C7
26Rzwvpy5wT7Yt7cviAn68nJSZKe2RboOaGqnhmvZ5FfW3KlOGtuSRzVu/Zs
0472WeyVn7pz2v/wd7v7mT7zr51F6p5GB3arxjOLRh83WrYX+x2Rvar+xrjW
50eR7KHvtyXNYrLp4p0lcxe1Fdux4Hn7Mk4VpbEmuiotBg5MppFt38XUbi+2
J8WFca3Lu+SzXxmblg80ekmr6n6sXt+sSHhORH68NHSvZYwno36Fob+WRMSz
nhZqQ1aqlAn9qciP7NXc+mK8s5/3vFPxDZp1SSDNril3rfuVCf1L29VPPI6M
SmTfRwx26DAwlsY2LS81vFoitOci+/mndkN0L0R4xm/yo8hH4X6U8tfOw/7u
rrSt3gabq7ffCv3795dTR5XtSqaVc0ye2ix3ZgnbXeyHHykV+n29/n8FGr0J
8J7/MD5yUgM3VtRwacDlYrH/1fD79/psEdaPxfoifyey541x7x5BD4uhhw24
v6O4+ws9MF4PIjvcJnSfe9Y+b7o7aV+1LyPSaK3n1tnzvEvouq3BzO6D82ji
FdOFlVlBrFjtc2G3d0U00u2UZ1qbHFp/c9fXebrRzMlKs1fjcJlw3Cy/TYrq
1Hja0uXg4Sd6yWzEOvcG92KLqdqh5hP2msfSS1MHPfNj2ezlS/ds/VAZZRbJ
uqQ6Mu/jY5Nzp9xLY0s19i85ka7wF7hHTTKle7QG92jClmfjlvXIZSmPTer7
mgdTzS+3tS47yiikUY22DV+msI9RP3apFCWQrp22l79OMRXBTq7i7CT0wH7T
A+ywBuzwQtjh05NUQ2JmZVHhaztbXbPXTMu8261VQ8TnKrYPS3ZISqKO+rcL
Fp1PY1/Ufg5TmyYX6idrSc6HykuelPfiZcgWyzwWoq1V7ZaWjG76WM2sPjKb
eabVuxPU2JMiVxkPWbKqmH5I32WZs6t+90rh8bsmGaksvJnmrGnNk+hJx1GV
q+zlVB/3ug5J93oc7nWXKb9q7rsazdRqxC+qr59DGUWbzlvbyKigQLKTLrCT
52EngzKXOm5pE0o/rKyHtJznR0d3sIJ9qm+FdmZP5aLLR569Jo82RrUD7kaz
c9G6XSzGlQnvl0gPonNyQFqf2WH9C1i/UJqvtxfzV2A+5Gct7lSVnyR59GpD
Hjnkqa/7MXXM9wCmY/OmTatzGTS4lnOTw++KaZe0X73V2G9t7Lc35rfH/CGY
L/LXcshTAX0egTwiO3wT+32K/Z7FfkX2p9FSSZ/Z0Gc49Bl5+4u6cQ8/imno
3bNn0xxWNuL+CutncrqD3+sep8+rOLdLcG4J51aG89DsTlX5a0vyUMJszh4K
cM5AnEMVnMMsnENR3HoP59wL59wN51yEc6xxj07gHoXhHon8tUhvDWHHPGHH
/GDH8nHftXDfv+K+i+KFm7Anr2BPGsOeWMIO68IOy2CHk2Hfcjn7JorftWHf
rsG+bYR9E8XXovhRFJeJ4krRORHFcePgR+bDjzjCj4jiqT+NI0Q4VpTfUPpT
C86fiuJ9kR0W5QFEdkYUj4vukSj+FcV9wBU0gMMVonhQia94PYjiskIJrzIC
XtUFXhX5cRGeEfkpkR8X2WFRHiMZOHwVh8M/Iu57zsV92Bfx+xLFoSL89gJx
RCfEEaMQR4hwi8j/ivCJ6PfdjLipCeKm04ibRHqYgbisOeIyf8RlonFRPLgO
8WA84sE7iAdDEW/eQ7yZinhzM+LWmj+qxq1GiH+LEf8mIf7divg6h4tzQxCn
M279O4j3+yDef4t4vxfyBtsgf3xV+YmXX5RPEMWzIr8msucivYnyFaK4WIRD
RH4z+MYC+ZabuUzf6GQTrw6hlD5bJ1O7v0yY99BYsPuA6rhcmtFvpeWqbu5s
6oVp9191EONDEc4R+WXEv4yPf0XnR5RvEeF2ES4V4auzZ9TjHnjksLM6By3r
R72iNbkB7Y/9K/8mOLci/C+yA6JzHm48tiJLP4RKDN1bm+/KZYOM9SceXiwj
F+C3JOC3YuA3UX5DlEcS5TemIc7yRZxVHXGWDPK8gTyDIY8I/4j8uyhPdRF6
NoSeV0HPIjwvwv8iHCvCXcBLxOMlkZ0R5c1E8Zoo7hDhZ1Xcr324X9Nxv0T2
zR/3dznubwburzAeFMQ1In8hsp+i+FGUDxTZ1fc3dXP8rTzpp+WOjpUHI+lb
u9Z/RcnKaGC0znm1NS9obkCSZ++GQcx0U7UWNRe8pQ27XDzNenmxDQdPvAtc
YUuntl9JWRKuiNeGRrUbERDLnn1+cdNk7Ct2/fa7T/k6ZeTi+fZa5ag4GjL+
cli1OGv6dCB6xZPDZWSF8ZBx0vhnjKtI65AX1rmFdTZK3yX5garfrY7vXsR8
S8zH+kxvfNX1h0r7Yt2xLzPsq0zSA2thJenhC/Qw9JY0XmFZdfwF9MDLcxTr
83qDHljQuKp6OA49d+Pk8cR+13N6bgT9nMV+b2C/gyU5qSnkL4ec62713F1+
zZ4O/1i2bl1eARvwJtb3zZRC5Tj7w/Hf1hH5C1F+TIRvRXlXUb6xKLTN1n3n
IkkjfH1wQxMbdjHqe1zXem9p35uNkc29Ikg7Jny4Wt1Ayjt91nuoU5kwvjgk
zWc/oqX5BZhfKK3PTLn1RXi7VkTIM5ksnLVM6Rng3ymCafT5qDFseplSTsbL
ie/S79/977h3iNbIwJEON+h5yqPxFZ3fsCMt1idoNylUjrM/HBet8//b+hrQ
jwr0Uwf6we/F+N8L+ide/1iH+HWgf+L1H9Sn4n21/FAa8aizVcm8XHawrat6
s/kySh3/OOV7hAd937m59fod2Wz+2WUDLk4oJmOD9bduDE6k5j+vbOiWl8Y+
RM5zf3ZRTk/d9zzXMU2nDzH+22dmhLHK+jn2x0KL/z6fj/hz3uv614mXfehc
h1qDXxYkUcpiJ4NpO0ppqM3U+DszU2n9oQ9xFtPjKHxarbZTjhfTPK9bU/qV
P6ElUTFDaq/JpZ/rlp4IaiCnw627uyTWiaMxgWbe5SezKGDAvRePustp1q+8
OpZH7tL7RROW3zYvoK5b37n42haSyr//O6q3D/UYDVGPMXb93dSTjwKoKau4
ab00jzLTm2s3qSyiav+ef09PWSdcD3UyE6T1Gb/+EGkd1oxbZ5YkP1sK+X9A
fln/pkU3msexaF+NBv0ys2hJhd3XPfXk5Cvph12FfpKhH+f2n0MmXUhlP0MD
fV75x1Hq/OIRe1YW00vc3yROz15fNbtOnfuSDfq4NPJ4bgxLual1Ic64jN7u
bbx5Ue90tshvgfqFNmFMO2KoaYq8mLKk35394H73pxbTYyo7JjKvdjuTAi3S
WO72zvrMSU5X3K4fL9Z0ZJZvdeLOvs5nETNPxH/UL6Iw6Vyx4ThXB3Cu7g7v
ZrV5fSJd7eR1zMI4hX2pqHvsRsdimr+z2Wy1wGwaP3vVMtWDMazJxgPfu0XL
qGP4BWeja3nkeCTiw8QfjNn1jI6N/V5Egyx7WDUdl0+LY7vo23y0JN/ppjuu
+xRR7Kmw3lpeueTwpNYZrQnB1H+Tt9fTCTJqXjjpVsndDApwvvHA2jqe4k9U
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
4vFH5h5XD0Wzb9G1Nprcima+AWazd78upZMvC4fFb80nxz3Hneqtc2bGnv7j
Xp4R88F9dn6dbjKigKX6PjlhYvyQBl8fvuBhlrhvgzRupWfG9T2QcLi73m6O
7y/FKZ56DTieu4gPLuJZbxHwfCV5rv7Gh1W+O/P8UGnc8zdepIg/KOLfvRPw
oEU8uLBzA21XrI5mgR8nHX+6KYOsV4R4fBugOP9zEz8HD01gDkHLwuwU9mTB
t7cTXj8upTfn7Dpffx/P3o4c2zH082tWc8+borFXS4V8ec2Zr+o+veLDfpas
/tJbnseGrJ58p1pQEU0e03j3gRnhlHUx54JNXDYbN359xsgJcnrTvd+sb03j
6dj9S16ti2PY1BUl2k3VS6nb5teBX14m0LBFZTVGn3hCa4pWa2ZWlgp5lBul
d14ahXdeV7zzxvdv69pfEY84rZa9njSlgNI1eqbWSy2ktte1P18dncNmTzqQ
W/2vV/SpYZuMLnvlwv4G7aU6GdaTq5MR8evtx7cxPGecTRNC55pf6BfJzlgY
eq5fJRfyWwdLdQ4KvFO1jnq99D5Oz7j38esqAQderfCmH5UFtRyjcuhClzX3
c+bLqeEslX6V/vnsTfxJ+xsyE1Z9ssG5VQuKKAm85i8crzl0RdFVTecU1n3x
dseGj2PYoBnXCmXvi6lWM00fS4UfHd/vY3vv9ndZK6NuKpXDi+ia9/D0aLs8
Onqj1rK46i9ofY+NTUdpKuzbnGmuH1dl0usOetXDxkTSF98k423tioU8Sqd9
OSvNjfPZwqjQK+GqpjRxXO0nY28X0YnAfgtGjSmgD2q95rRSOcd0wuasjC0q
FNbPi+rkRfVaojr51dCzB6fnofhdHnP1J6I6Z1Hdcgecn17c+RHVyYjqXoxw
zsfgnDvjnEt244neQ9iH+rAPf1onL6qL/tP6K1FdjageQ8RTEPERRHVcIj6C
qM7tGfhT9Tn+Zk348Q7cORHVde8C3njO4Q1R/Y+onqcAuGgkzvniquf8t/p/
UT2/qA5cVD8mqgcT1RGJ6ltE/CNR32AR/0jU/1bEHxH1fRXxGkT1n6K+iKK6
WVF/P2H9p6CvnajubiTqZGy4flmifmIifrqo73eKhN/oC/CbD/CbqJ+ziMct
4rGK+nAeVOtRvXuBH5s2u1+JrX0MdX3X2+L01jJh/0kR31NUHyvqZ26POp8i
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
6lWoK+pVPqBeZQrqScqmVq0feIj6k0GoPzmN+pNH0jhry40r+3iEc/UMHVEn
MxTf/Yjvpkh1RPQEdUR3UUeUKNURkSHqiBaijug96nz2oc5nCup8+P5sY+EH
P0nz2WbMn4b58ahTOsnVKcWjrskb8thAHtSJ/dYXIhfrX8L6k7F+EOT3w/rz
sX4Q9huJ9a2wvrJf32muX9896HnZf9czHeXqi9rg913N6dkK5+Q1zkkJzomy
/jCS6zt3FufwMM7hsqrnkPpydQu3UVcZz60fg/Nvj/NvjPNfF/elDlePivoB
lsD1G3RFvagGdx+f4p7+qKxaR6qyT6pr/cz1q6mNOtiO3D0NQ92sG1c3uxD1
ZumoNxuPejMJX13Ua4C4TxVxn/J96hvXX+406j8vQp/LoU/cU8bf076om+3N
1c0uFfQFlfjvz/Um4/2iPt4v3I+WH4y96+494b+9g5g8957Lve+MRr4olqsf
GOu2wtRsVjK1jKyzx2BRPJ16aJAwJqyYNNyerghqEUMNTMP1s7Wz6b3b+SGW
Y+UUMEnt/dbLfrTobLX3rx/mUYe9/eoeSPvP38ni6wzxXVafq6+Y3TrcNrNV
KotSk19ySA5ni554n304vYRiRql1tN0Tz550qFP9qWs6C5pe2cfSXU6RxumX
vljnUoTVgSZTbgUw9wCP/iZnZJS/ydcubFEehao0iyv4YkOHC8bXs9ohI+fB
K9utfJFD21tnr/DXCqeI7etii9xk9HzHqsHfk1Jpzou9fRMWJ1GJ+8yihOty
UvU0O2YUEUGXLPtHdDTNJNWBx8b8C9dhfZaH9Q9h/WhJHvaKk6dvLBs9Z30m
i2mqkRSXHMc0Bs1bHr9ATjumNrNJ+BrHXkV5ttGYlc5GL9Yy1S6U0/06m6uP
MS2gxeF960WfNmOTVn+uk+1aSN21tx4b1iefGhz2cNu85CkdjPEzs3MtIrWU
ORGXzbJp+O7Xf71YHEiqla2CVub+5+9P1eH+/tSaNo1i5x4qYI+m9zaNDb1H
sb4jIwodC6m6kc+w1e/y2Un/j7fauD1gu530zTtrK3Bp60/VNo3OZas+rvtc
w9SP/TxvanZCJqNVm7q3uR6eT/pzu3RxcnzAWu2yjVPT/0+9bj0Ot7zpGUsm
iu+GHk52swq6R/aRjlmBjqiDzbb2jkcdfk3U4Ut22E6P563jve+3fhF479Ob
y/FtpXFrPZ4fqhzneW3hHN9tSxUeosnffLGq69h587wMUZ2tNP/B3/tV8g7w
7sb88O42Be9uZw/fZLcuxLJV1Z5WXz4okRl8anz/sXkJHRzmmps6LIRdXL5J
L3BYDqvRY3nw54FyOnd77+Jxyz2ZSZd1+flX8tmn5oErO04uItNhCx8vmhBK
g+pr29dek8NWNfpl3aiOwo/gve8v7v1xVvGlXiFN4mlgybmXnVyjaFl1vQ+1
DErJqWenlB0pkTQ97EQrw+xMWnFl8ZCbH+SUtFutxTKFHdg0WLV5ksIOqJ4r
PWOksAMPv0a61HXPYW1OtjzsEWnHznQNnnnFSuHXOl/tdfBrFluplmFY/DSa
7cvq3SFkq5zyfKJsVm5KYmOXmJqO1EljrrPjpu4wkdOYokez3PVC2Ps674MX
KvY71OaMZa9BcuX6NBrrn8b6t5NuRNmVZpPWvUGXOh4KJv1D147PMpPT0epj
NsUq7Nic9iMq9ivsmI7B5bJkhR2TLWvWY3hUPutoM7jGBbc1ZN/H7fqo6UW0
zcLvhN+qPJbxyG67rsZLZhVtXHq5oyKOO9fl1+0OWcx4Z9nSvJ1RTEt9wfy+
8f/6O491S/oq7kXzXWn9Kp8+YC22+jQ0UPy+dY5sfDFacX9vpRm2aLf0KaUf
GDndUnF/F7itO+S6MIc0G/T8Vt42lIa3Om95REsRF3xf82uNQp4UvylXj5qu
oXjPJbFtFPKcffMzaYbCPvRX272smbkZyw0PcY5T2Af1ympLzHOsveO4cxX6
6UTx+/rL/+7/oDyfZ7DOLayTh3W88N0Nr6TvJuC78yFnTU5OTezLFvtKw776
QA9FOyU9NIMeakBvm6G3JtCbSM/F+F2CraTfxQ6/i/J3nIXfURe/YwDwMN83
zBLnoQl3Hh7h/PyF82OB8zME5+0tzpsezls+zucY7nwqz/MK7jw74vzrceun
475sxn2phfvyBPdrKne/FuA+jsR9XIr7eAn3uj/u9Wrc69k/vHedVLHRWwE7
thl2TGQfTsKeXII9qQZ7chH2ZzXszxzYnzKBfQuD/eS/W8v14YzxdY//xrct
gF8ogl+4D7+g9COtOD+i9DuGnN8Jhp9aBD+lckHyU9Xg145zfm0t/OB5+MEY
+EFbQd/gWvCzfeFn1eFnu8Eva3B++QH8eHX48Ynw49vg9wPg98fA7/M4QR04
IQq4Igi44ilwRQFwSCCHQz4/r4pb1IFb3IFzDIBzSoFznICLtnG4COtT1n/H
OeTLyTMJeJXvYxYH/ObG4be5wHuJwHsLgfeCt/t2bF79/m/+0VeAM5W4tBFw
6TvgUn3g2NbAsebAsS85+9Aa9mHohLv5O2enUuefHw2fz49gr5/GbQwcWkJT
BPvaMuqKe/DReGqR2XrS9rR0Fm+4tUL1gZzknTRvGBqk0oSK7r7T50SwX+9a
Xb6uWOfk3CGLm9vkUqhW8yu2NwJYWeoY9wMKvfV877XONi+S/VoxrdHAxln0
ppGH1tg8OS2f/fFj/Kh4dtUyuHh232i6aj2zuc6oUrpW3+OEd2k2c3lh9Nxq
fzCdCVrtuU5hxzIjTg+dq/i9LiamX2mh+L0a2Swo+qL4vUo2dLE4Wt9Vj68j
df54ecNTrXgy/OXnFfswitp/CDlpq7An3YAHArl6s41vPiXWeZrDju9NGLc2
wo65xJTnjbojpy4puqlXFL/j7iYdHdxjw9mu297zWs0o+ftdO5Z7jx4riDsG
7XXfP3V2MrUd3iGj/vx4qvuotPyx4vfaJH2XTPBdZ3zXOe/blLP1ssnrsGX+
qZfR7Oa+BbKEFf/p996Vw4dn8064pLsobM3992cHWSWyxP61dpgZlijxDwvh
cNf6haU1fRR2b82ECbM6909kNxtv0ppyqoSyJT2zM9BzQ+h5Ujvbh14vcphP
u7RKi0bhVOEY4xmjuEexNe7W2Hc4mVU80bftaB9PxRtMI84+KSY/l/kf0+tm
0z7Dmdl9/aOZvWfd45UK+Rup7VvSRdNVT9k35hBwrLKf+Q/OLvWcs2xC3q9s
lltYcHDAhWCyHjX3++Vd8r/5iRWcH9z+w3DyG5sY1nvcnGNpq7NJu5rleUM1
OT2rZ1ey0ymW6mgstz9pncjuTKjcvV2hH++aJgfKzX/Hzx/kS8+oTwmlK69d
fHYf+BePI3hqh+8yWhSfU76V4tly/THNIvpHk/+5um7DFed21+TyanrZkazI
cHjpXa0s6j1wW3LzPPxeJh56rhx/vBrq95TviQegB9xfVpPLA0/Hdzdx332E
fTXBvqywr03QQz9ODyH4vWo9rfp7jcfvG47f9zt+X2WcpcHlh3OgnxvQT13o
xxHn9hV3brNwrhy5+9tSOg/ey7l31S04n+twPm/gfJrhnFtw5xz3mtXVrXqv
lffLhbvXg3Ef2+M+auI+TsD9rcfVqyjj+npcXN8J9mEz7MNu2IfNsCf3uXt9
E/btNuzbadg3NdR5GnD3ehPspDns5BXYSWVcU0+36r12gN1bD7vXAXYP95ru
c/f6FOy2D+x2Kez2e9j5AZydz5fsrbcdznMgzrNpX4Pn2y7a/taHbSTsfwVn
/3fAv2hx/gX6Z5GcXb147WfCyIPJrPmhqYbGD+JpvO7V6VaKcztR8HuNhL+r
D38XDH+X92nRpagj8VRP58NFvYx0duOSVWnxfTllYLwxxq9jfH2tBLvx1jHs
3ZJWlSfWZNPMvOIOkxT36BTkac/J44f7W4O7vzsCltLgyBy29MuiEvM24aTb
wrj8yD0ZrYXdKOPshg7s3kfO7vnArh7h7OpurD8T6+tg/RDB33EwxL7KsK9Z
2Jey3ttHp2q9t/J+NefqwJV5Ob7fCOye933unPx/ykWqPA==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{393.85840600339594`, 328.5466167433478},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-0.9974949714460597, 0.9974949714460598}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.9503877182799771`, -1.4746856833275324`, 2.339078853688221},
  ViewVertical->{-0.5513905574413027, 0.41690570206100763`, 
   0.7226050710821147}]], "Output",
 CellChangeTimes->{{3.969024534008732*^9, 3.969024558743352*^9}, {
  3.9690246007837257`*^9, 3.969024613863113*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"02f43d60-544b-4cc4-a1da-1cc2b9ad61b4"]
}, Open  ]],

Cell[BoxData[""], "Text", "Input",
 CellChangeTimes->{{3.9690236672582493`*^9, 3.969023669382545*^9}, {
  3.969023702822013*^9, 3.969023703419405*^9}, {3.9690244369967813`*^9, 
  3.969024440062018*^9}},ExpressionUUID->"9108ccd7-e2e2-41ea-9fc9-\
de52f7922218"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ParametricPlot3D"}]], "Input",
 CellChangeTimes->{{3.969024633546341*^9, 3.9690246414018707`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"53478e5a-3557-4370-a1b6-fdf0702618e9"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ParametricPlot3D",
              ButtonNote->"paclet:ref/ParametricPlot3D"],
             "\"paclet:ref/ParametricPlot3D\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"z\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) produces \
a three-dimensional space curve parametrized by a variable \\!\\(\\*StyleBox[\
\\\"u\\\", \\\"TI\\\"]\\) which runs from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"y\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"z\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) produces \
a three-dimensional surface parametrized by \\!\\(\\*StyleBox[\\\"u\\\", \
\\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"v\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"z\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"z\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) plots several objects together. \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes parameters \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ParametricPlot3D", 
                    "paclet:ref/ParametricPlot3D", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ParametricPlot3D.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ParametricPlot3D.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AutomaticImageSize", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AxesEdge", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"BoundaryStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Boxed", "\[Rule]", "True"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BoxStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClipPlanes", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerLinking", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerPath", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Evaluated", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExclusionsStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FaceGrids", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FaceGridsStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NormalsFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotationAction", "\[Rule]", "\<\"Fit\"\>"}]},
                    {
                    RowBox[{"SphericalRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TextureCoordinateFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TextureCoordinateScaling", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ViewAngle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewCenter", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1.3`", ",", 
                    RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}]},
                    {
                    RowBox[{"ViewProjection", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ViewVector", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewVertical", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "78", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "78", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ParametricPlot3D\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ParametricPlot3D",
              ButtonNote->"paclet:ref/ParametricPlot3D"],
             "\"paclet:ref/ParametricPlot3D\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"z\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) produces \
a three-dimensional space curve parametrized by a variable \\!\\(\\*StyleBox[\
\\\"u\\\", \\\"TI\\\"]\\) which runs from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"y\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"z\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) produces \
a three-dimensional surface parametrized by \\!\\(\\*StyleBox[\\\"u\\\", \
\\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"v\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"x\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"z\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"y\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"z\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) plots several objects together. \
\\n\\!\\(\\*RowBox[{\\\"ParametricPlot3D\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
takes parameters \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\) to \
be in the geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ParametricPlot3D\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"z\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) produces a three-dimensional space curve parametrized by \
a variable \!\(\*StyleBox[\"u\", \"TI\"]\) which runs from \
\!\(\*SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"ParametricPlot3D\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"y\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"z\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"v\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) produces a three-dimensional surface parametrized by \
\!\(\*StyleBox[\"u\", \"TI\"]\) and \!\(\*StyleBox[\"v\", \"TI\"]\). \n\
\!\(\*RowBox[{\"ParametricPlot3D\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"x\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"y\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"z\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"y\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"z\", \"TI\"]]}], \"}\"}], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"]\"}]\) plots several objects together. \n\
\!\(\*RowBox[{\"ParametricPlot3D\", \"[\", RowBox[{StyleBox[\"\[Ellipsis]\", \
\"TR\"], \",\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \
\",\", StyleBox[\"v\", \"TI\"]}], \"}\"}], \"\[Element]\", StyleBox[\"reg\", \
\"TI\"]}]}], \"]\"}]\) takes parameters \!\(\*RowBox[{\"{\", \
RowBox[{StyleBox[\"u\", \"TI\"], \",\", StyleBox[\"v\", \"TI\"]}], \"}\"}]\) \
to be in the geometric region \!\(\*StyleBox[\"reg\", \"TI\"]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/ParametricPlot3D", "Web" -> 
      "http://reference.wolfram.com/language/ref/ParametricPlot3D.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> 
      False, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, 
      AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
      BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, 
      Boxed -> True, BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> 
      None, ClipPlanesStyle -> Automatic, ColorFunction -> Automatic, 
      ColorFunctionScaling -> True, ColorOutput -> Automatic, 
      ContentSelectable -> Automatic, ControllerLinking -> False, 
      ControllerMethod -> Automatic, ControllerPath -> Automatic, 
      CoordinatesToolOptions -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> 
      Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, 
      ExclusionsStyle -> None, FaceGrids -> None, FaceGridsStyle -> {}, 
      FormatType :> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxRecursion -> 
      Automatic, Mesh -> Automatic, MeshFunctions -> Automatic, MeshShading -> 
      None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> 
      Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, 
      PlotLabels -> None, PlotLegends -> None, PlotPoints -> Automatic, 
      PlotRange -> Automatic, PlotRangePadding -> Automatic, PlotRegion -> 
      Automatic, PlotStyle -> Automatic, PlotTheme :> $PlotTheme, 
      PreserveImageOptions -> Automatic, Prolog -> {}, 
      RegionFunction -> (True& ), RotationAction -> "Fit", SphericalRegion -> 
      Automatic, TargetUnits -> Automatic, TextureCoordinateFunction -> 
      Automatic, TextureCoordinateScaling -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, 
      ViewCenter -> Automatic, ViewMatrix -> Automatic, 
      ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> 
      All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, 
      WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`ParametricPlot3D"|>, False]]], "Output",
 CellChangeTimes->{3.969024641767744*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"c70f31ea-0d46-403c-9329-735289a522fd"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s Plot Helix ", "Text",
 CellChangeTimes->{{3.969024645509101*^9, 
  3.969024693341976*^9}},ExpressionUUID->"e9e752c1-bcbc-46fd-92c7-\
8e7c7b6f4bd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "/", "10"}], ",", 
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"20", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9690248494249*^9, 3.969024853685183*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"6fa70a46-dac1-43ed-a2a3-be2e347a1ed8"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
IMlPMSwwQ7loDaaf5NNlimShWHSIaWkGB8cbeWd4KtfgUB4f2cihfOT+9ktN
cT8Of292Ry41rEHCN4fMltm/aC6mWDugHoetW+uspR1r0ByApA6MliCPC9Uq
Nvk42NyVon4+sQZh12eqH2dXIq9FMaT9GQdT1bzRcMp1qPzKariINaNbaTs5
DAdIfKnWrW5Kvw5HW9qE05pakPQba1PbESLMqK83y7Csg2r/4fRH261okfyS
AUUuEfS1pIr7edbhpMtVk48POlBTlvXFz+pE0DTICzl+Yx06j0sk3yfdE9yF
P0x7SffG3bd5KgFO6xD47asFV9UIUpemj1bH5sHjfXedvsc6vBluCNNQGEUs
TeTWYoQ5qLZfvy7usw5/W5hqdhpG0c2XrAlegXNw46OUcHvkOiQ1a0ZdaRxD
yu8eqfVNzMKVL3kMzGgdIkvZ+p7kTyAansbHLbozcCYsr9Jrdx3OvX1Kpic0
g5bWjXH5lQkwiOiW0aTegDWl88c8/WdQuVhCyw2HCfgdtZ51jnED+Mhb37xa
n0HDGlW2KlQTcDpG6lcd5wYwdpnY8+XOIqoP5QqzDOPAlpr34YDMBpganmiO
ZJ1HY3/nxs/TjQJNSZ6U6/sN8ENuFxs1CShRJX3mi2UvpDEeid113gCTxXR7
3wgC+sNxvpnncg881jA5auu5ATN/VBdYBwmI8ccLSZa9LohbO730KmwDbO2+
8SkoEZHEkP2ku1MH3LnwJfFB8Qawvv8zHn8IR5OuAqtC3U2w+H6CvbZqA5o1
RlPrJHBUzTW/4CvbAEE119xvNG/AtWW5HacnODovvk3fn1wLs3r/9CRGNiCB
j6o79AeOGrod3OVsK8Av415b6swGyOzcztxMI3ni3i7VZk8pXNmPw84sbYBu
m3ryUCWOYjQq88wti+FLiOZJDopNONvZVyk+jSMX+cfdO1NZIDqT6+l/cBP+
Czh77dcyjphvGCwZyqRAnwTzFiPLJugtG7h7b+HIV1mY7VfcL3B2MX7pzrEJ
V59Llm+TvO8Cve3YT24fONda2UXGtwmKZO7WUyROvSvpm8Yi9QZ1cJ2We39+
EwKv/HR9QOLU4ZbDa+EyIcje5H3WP/FNoPE+e1lqncSjau+c72bHIb6CDm7T
q5sQEcl+LYKAo37tT17dvBmogVbIZ0puE1zfxEe5jeDozEfRL/HGuejNo897
z+5vQvm2ZAuxmbTOqtJgqoxCxBk9btKrtglcNScj+gtx9CqxGU96V4JMrgXJ
NxhuAjvdAVn5zzial+89fze3EjFak1Nmft6EVyPXLtdtEdHIkxMiGgdaUE6Z
huU5v00Ytv4uFt1ERHEGmYERD1qRFlPu8O+QTbCIqNrliCSiANVY/R3/NpSS
ZPQ3MGkTVpn6xSkkiSjpa2LT2+Od6MFYu7VD4ybcZO6mUZAhoNYzP9zCqfuQ
z4PYmTvMW/Dp5ynZyxlzyIvuRtuL2FF0KZzscdnxLbAVqmGSV55DWa6CwfWi
Y2hk7mmlNM8WkBupuNgsziKmsqZR0aIxJPrp8K+LYltQpM3i/ohvFuXIC3nU
1o+jjr9vNY4+2gKntXA3PeNpREjgYnRomkTHBO82DQdtQQBDMKR9HEeRtwoG
97Rm0RxtJHNN1BZ0xb9/8YJyHCm/Nwm8WDSLSiaXVdPjt6DA4svFuy5jaCx/
K332+Bwy+hnS75S/BZIea3ldDqOoS1V/cKh+DhWxz81w92xBj9xno7DiIcSX
9e3LANMC8lu7ev7gyBbw7A64lcYNokkBAxYHjQVk2OFrvjy9BfGKJzSOfBtA
lj/46V5FLyAmn8trZetboONybeWXch8Cy3H6A+cISJ/2M6U+2zakWxB4nYo7
UWC5zmAmOxFdmhy4pXhqGygYUp+S+3cgiQlny11FImIsF/4iLrAN3NxOO56G
7UiOh3ZH7wMR5X3oYaKW2gZ3DYbHwnStaHNNSseqh4gOrglwxaptw5u180cq
X9cgzW4qOp5XpPPbbqfzTXsbyAS+JOdQV6FXk71kPW44ys5o/m1jsA1xebEm
XgHlSDdOitUrEkdaprbnbttsg9YGhW3OsyKkYSx+dLIWR6J3682EPmzDj6Ox
dd+t89GtTZ9ltz4c0Z49lcn2aRtcmGUR5+csVLKn0sc5g6MBmter+1+3oUz0
h6CvRApKHg90jCflNX2i6tJMwDaUc7+0PqUWjeZ3mkYESHl1Kzth3xK+DZ0P
CbuJs34oimvgVggpr0+jzFB+zDZ0F+kT+tTuwoujfHL7pLwKfSij+JmyDSK/
WJspI/2hejfwjxppPJUm663POdtQw/XWL1n4Nxz/lt8QtYmjnstGny2LtkEo
wZxn7nAqXBPyWxpcwlEKW3HDk8ptuKh7qZhvLQtaaDMnD5H6zeP2FyqCndtQ
EDt891FDEfQdootVqiH1uYw/P44MboN17531zCeloL3FpqOfjSMyb8a+rYlt
SFaO8fheXw6fVjtqLMNxlKiQ87x+hfT+dU6XmSXUgNN8a4KzAY52S6nMTI7u
gLNqJfdn3lbIbldmbuggorZI9QxVzh3gKLwqaKHSBuk0AZ+34kk5dkhekeHb
Ae4ilcjAj+0g2+8vIvOeiJQuq9oxiu/A0Ou4VPGeTugcUrxIf5SIfqdHe6Sq
7MCXe500XsZ9MGfSzGbAT0CKkTeiF/12wKS1+sPtz6OQnSMQpFcxh77UtAw6
h+5AnMPguxS2Mdg9NCa2oj+H6pa02Y/93oFO1js3GX6PQfZjFj1vijmkcNPu
6+WcHdDc9Pazzh0HulOFBGaJWXR7NsvWuXsHaNg+R98rmQT20sddPm+nESbG
r3iUcxfubtnPRmvMQhzzzkax6zhy0sz6FMtHqi+fya4sm4UtOtfc1u0xhNyu
l166sAt/Dz7CqATmoJPPPb3cYgxd7dGS1Lq2Cx88UvcSp+bgenIb0UV1FF1x
+HE69vkueHnovHx3fQHepV1+a3FwCIlX065KxexCD23VEyYtItzVvBCnJd6B
3iwGCNWl7EKlttrQO18i7NKWCi4R2lDmcT4jzdxdiD8dIGRTRoQdWbp3L2Ja
kbAJNuxUvQtmDJK/mU/g8HYmY5f2ZBOyCGg6ztKyC8p0/quxGA6WL/Xplpzq
UVqxpmpMzy64TWVYFOrhcPEHV3vFaA26wPyutnZ2F8oLbb4pR5J8s7Zq9Elo
OTK9QkulubwLG3ysLk15ONwnm/iUuVKCkvUCrhG3diGA7L9bfxtwCEoaEpUP
IvGaF+87J8o9EA9hdjw+hEP7q4bKDdk8JJibkXWEYQ/kR79JT8zjEOrhnsNA
yEBGw0D8fXQPrtzswk+s4eCrXGArcyYBxR9oOiN1cg8mGZtt/u7gAL1MIhzT
YWhaRFOvln8P3mDCR2pInFp1PEKQbM4BCWjMhWtc3IO22QCjq6R6BbOY2fik
Jxi6vu0hSO6BE/7Fm3Mbh8e0hYGv0n5CTAoNixPsga+S+/oLEqeqyd9p19ZL
hoku/3tH7uwB5dCY4wkSp9Im+ecc+ZIFfGS8Hr+V9mDP6K+JNIm/Yznb7sqR
eFz/bEaZ5JM9QLadL+uqcHg3+IQ2VawYfinDbo3OHlzS0HWrTcdhQjSQrq+0
lMRXGlYEqz2wa7HV43lPqj9QehZKXw3Pm2aTHe32IPGEupzzExwW/53FS0nc
ErluO83sugeuQ0nu2hI4PMBu5NPebYCTCv6akgF74FmkUxU2RjoPcvl6Y8Ut
cAJvuOWYtwdHD8WKFLAQgW85LW65txNCfJHOLNoDy3SpqZgeArDW/5I+fqwb
Tohn2qvU7IFN3ocz6iEEOHOb0az0Xg9wvgvMFOjdg7JmxtBzRwlQfq2u73Be
H5yk1OVq2dqDdb3I28/H5kHcJSKP2mAYTrOtr56+tg9Mz7g74xZn4JKp7GAR
wwRE/Zll8ry1DxIFJ92H3WaAeBizav5G4kzNgXOr9/dh86YbmSX7DNzN6bSN
PzQJPD9LdWqf7QP2Nby/RWIavnjqdLyjnQK+c16Nlh/34cZmYeyIMim/vvET
/w1Mwxngjimr2IdqeTuPXe5R0Nm4V7xCMw+Joywl5xv34W4PN/Oi3wi03U7/
GPhsHgRdafp/dO6DQ5H/JXaKEWj3X5WUyyHVa+eZjKf24b7/EzWf3EGQEPpd
HvZ4AQLPahTTUZFhonz1Si2rPXDr+5Gme7YE6H7fUX/tABk2uFDj513cDfZW
h5Qf5xGAreFe72sGMiwv8gNfsWsXcHdM7wiuECDQDFsZPEqG7arMsC7RdcC0
Skw3qz4RgrL4BTP5ybBbYR0OU2uN8Ox4R4M2Jw49VJFS02fJsPcxuyvDBvVg
vnpa/tgNHNjV2OU4L5JhIyrh/uPtNeC8fuS2sT4OwRsHn3+SJMPqXsdo/hdb
DlcZrz6YjsChT97VtPAKGUZ33654hb4UHhZt0tKScnwidPf94jUyTJ5RRb17
+C/c/cIS9YfkWSFXFwOe3ibDDrccppsxyIRd88T+pjnSPN9eRXvfJY33m99X
v58I1j8+8l5cJc0zMpZe8YAMO6IrWXs0KBJudVR9P07K61MRzeJNFTJslPXX
d47TbkAlccLUh5TLUOfO+ovqZNhw127ylWVX9Nop+YEfqd7ffr9XT5MMy76m
1PLfx0ik4C8vfYo0Dwd/zVTQczLspniZw8SNRNT9St1bivS7GjbXVxr1yTDz
7+7RQjqZyKG65eAAaZ2h1QXklK/IsOLE8tzFiDx0IfK/BsZBHJZH0t/hJmQY
L29107bjX5RjyPiFpRGHO1uxS/0WZFja5unk82klqLF1R4mzAIfV899Hs9+S
YQXsafWhHpWofvGT7jVPUv78jEsNPMiwj18X7uhxN6NRR+ejBw7iEJekc1nF
iwxTpHbSNSppQYN2dj8NSbncrXicAT5kWGvAsfM+xFbkkmN+cySPCInrsj/Z
g8iwLdlz7zPkOtAJvRrGC0+JQKnF+bEujgx7oFQdfmWgB3lWpfrm2BPgqc2R
zdwkMmyDc0FTYacXcQ1FVGpeI0C69wHL6DQyzJBMi272eD/SefzJ/ebuAmiX
rTy3zyPDBFhMGF/eG0TausfMiFYLkC/QiF2sJsOiE82tb9WOIKHbd2gNr82D
ybIDmd8UGSYYYbSViibQRGKV43fNGSinf/P2wxwZZmpzKlFIchK13rkqk7w6
DSf4jRaNiKR9d3vNmZk4if7Tu/jT1Wsaqh+rjciukWEeB73SfL5OofTO76fC
sqbgdNHFklVqcuws42HFb5dn0O8YOjv3mQnodB92fMJPjoG8kTItzzxiyGE/
sbs2Aud+dq7LnSXHkk/csVx5PY+EPn80O2U5As4F9eaiF8ixnZJV4Xvl88hz
LsbFpH0YhAh5z+glyLHX5kN7vE8XkJec8cBM8iB8VvaBopvkWP39YwkxhgTU
O+NlRrpM4OrJ6/un9cmx4s+TulU7ROS7/vvR+lIz3NHssNJ9SY456gbQevLj
6AnF5n/jmo2gGmo4FW1CjpX/R/ZwSAFHlJ2UbD4VdWB8/Fvjf9bkmOTHU1mn
PXFEfdvxuYpnJdiqc19/+Y4cO1Zml3EgFkdEhT+fd+fKwCUwOzvBgRwzv550
2rIIR9euTz33uVMCocf6Q89/Isd0X93V+DOKo9WtlU3x3RyIUzU7bPaFHHvK
f5gvgIij2gvVnffT0iHzO7lL2jdyTL2sSH2W5H3BlqOnuVEsFLf5ry36kWM3
pDSXskme2L6h1nf9ShDUMZ8xEg0kx/IlCPLrJE4dqolljAwzhE6lwsHXoeTY
ZwUXnnQSp0acdAo1VfFDo973H+ZEkmO/iLcjh0mc6huTLSveEI0ITaMVa9Hk
WJ277Z1PJE7dWPnr/NEkFW0wWl+6FE+OeT9RPhgziSObD0DId81GVPcOJL9L
JseOvKSQuNpF4umhCfuFlj+IySv0VGE6ORb5wMZeqRxH9uHj7nInEBI4WEZz
7Q85FrFyiHfJD0dnm2Xp6For0GOaw52ydeSYT1BJuekBHF2qVlufvdKMdOV+
3XFrIsdOB7UzCA0SkfhLK56/Uy3IzFXib1UbOZb4/OLWp1QiClSMpeW/2Ibc
KDSj5ftJ+0sdX3b4NhHVfn3qUp/bgbL34i0fLJBjf8PG5s8rEVCOllGNa1Iv
KrkqM+mzSI7lqSx9u3OQgCx6JliWR/tQvX2zetsKOSZXI2B1sXQB3XtHk2Jw
bACNb63Co11yrMYVi3nHv4BS/TqEhqyG0JH1G4c0DlFgd43G56hr59D1BrME
UedRZIEPJBoIU2A5r6mdWlyn0T/7Wd9DWZPI7qIFV7w4BaYU2H2DjWkaKb7x
d1y9OIXcTSn9Zi9RYG1uCa9ag6bQuyuNWS/jp1Dk/Nl3JtcpsJSQK1MdvyZR
YAu7a/H3adQ0bXPbSpkC4/5o1RoSMo5YIeJXqcIsOjfCNOHwhgL7AEf0GBWH
UOhJ7VeLQqTnmD5dZvOWAuv8l5OQJTqIePvPdNW9W0DmROEoc3sKLC+mgO8L
6wDyYC2Rmy5ZQFk7Spo6rhRYe6yFuURXL5LeMWKsv0VA0sd9O276U2CS+4Wa
3y91ouBDoRbewkSkdfpn5tUgCuyyDUG5mr4DvRegUarVIyJHgQwfyTAKTIv7
NwfjYBuSOdZOwepPROUSrYpnflNgzi2rCzfetyD6m4Y+nfNEpKjMXEmfTYFF
7WKmfHLViPKxGJWDLY7Mn3BHU+VTYNtHDh7ibK9AFdd0sH7SOfJ5LvJxt5D0
fgwNHxx5VoYuSoaeFkrCUafZw6t4OQVm2Lvp1ztegNYybf6ktuFo3VqHY6aa
AvsrbTTjv5yDbr189ruLlMvjDpabI/UUmLhypJDYfjryfYgFLRBwJO36sbu3
mQKbLw2f0Twaj07VnjHG10je6umb09ZOej+ZpxMplcIQfdDKtaEdHDn6/fxe
302B9fLbsQnMOiHvpzof80m5/BmcYVnRT4EpOtw78LT5E/gHcC44kOrlUaUP
ioYpsEr3TOOOG5Hw0L7O9SJpnsm41gu54xRYYfDhH/ZfE0DmBXV43SrJf9NG
6dOmKTAOLilXr8IMeEB81Ka8QMpT7tJs3DwF5n4kKTAmNRdcW3kP1QzjyLSC
OTb4HwVGsX/x0sytElBbjv7zgdSfvOu5Xf3WKbCMnT8mtn/LgM3Ez6Y8DkcZ
bSK6ntsU2KPd1aJLwpXwWIW/Y/sbqW+NPORyoKTEHtplnnjOXAcWE79vP1TF
kcOu74/nLJSY9N/+Z729rVDaKXJ9ooCIIql+vXnCRompi+oacB9sh6XeQN7j
X4molD5TWZmDEpvqoDzsf6kD+KOWhzQ1iYj6RNuhm7yU2OvesDVX7y74vfiI
yLtMQF8lj7gLiFFiyx3rB614+uGrAOc7ue0FlHaV58VpKUpsVSZoYg4bAGKZ
9XnX3AXUelNU9rg0JXZVnUM6SXMQrvn8pNs3W0DHVJT3D8pSYsRpfvUAz2Hg
MjNnruyeR+HmfrZEZUrMqf3cFvPYKFCJhUTrfZ5DqfFHXuZYUWJabgcr5ysm
wfRrzPs7b6aRWye6TmlLiS0ymQgMXZ+CUP0/Uj27U0iLwpTjoR0l9nn4133F
v1MwSZH1tsl1CjFoVjctuFBip9m5u/UTpoH/VvpXfs9J9PKwvQRfACXm3jsx
cExvFhzeDewcshtHPDaTFN/zKLGOtLOaG/ILcNT8cpbe3CDa/OU3MFJIibmd
Kt7rClqAOUZ5WpX8AdTSDLkXSygx1oL0yXcTC2BhY8hE6dKPHM+GvKqrocQe
RAokzlkS4K91mqPI4V40MHC/hbyPEisYfsAcReLU0JoO1XSaDpRFt5PwYIgS
08tKVKoKIgI57sPnWdyGvkgmuISPUWK+P/2XbWqJsD3Sanj7TSu65EMpdXme
EtOm8ivSOU3ymgRV9C+rEQXI5odb7FBi9g0bEgPROFir7Xm08ZUjE4sXtsVk
VFiSyKmA1kIcbnXbnRl9X4Juhh95yEBNhbVv/DYTbiHx35ChJ39EIeKoQ4JP
6aiwb7Xzb9ZGcDim8kb3lWwuWl4zoYpnpMJcHlqVcRNJPCoe23pmKh3V8p4Y
WmWmwiTO0velr+NAE1p5ZY8xDkUpVefJslJhRwm0cb92cbD5Zk19KiQIvXV4
4+t7ggr756busEbiVE6VJyP1SS/Rg0Ru42EuKkw9POJ48h4OM/wOSm7mfvBf
d9PNC7xU2BtpiZ/lmzi4v54Dqc1o2KW057IToMIGv57/dXUJBxYb8rxX+anQ
IXx2o+YcFRbefZmFYxIHp2dWH5gLsiFZq6uVVZgKk/MKVdHqxOGHGRL9cawA
XL64JOmLU2EKwUuCNGUkz2UUnRIwQ/A0T9gt8xIVdmyMrpYtCYedoQ1CgE4Z
HGD2vHT/OhXWvct62skKB9MbGt1M6dUwcvXSkTA5KuwwzXEYVMJB5RX9BQuV
OsgzmpyflafCQhyvLaadw2GcO9Sl818DvKiASDdlKszAVw6qu4hQ5mAuc/1Y
K5TZrlAX6VFh1McyrylSEmHvtBh5oFgX2A9ptZ/7RIUtPbKzMi6ch+69Cv1B
4jCs3L4a/uILFUZH+Bj0/cU8CLQkxdB9HgGTDE7DyG9U2HVKHS3EMA/5dVXX
u9lHQdO1f+tIIBXm4fKk+Y7yHMRuNa7Xi46BjOATnq04KkzxzAmDW4UzsBz2
J83y/gRsWata1tRSYZF+cXUUhydhPYSDiYfkl1bDYtIUTVTYuV1RsRCSf/6u
qzvL8GkG5u6wUMu0UWEzppqHV+gn4MKvDnqFpRno5WgLSuujwpxy2VXPkI3D
TI9Dth+ahfzSByU/5qkwBto4A+GWETjfE3uT98o82DLePfyCkRpzdylfyrnU
AxJatsVxEQTAbQR7I5ipMZl/nzYd97pg/sPEDvkgAQxH6KJ7jlFj9N9WrGtK
O2FXmJqOg50Ialk1kopc1Fh70+7pZ9fb4ZKSA4+FKxEkntzSFhOixjpW23SW
lRrAcdor6YAEDill/GdMxaix2SxH/2N/a8H01TvhP+o48J+nXo6Vosa2fV5U
GvFVw6vC6dP7b3E4ul/udgKjxpr79QoaCKXA//q639U0HLxeRj9QvUmNbT5x
m+yMKAYTw5KzwpU4ULU5H/92hxrLe3SC6q/2H+i9/PVpcjcOK7+vp5A/pMa+
3h1kjUxJgcHshd7LyziYHOK2lX5Eje1d/vNF7nQ0wHii7J0tHCZsya5bP6HG
TMymipK5faE0X9uhj5QbzdHhg2la1JgA169Q+w1z9PDTB9pFUs7aFVDHjA41
dvAP0wvNU8HobW9duQcplwrZERE8BtTYqnUFnw1XHFKsebj6m5TjspMfXmoa
UWOLBWvump3pyOuXISZHyv0Vdy3RH2bU2DezadX447mo5UBAotEoDpmLMjvN
VtSYc4G8u6dGIYo1fh/C2oqD4FPOKjpbaixWWiz/8r0SVLoa361QhMOv8m1v
WTtq7I2URt/UXBn6OGnxhS4WB78fBbx5LtQYuZrkYs2pGlT+61GHsCkOljKX
7kb4k+oqi49HxFqRm7Cll1sbEfZN/R29g6gxzZGQtmbdNtTd+kUvJZYIXyMX
s5zCqDFWjvt9ZD7tyP/v09UFW5InUiRw6v2mxlhoMmxzJjpRvouIYiUzEcZq
jhMFsknrnz2UrPqmD1FEqXK+5CWA6qNtn4x2aizlU1YO9mUU3Ug0VCwpn4Ox
T48rf3VTY0RCqNk9xjHU0pHYzWgyBxb5WZvf+6mxrssTLdHfxtCTBLyxl3kO
vDhMdG3GqTFKKarEHc9xtH6yxeKw2ixUjA6ISf+jxi5UDCwzW0wiQ3LFfLx0
GiTMirsqjtBg7WK6vmQdM2juy0vri8ITUBF5gj6XlQajGY1lvyc5i/w4K9+M
ZY+DcqsNxJ2gweg/a5hI/JhFYrRHFvOkxsFMXCj+Mw8NVqKboZRzfw5xs01R
rkuNQdxW5Lv7ojTY2ZE1Kuef8yiE60c6J98ISJzfSQFJGoxS7qZaIT6PrA9H
ZepLDkO5lvqY8BUaTKx1Q/G+9AKyfHzkZAj3EAyXMN1luUGDDWZeQ/p1C0jC
0e+TF94P7O4fOXse0mAzu3z8odUEREN+XMnRpBti8geVah/RYFy1M0rT+wT0
c32GclauC8TnLrsVPKHBrjXvHtCQICLaY8WjEic7QeneMiFMhwYrb9zhiAkk
oj9xu4OzlW3gwaKHdCxpMO27bw/fvoyjK7v+ptnUDcAmh/4pW9Nghhe99pSe
4mix3EFmLawWYmw4ztx8R4N1/30UofMWR9ubNBx1ItVQ2tvu899HGszXTrvF
k8Sv1mw2AiyPyuABvXAlmxsN1tt1xSOqBEfVVqfrd6oRDMp4bR74TIMJ0TvI
ZJK4drefzLd5rAC2Im/qzvvQYPzP3x6oIvFrb/2rVDnmDLi6ftVPJIAGy9p4
zalP8so3v6QPWtvGgdN9qTLbYBrs9Ip7qSXJK39sCdR//B4MFTHCy0XhNJjw
9rwCkcSpYoeMx3c7LODA7lkeql80mABDnGUvyStzzsyuvj/rixRVeZUVYmmw
KP1AVbEtHJkdCSvnl41G3kmczj6JNJg1k/nbHZJX3nIZk36Jp6A2CtbMrlQa
jI8rplpiCkcM9nmnBBWz0bGnh8c4s2iw/1Fw3vFUfnEcj2SPe697r6IySrJS
EpVxTlSSQgplJ6WUUigpI5VVlB2yt4zsCIfskb2y93YfmWXk9/z+9H2d1xnf
8/18X5+357mPgYOB3xDOlbXdQRWGEQXoeiYz6VY+I3xnd8rnH86VtR4RYjnz
JegzM71y8ne8rtZOd/qmYegnc7Zpw94fSCh/OfpEBSNM16jPEHqK8ztQj9A1
q0ZHyT03NToYYbiEh+olnCubwdGwifFmZHu/zTfgFyMkrNmEWeNcqV4Yy1SE
c2X+j4aynn5GqMA3ISn6kobsRd/Yedm1IcXHSNBiAs9/9WKvFQcNnT8a1+qy
2YEuNsYNO68xQpLfdc51pnlE+aV+f3K2B932eHQzcw8TDHnkd27t1gyyk868
uX/PCEoavOu7to8JwjdT9E10M+jYO3LC7vgRNCdrVqYoxARtUnssSz9PIxXq
w4J/R0bRk/FrgnViTLDwiFTEvrop9FguhOWKwhhyUT49PCLPBMvUQBeBYRJt
9gUffSQ/gUI3GW6SjZmgQlSx8eUdo8g4Ahk/Q9Oo/+q/j/pmTDD2WoP1V7sR
pFH8JcDrwAwS+LJWGnWHCTa+2ghlmB5GySr6WdlvZlDSjRkByUdMMMAPSaLa
IcRgIBq3V2kW5eY1DZ1zYYJ09Qyyb2b60MulJySp93Oo2TrU9FkMvp+kkn4f
xjaksEH1TcT9v9hHwoZtAhNsTZuO6GhvQZmvb/lHfKehNxlugU9S8PycvPnV
NLoZqcnuHP40QUNytCd1VllM0E6keubp/QZkv+fBkttxnPs4ps3v5zFBfpPL
VT4btchtlV7JRgdDMxIm23cLmeC58E/8Ap7V6Lq58tBVWwyF31eXMf/BBKXO
VhNiw3+gvtCgpxNJOA96lTXerGKCr9EXbi7hUvTZykvDvwRDWily90zqmKBy
3khRq8535MFqfl6sBUMptWk7jRqZoN6cxuFB4zzkrxT4IXkIQwzTByL0W5kg
/VLn75LbmUi8yDWJC9efEXPoyeudTJDcGZnR25GE/gUmGxrg/JgvQmjT6WGC
CaserJHfw9EL+eKKdzj3EVTdrK4OMMGFtaXKc76vEcdy8fkoXH+WdzaZroww
wb2db+6H6L4B/zqZgj7h8Yq3T2I0Jphg/pbeebA/Algq6Wfb4vPsi59SuDTD
BK/BXXJCTMkgI6drTgZf91mFcZcajQnWHVPcZeCUCU4b/uv/hfNj82j7Y9VF
JrgtSkh8/CwPuLR+emSOn0tspzr7uVUm6FIfoHLj4XcQ9SGxq6MZQ2+EyhKU
15kgYu0XVT9WChoqlEOk8LzJ3UzrVaRnhizmorv8BCoBYyl7XuwH/L5cDjyV
Z2SGtyT4P4DAasDobhn8wwa/r8gQwilWZtgff+lSDFMdSDqhPNCKc2X4wNtz
MiRmeCnVjSdgrBEMM57G2jj+f95qnCEmxAyvCV55dUGhHVRq/RopMaAhoxft
aocPMcNWJrW7IpYdoCGz//NPERrKD704JizGDBNfuz79HdiJ++2TO2gL88jy
l+weQWlmaLjHI7N1ohtsOA+aPneYR826XK95lJnhco1MU6JlP2A6Jet/8/4c
irhSqstgxgyzvp5JP/57BFRUVFwOrJtGf6xlf9PdYYYDQl6B89ajwK4kPKvb
chppf0x9t32PGYbynkfltFEwpL0ZH8s8jXY1fSpdf8wMHZSG9gWMjQGr6Gux
qwpT6MGlx2K/XzFDgtaXdIf8CdDYeZGW4jmBTqoK/euPZobxCnu4CxemQS7z
qn5H0Qg6HlvnUR3PDKU6OsIPqs8AxvEv/XyKI0hy+wl3ZjI+PuGKAW/sDPAu
4JBJ/z6MBPPLD7/JZIbrCuP1buq4r1W4NzSRPYRYRW5fFStjhsZyaUrvHefA
39pTr5kP9iOG1xwD3JXMMF2g+/Wz8jlw7tOx98zsfWh7IPfuVg0zPLA4N53F
OA84O9q77/3uQctBjE7NzczQm1/vNN3beZB78Ra5MKcb9TEmJT0dYoY9J1cP
GprSgOywTpCrQDvqMtM6bjrGDDWaXs8e+kgD/oci7V6utqLmkj/FalPMcG9u
Ry21GPdJarpdX+taUOVTtba9C8ywmNquqsOJATD9PfJJXyMqbf1txLjMDDOm
/bQ+S2Ng9k1C0bsXDajwSOgUtsYMB08vqPy9ioEaYZusDZ46lDExs/Vjmxk2
yrEWTHljgJ+iO1WhVomSlf09UneyQDHCuRY73P/ZVUeQfQd/oLgIee4gJha4
KfmZjrMIAwHY48kQm1IUvj4a7szGAltCYs5lNOK+tk06SJq9CH3SfX/4HhcL
pK9uHtQbwMB4Lwj3O5KP/LJksrW5WeB56fQbjLMY4DtZC2s0stB7zn5FBR4W
eMBo+XXBMgbu3UkX+tiTgtws39YI87HAFKEvT603MCDNlPmRgxKNXKokr3Lx
s8BpMyVfMdxP3+Tvmq6V80YvhDr7/wixQIGd3g6TeDzl+6JeYaMNsHNyujty
iAXCM78FEnGfnRaZnFPv+gk86jm0VC/GAldvKBfe+4MBqf3oahNTArgn2+SY
e4QFEl41lUstYEC7rWlRtCEDmPs9Y46UZoE1Etfo18cwkO9ymFRVlQOMaPz+
HrIscDln/FVtJwbkiWwabvEFQDvBOslAiQWekEvudszEQMuO6bOZaWXgEv2e
4+eUWWBtZIX4nVAMmEb7HK7fXQFUjcuKj5xngVuPHuTru+D8PsxgzeBaBRSo
pDY6DRb4fVXU4YkKBt5u1xXQLteDg27ZW4lGLHBFcp0rC/fZb/kVkr6atQL+
EQMP35sssNNPJkTTHq+r+0/FQr3bwG4lBu4Xt1ngC2N9W7IqDYBPp4hf89oB
x+q1wxpWLDBkwKr2UN88OBBZI7dI3wXWbq9qL79kgaf2JYDtsTmQmyVR0+rS
C2rOnUqCn1ngzvCh3qGnM6AkJPvG/a1h8Kza6YhzFAvMZH/IvUWZAffk+a63
eowAEbWKnOI4Fhgfs75HPmsaUPtr0qVIo8D9kmbZ6TQW6CBl9OPCyBQ4wG4m
57t/DJy9ertHpgTPm1nmyILgJHjtQ1eot3cClJr6sosO4ffro3UpVGwUjPiP
7GKNmgbWI51+FmMs8Oy5x/yfo0eAXOtVNw2GGcBvvndPwhSeB7Kkry91BBhm
PKjOuz0DHC0ShQ/8ZoH58tVpAetDoFhhD1MN/yxQeFistI+eFf7L3PHQ8kY/
YAk+uN7xaA7kv5i2Jh5khTrHFxoCPrSB+rfSl//h/GKxdWRN8zArtByUnVFQ
bwVx3nvnj6fQAMXZ1tFHghU2LLIJjzC0gKbCwResv2jA1nXbk+0EK3x6xkHf
YrwBdOroSLhJYOAgwznCxVOssPD8o3QtjTqgqW0mIHQFA+1vvYI8FFnhBzti
lE5ONfAd20669ATXgScldtd5Vujmcsqty/4HEPlipAJSMDDEaiB69iIrvOu2
4NiUgQATy9MjdGUY+Pg+KsNVgxUKXLzIZ2tZCAofvrx5rh0DkHPiRJk2K6R+
M1A6JpQL7hhKlbDgdb3wQbxoW5cVtrG8EJbLyACZ9XUel3AdRBEfKysZsMLk
tB7Wj9R44PP35F32vxjQ9M+reWnCCnf++dZyZC0AFOqevHMB598t8qbG91us
kK5T6bPg2aMoPvQp9v93wtKCznT8tWCFhzz08y88D0RtK1Ft0vh4o93uBicf
4Hl2klLx04tH0zfvnRvGdckR2jD81JoVHuNKcBRZyECTnK962PD9FPOR7uba
skK/DZepz8q5aAfN/V32KM7p4Xq0JXtWOPd3Z3aTVyEiGf7O/tWGAV7+cFtp
R1a4I9ndlqcZIQ9aP9GlFAN1USPr1q9YIat36gzm8QOxWMxUJiXjvBxnxUTz
ZIVHlC54XqmoRqODzeHvHmOgRzjbW8KHFYrP38qTN65Dz813zKtrYcAj8Q/3
fT9WqHXncBlYaUDkE5enQsUxMJnyWmAqlBV2i6nyFbC3ICP6J3dWumggPjPk
1MgXVhioIJmjuacTGUteIAsz04DlhoFYdwYr3EMXoRV6pgsV98n60jXPg6Pn
9vM1ZrPCWpbXkykW3YjRT1R3Z+A8KO6O2Sz4zgpPdKlGpqX2IMz0SqA3dR60
b39BvvWscP/8be/jPIPoj5Qqw4M/s2CHRsm5M7Os0P+9F8XhyygKg1Lf4xSn
QXWwi6wcxgoT9hj2OYqMoQddPZOcvVPg/bCyiOQSKxz0S473jx5DHKUsvTxP
pwCPXTXzng1WWPE7I73qwzha1hf+KxE/CaQ+N9cvsLLBK3Ohz7iuTiJxvtIU
l6lxYDQzciVKjA2OHdmtuuPBDBJpUlS7yTECDsrEKwcdYYNHAnoXeStmEHb5
nUme5zCYcrQ4/l6aDRZEG/nF75lFzmXzn4wYhoEtcY5sf5oNyh3yFZ0pmkVO
p0YMv0wPgvcnV7o0L7LBT5tfZQ1G51CoyoHePPdeoOWaX3NOgw1uBRxR339o
HkV21/wxvtsDeBqeF8hrs8FQvfxZ6p15FCQe1ep8/heIM/kXKqLPBhmNOYI+
9s+jh4I//oZudIJCNybj7XtskN1lWpQthYaWQ4eOalxqBS7NtRorVmyQx4Ld
aKCDhgTlut+28LWAc7zvwexjNlgX2F5Z/I+GvjSMMt5qawLNaQTBruds8OyH
jl++qhgKiZ3I/UtXD4LXWok/HdngzXvb75wtMMSrduzV+cAaYHQmkL78FRt8
5Wfgev8NhsQXLcpOHqoCU+17xtI92eCdvTxPjudiSJNj+vHmmTKQtr+vPc6b
DX6wbEGstf8/tzjo8y60GNjejagM9WWDeoYT652/MEQn0BlxIf0bOJ1lmvcx
kA1+0wh3D5rE0JmAlygJZYMdm0KJbiFsUPn5JvnCIobueckkqkWkgepz48Ev
w9ng22PTn2f+Ykhng9RzvzAWvP+Q6PEkmg3q7zxj7ohzcbRWIJ1Osj/Q+nXv
+d14NpgcNrv+/3uEJnRXhH4yCSGeAxKWxslscOj1uPwTfPx6Nfhh/dsf+fm9
001OY4P/NHfHXMbnj3P9MFySFYc46GeVlzPZYPz0TvuPCxgqq2O0e2yZgTwe
X5QCeWwwr1u5QH4MQ5xTSRWXuXIRw3Ayn1chG1R82Fuj1Y6hS9wb9gwWhchZ
i4W5o4QNjnTyPG4pxVBEtdWu8u8IraO7y/zleF191B5Fyfi6VwtWn7n9QFiE
yM/cejbodeDP3II1hhycHOx3t1QjS073gh3NeP791iZPaWLo8YEVCa8ndWjM
cSJevZ0N+nnesdkSxdC59VYreuJP1GMY7zTcxwaRdKXpLrxOTKF8ypxgC6rm
PXCUg4bXJ1ehTwIdDVnV5R91VOhEyl6ue68vssFh1jB5zYp5tPHHc6eCI94P
/g4zx66ywQwrxtGI1/NoZPSRj+73bpTVHTV8cpsNtpNnQ7X+zCGmVRV6glQv
Cg/a729OYIerXsb5Q4Wz6HSThyJaGER2JN7V79LsMOM1570/qVNogUtQrsVk
DC28ej7CKMcOD3OLM5xVmkK/Z/NUiKNjyPJ3d+MVeXZoOF8e3dEwiRomqMtr
t8aRaXNw4qQKOxzsKTr5b3gC/RqP9HA2nkCXfSg3uHXYYYegW2rf/Biqtz+y
sSgzhQ6yEossn7HD8pO3Oe0+DSE68gtZYDiLIp9bJ+W+YIfyVovKBQxDqMuQ
XqY0exbxTjcF7HBhh6cfTHubDgygfYuj4QeY5xChxscqyIMd5s4s3F127ENe
VBrvg8Q5tPmWnf9HCDvk7I1sLw3uQv3Ju94R0Dx6tnKfjSOCHYo4XG44qdeJ
fM6IaGRszqMF8/o1vRh2KGzO4C1J7kCZV/JzaLI0NKni1Tyfwg7z2Znp+N1b
UYXyZMiJaBpqp2N23VPEDrPYtYp1UurQcIG679lLGMLSQoy1StmhV9Y+jseU
GtR1c6kswwpDrPri8u4V7PBxhh/7gmMl2m4815r1DkPKWRrLyw3scDFkhPXU
hVIU+t593qYY52XjoWbxFnzd16/kRHDudkn46S+Bc7cD65M0sw52KNF/Znic
mod0yuiuPBnGUGDeTq+QX+ywSZbJD3R+RdZ3gm6q0DD01SzwTnM/O3xj50F9
L5KIRmxGb0asYaiBU0SFaYQd3g5VZpCEIehL8iUN1y0MTRZ+41eaYId2Sk/i
yYXWqOWn0ev//+/FYHFx03aGHaoG0RcFjX4ER8z7ikf+/z03d1/3Fxo7lNvV
vkH7GwM21hp5TdYxdBpZ5Y4sskNuYR4GBpc0YLL6nMcc7x9697d996yxwyrp
IDkbuhxwmVfbd3ECQ97lQuru2+wwz0MzUNmxBBi2ZGtnVmIo6VGOSMlODviN
+em0Um8ZeKHMfmI8A+d9vvMMK0wccIxNnHHergIkeNfXJgdhaNPmXrEZgQNS
M19O3IirBSOP5fUXbmDI8uBXKSVBDrhO3dnRRGsBhTK71jvzaeht8xl2O2EO
+Pu3XbrtsTbgBSuzf7vRUNTLtqkvohzwuWz0PMOTdiARe1SrWJuGutpXo/dI
c8DIvpg+w7lOUB80eMRpaB6de6tIXlHmgEJ8Lk6SP3pBZG6uskHHHDI91rQg
rsoBJaNX2B4t9IHHPvIXMrzmkGO/6U8zdQ7Yr+X/3ptvABQ3WFyYVZhDOSfe
uDVf5YApiMC8cHwIqJo7nlP8NIsEJur+fDHngEy61SLZliPg3gv3GTXxGbR1
/nq/mRsHPLQi6thuOwHYHjjJkBsm0O6l6YIQLw542KrUOWt2AvRhOuPe1yaQ
TOSLoGYfDkgnfc6ebDoJ+hqVaWE94+jBWoSmUjAHVBER4pM+MwW81H6KpgyO
oZ7E8bI9SRzwtgDt9ZvRaeBMvAmJTSMon9kmobmWA+oZnPy7I3IOPBLctfot
sg9NvXw1X/KTAxY1L8X9GZ0Dbjn8c4JvexHv7w8yaS0ckGcpqlf20Dyw8Zpy
XbToQc6/Un94/uKAxzdNpR7GzAOeS7k3ZQ91I9WUiQHlaQ7of9l3XfQ5zikN
R4QveLQh+/0rwsfmOeD+dzEluYk0EFf+4tOsQStK8dtpxf+bA9I82GyN2mjA
UeBwR5tkC+J4IbCx8YcDyj10fLUgiPPmwW2v2pCfqENdnyeXmROSlN6fLg/D
gKBQ7D3j1XLEVHrXOJadE9bRBPLqsjDwRCK+V8GjDJ2WeRbvS+CEy/HaS+1V
GIjlTeOdOlqCHiS9nXMmc8IbZ3U5h7owEKH+ItZRowCF7w04/nA3J9zW/XZ/
ZhyfX8ZR4eu9HNT0McbBcC8n3DX2+tsi7l8l16TIc7sy0I5dmWUXBTih/02z
mTXc75oRr5Z4nYhH0s8R86mDnDCiLQf8/Z9bGV2qtauCkPn8T02Rw5zwGGcC
+P+5rc4ORNTeuIsCb/YFUSQ4oROvbCEN99Mv6jgTat0/guqOmf6dRzlhcrFS
zcg6Bhqhl1I+NQasq/09uHicEzYLPK5vXcLAh4V96+2TX4BECdODITlOmBd6
6SGaxkDl3+bXh3uzgJE0NbtRnhN+DuOMS+7DQHK20rXI0nzwMeHgehHghAeL
w5L8GnAOEf1b0B1bBJZ9zniEqHJCCoOMvUUsBq7xpVb1Hy0Hwju1mtzVOWHs
0D5hPS88z1TviaLwSqD3zJj6VJMTVvtJm19+iAFL/wtH/JhrQKHJizhtPU74
y4Vmc10SA7ea2f6d6GoArkdzS9ksOGHtsz0Pz3rQQDSXRCyTaBsgtB7+6+jG
CY/M6SXJ5s6Bh9vczLLn+4DyeTn4wAu/r9r2oTsP58Bg1i3XP8b9wLbwnLu+
DyfM1vcunDo4B87yn6Wt2A6A7hgzilwQJ+S3iL245TkLvvWNv9p7aQhE2Xw+
thDPCdmQs6f8iRnguXGjz9NwBEhRCJZmlZzwkmDJXjOeSXBj/PJBY5EJwJPx
PTW+lhMuhYqRiFETQED2Zr549ATYumCBTf3khKChJVXxEP53vG7z092ToO5l
ie2jTk44kBssdF58HPzJkPyttT0JLMYeOL+c5ISjT5yORu4ZBRFnQXZO6jSI
yq4NCGLhgm/1LN4fF+0Hzo+/1Z56OQfcL9t1/eLggrcCfu9n+9MLdlra9Vyr
wfU6KcC7j8QFrfIeRdWU9wBfSmypEnEeKPLZR8bycsHpM42vnbS7wR0HO4JJ
yDzodj2U8lWcCw4WZs0laLUB0t+9zIyuNFC6t3VuSYoLMvuy+L9kbQWxK0Wf
arNpIDHPUUpOhgse1v+xS/tHM/AJ6nUUHsH5d6Y9p1iBCwpoEqX33mgAlqx8
VD8ZDBC0X6O6y1xwfTHuRNxAGcjVEg2oysDA2uwRek5tLkgwcsUbdAlIGauV
b63EwODbnrNXdLmgwfuBtuzDBcBwb1ObXjcGqvnd3AP0ueBJd4Yp2q9s8PGE
sYbOJK6bgmN1XcZckBgRWzlHTAOOx4bpahcxEHC1n53vFhfcRb5o8eNBDEhk
kk3OxPXxct5D09iCC34NYyw+Tv0AvuS03uLEdWbuLuMXfZ8LNtrcfSxKfoYO
Cg7kDuDxi4JD7WOP8PwcdK3xIoehsX5FDyFcr0e/v+M5bMsF+Ws0pN4eTUK/
sj8d7lnFwG4dOf379lyw7tIhPjbLTPSQSUONcR4DO7CRz+kvuWCajaTseEEe
uk0wo0saxPnRw2fwtwsX7KsT3HOaqQipTxk3lDZi4KfQaaETb7ngPsON8IKk
UtT7RMxLuxADOUXj5vaeXHB04pHclno5uiDc4mQSgwHXBYWZf75cUHjA+ljj
uxqkGkUhrFrgOvOaklAO4oJZfImeVSL1aKqLJOJ2DgNaBwMevQ3lgl1KP6a/
l/5ESWKLdyP4MbDv+uwyWywXrL286Ctv24Lin++Msq+lgUIUsr07hwteliAU
hr3uROqylz7eXJ7H+8Aq+XgnFwy806mxQBhC1iM3rVJTZ8HCwv4fkj34vYs8
+tAYMoRqm5NDrAxmAaat+ujwABck8WzzkQSH0RL58Yon0yyYoX6q3TfBBX+6
X/gTIDaCGHmrp5f1ZsBgxCkn5lUuaJt+gvvQ4THkSI1wcuuZArf1SpZorARo
O+YdiP2YRAOHbl9ffTgObnloX5xjJ8Acl/H95hJTiLIq8KFkbQzcKpiImuYk
wKuG+WGu/lOozIOX2cVpDJjycWmMkQjw5+2Jn4H604hljtK8z20UGAyaJP3i
JcCP5Kpc9voZdM1dJ3S38zDQsqAzqhAjwHNaR3OqJOdRVYSrgN35HqD5KTC7
TIIArzn+tcq1mkc27zwNMKFfQKNWlBUdIUBa0YHdDSnzyN7LJ29jswuoi2vn
F0gTYIPM6ckbe2nIw0c3USGlA5zHYogZpwnw71Rg7q0+GrpiZG/iMdcMzgnI
3U1VIEAz6fHLmwwYUml9F2r3uAmoXKkvSVYiwC+xfg6BYhjabh/2aWb8CWD2
0v04ZXyfKq3a3x9g6I7FPonrojVA/tnZqpCLBJj39EPyqwacXzAp8sekInA6
qXtv8CUCPFES6lnbhyGFY2e9ZnLzwclfD2wCNAhQ8D3Pga1pDD05MnpnvTQL
yLHS1flqEWDsd0spvmUMOf1jDbYN+AJk5QMFPmgToHPk+RyhDdwXBi6zX4yL
BiceiD57f40A30uX7+TGfafK1wsnU2t9wPHw4p+eugQoOvGwaBaPd1xZn/Cj
e4KkG68cdL9OgPQc12tTcf+qkP3s2NHbn9DR7XGHN/oEKDnMaab7B9//4TKu
5gMJSOqoQ8srQ3x+4SjWaQxDezW+HHzC8hUducl52NmYAEfMPPxv4/zYrjft
8mg7B4mXy3Y8NyNA1Tf/dglWYKil7p/8r7ESJLZcJ/7MnACZ+Xs4buF+FFSK
3EqaLkOHhU1cbe8Q4KF1fenAYJzr0/S2D5tUoEPu7lKPLAkwbeGFVpsxhqqo
xKBdZ2uRXaeMk9kDvN5Khs/7KWFo5lOjR0pCPSoXHmnQeUiA5eWn71jyYejW
C0PuEsZGZFahYKnwhADrButsbBpoiG9iNkHEpAWF0y3GsTjg9cPazqLDTkNs
u3erOtN3IspLQ944TwK8SBeqEMA0h2JNU1TvDQ0g83qWe8HvCHCRNZqD7vss
Cs22X9DAeTCbNz/fy5sA3Zppfj33ZxFh75moCKchdKWAqPPYlwANsg8Z/66c
QY1P2/im3IaR92rVB6UQvK54yR5ehtPIhuHyZf/Xo2jX42O7fiURINYKGdn5
JhBLom+/5IFJdK104GpDCgFWThMunEgeR3eqzbER70kUy/U+BqUS4C1qzzuD
E+Moimly22J1Ep1JnwAJXwmQyS/8Sp3qGDr3bNvxe+kUcpwNc7D5RoDq4wPm
93RHkGevy423p2bQym3GBY4afH6edxHran1IVv0lt1rOHDqbm61EV4fr9IOK
Q9nRXvRK8eXkzNoc8me46b1cT4Dsa4LDdJQeNGfJS9d3ch4di/0u1ttEgCuX
3Bavd3ahte184YCseWQ1ZH07qYsAlweSozVBG9o43qNd/oaGiqT254T9IsDe
c+SIZnIrkv1qlHs2C78H53r6D724juQ68mOnmtGzA94X5nC9Ju87FGU3iOd5
lrXLhOcnirry+UGEKIbG9Xt7lCcJUIiNxjr7phzZn5sLPhqFIS5FvUTTaQJs
vy962G+iFGkfKz+g+g1DJ/nbbJxm8fj1A1dK3xehJaOGwnFcr2Z0mvDzPAGe
ojXwKqrlo8/3mvlYBzD0brSOvRAjwL0Lx5mO7MxCT88u3MmaxVBu5flfXb/x
/cexPLr8NBn9Tv61r38FQ4OJP+JXlvA+WaFImKsKR8bYwgHPTQwxeyk94V4l
wNMpI6Zr8q+QxAHrklxcl9IPCpWO/SHADXVSaz2PJ7j1/EWAGR430JBl01wn
QCpdxUGZniiwb6d4xgdc92+PZnU92CRAlkZzv/AHX8BahudzRbxPZJCOxHn9
I8BUxYfxO/9lAfcQz9IHeF/pXk62TtpBhGEVtV1xKt+AZOh81v5eDNF3CStW
0RMhg8Pe+gi3YpB47PDwtVoMiRdEs4wxEGGBkjKv1K0yQPoupUjMwZCzY0gM
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
afPGRYIjsHJN/6LkSponR9llKZw+lHrmuNRqgyE4mO/2n1EbiY2lO86+TBtC
D1iJMdOWfWDosqjiegeJmelT1UnSw+izJrcopLEXzOSjGIVfSewDVj3PQoaR
QeC+iwWHeuFMaF72hj4Sy01sZLqbjSAVh2X6Bpt7IODfBfzZMRKzni1vXFM7
iiIFUy2ZL79CqGgEbbNJHJi0ILB5/RiKdvJr03DvhIgShZv24yRuDVD11fEc
Qyl61ute6nTAk00HlOt+0H0WawnirOKh7R4ee44Vt8L7mVu2z3+TOOBdfaua
DB9tSLVIiUpqhNJ02cy2BUzcOYxU15vxUbiQi0yjGRdqbDP/iC1k4oy22Dav
W3ykWd3wMFmoAVqruLFeQkzsfyGwdRfFR5nv/RanWHOg28d+NGMZE6sEiYdE
r6HQnLPwPSOJzzC0dUprYAUTz/RN6+/9m0J5USynwtPV8OuRVJOhGBPL56Wn
2l2nkNW5N8elp8vgt0Ga4nVxJg68Tik3JVBompfl+QZ9hMUL0eUCCSZWCHQI
CiqgfRg0zC4OLALht5ySbwwm1ls6ynHmUEgpYeXJwrACkHCyXbWBycSWBi63
Q+k86OJhLK8o+gakZCetTkkxsfVRo5x22hc+PkSU88IyQL4hKD1chonvcuJe
2UxRyHxUXJS1+jlsCibmy2SZ2LN6pyn5m0JqTN87vySiQGNXypFZOSZe3fvn
z///Nxd6ZpSYB+R++B9NT7kD
       "]]},
     Annotation[#, "Charting`Private`Tag$168443#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{378.96680199659613`, 353.0405344070292},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0., 6.283185178951315}, {-0.9999999905384033, 
   0.9999999999991779}, {-0.9999996519478712, 0.9999999691979907}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.7290302243965301, -1.5756097312823203`, 2.9044739466217973`},
  
  ViewVertical->{-0.27658938547701223`, 0.38256252437424604`, 
   0.88155784086233}]], "Output",
 CellChangeTimes->{3.9690248541923647`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"42acebbe-f85f-4e41-9ce6-c12cb886193d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "/", "15"}], ",", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "100"}], "]"}], 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "100"}], "]"}], 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"20", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9690249090479717`*^9, 3.969024937194668*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"ab816f14-c469-4e80-b1b1-4d1a9074fff0"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
py92oyOpGvW1vHbQ/iGonneLwh7r1rTozXSjo/r3rcct2iG2giDX36HwKtXi
lsJjPWizmLJ0WnEbGB1QbFgWz+d/o2R/ngkbbRQSLe4Pa4WcuL3mvx9Q2M3r
2lW71l4ku1E0cHz2A4gccl0f9JDC818GWT1U7UM3MlLLPew+gKuKj+h3BoXD
GDsjzSL6kK7ktbzvDk0gUxNRzU2j8NGbc5KxihyUZnRYN+1JPZybe779TTaF
vfamnJpZyUUNZz4Oq6rWQNc7WG34hMLq9ZMWcoZclMpIHkt9Ww2a9+r+FuVQ
WO7Nyd9m+7nowtzH34+c38CQRj/zUR6FF0533a6K5iIG819HMrIC8N9v91fn
U1iGefmzeCoXnXJO4dTKlENS/ezZhAIKdxYkjNkUc9GQ4Zo7F8yZYOUlrR9d
ROGMKYe4gS4uKtpw9rteSAlka61cNr+Ez9O8JkT5IxcNN7A/5ccVgpDghp8h
pfw+BueqjkxwkVu+VLhERj44N2l3Tr6gcI6AlnL6by4qjLJYr+fzFEruby/2
fUVhvRivvE5hGo3uUTIPi3kE0kct7nx8zddbsVN3hKRopP2lpJDxJAW8dfef
cCmjsORo3j4likbZZryGhBv34O38/2xZQOFbtQ6FO6Rp1Bsk1UzfuASrW/w0
bSoo3BD8NGUvH1cPDjqz5Udm2f8AAGti4Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$170351#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{355.2082778773065, 369.7184772622784},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0., 4.188790119300876}, {-0.969111267364734, 
   0.9999999871763509}, {-0.9540096890344332, 0.9844414284084377}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8437197616840392, -1.1803595846724009`, 3.0569409897176336`},
  ViewVertical->{-0.1854673919771572, 0.3168142850999635, 
   0.9301777009097727}]], "Output",
 CellChangeTimes->{{3.9690249150261803`*^9, 3.969024937674738*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"65728dd5-be8b-469f-a3d2-7575122a5781"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "/", "5"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "100"}], "]"}]}], ",", 
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"20", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969024696257163*^9, 3.9690248160006857`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"72990ea7-a121-4a06-a840-076c60917477"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$168125#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{251.7195186125874, 511.0958313169434},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0., 6.704009020145646}, {-0.9999999905384033, 
   0.9999999999991779}, {-0.9999996519478712, 0.9999999691979907}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.16172687849431386`, -0.30167145493701786`, \
-3.3664281887556533`},
  ViewVertical->{-0.7933825740631412, -0.5417013569455323, \
-0.2776755859925632}]], "Output",
 CellChangeTimes->{{3.969024730688656*^9, 3.969024816941483*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"6f817007-396f-4ed9-b283-5337800325ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "t", "]"}], 
      RowBox[{"Cos", "[", "u", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t", "]"}], 
      RowBox[{"Sin", "[", "u", "]"}]}], ",", 
     RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "Pi"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969025261403*^9, 3.9690253940688753`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"6126dffb-df9f-4f21-9d55-eca17b27ee33"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
8Rwmeeb6vhXXpbO8Llzfs3Ade8nryPVdLyd/9XrI3+qwGw67+uvbETj1/t6V
/vJz5oeI50QZz+yvF/ZFG7kvhH7/Lpf7iP1tgn13U+479tcb+7SQ3Kfsr15O
/ur1kL9VYNcLdsnfVcBpDpzk7yHEc7SMZ/b3E/JVZZmv2N/lyHseMu+xv07I
k0dknmR/TVrIvFpN5lX2dxjy8BGZh9lfvZz81eshf52N6wL7uwI4FwMn+VsB
+cpJ5iv2t0aJQk0N6hH72wB1zU7WNfZ3HupggqyD7O+zN7JuOsu6yf7GWsg6
GyLrLPurl5O/ej3k73zYTYRd8rcRcI4ATu43bM42NahH7G8s+o1+st9gf8uh
b1Fk38L+Vkef81T2OezvIvRFOe9l90Xs73v0UXtlH8X+6uXkr14P71+dXfK3
PHC2B07y9+d42W/4yn7j97kn+slCsp9kf0+jL/0s+1L2twf62Auyj2V/rdH3
Zsq+l/39B31ya9kns796Ofmr10P+9oTdi7BL/p4Fzq/ASf4WRz+Z42iyoV98
v7Da+D5CKYjn/3/HnDe8HxEVip8I0Z4nnghcVXCKej9H62vcK2umzSkeUGbv
Dg65zfNgZodWR2jnadPsFnVfr/43nWfVxPqDWE/nWdbQ/8hYv3jdocFs7bme
1dLnZk/V+yqyW356GVttbu9m4upR2hwp2Z28OjMrKHeysqn16hnaeRfZrYD1
t7Ce7ObpKPWPNdYv3BsW/V7fY7OybfXpH9p9GNktN31hEW2OrUA1s5wnKrxj
uyEuA1uKkCfKg1omKdq5HNn9G+sLYj3Z3Qv9t4z1i4EzT1k1Vu/3IjsdvWlo
9908h+x66tdbngeS3Qmn7YzyEdlNwfqdWM9zpNCf09pIv1DmJdfQ7ldvnOi9
64kBzzlP3z6rzRP8XcVi23EDf1diHozOR8luLqwvj/Vkdzj0pxjrF0/rD6im
PRf4tvngkkkGcbXId8Vrbe6h8sWkA2sNrm8zzK1Z4JyV7C7WrSe7eRtI/aZb
jPSLEtXk85ehTm5Oab6TLTj++w+30+YznLLPU3/HM83XdcZ/k91CWO+M9WS3
PfSvMtYvnsHfT9Jfobc7UuoReruW0Ku3OwrryW4++Fthi5F+YQX+r0n+2e4S
8FZJ8sZ2aV6xLc6Pya4n1ptivf76vjXWL8Yj3iJkPLPdvIiTcjJO2O5axFUg
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
rnelppc7kZX1TukcUOHmuDwxXO9WWdY6eCbprWLhd7yng2cE17ufbQLiGq9N
VoJsHbuunnGX613/qLQ5KUvilA5Dru9+9eA817ugdxlZIbsDlZi95TOPbw9i
nGPcK65x6xuu5Ph2tr+7+pdwPlzf93UDj8fKBIuEnI4noxlnetKbgQ+SXykl
zzeLS3VMYpzx/YZXP5b0Smlk61r0uPqXcG4zS5n2LCpeie3pWuPqxTjG2Sxn
4ePbfj1VvKtt+Md2XSTjbGjbemHKvsNK1Q/TTsRlXWeclVLNO+9QeUwudaF4
QdPf/dvcYa0H+be8rSilP0y/NeEF4yx3q9qERaPCFYvKdsvXm/3u3xJSB0WP
UnkMEpPKnlV5JZx7a9+1bjU8UtmZmHI7ef1rxnljxOmKfzULV3q2S8930vQ5
47zq7zjG5pKfOPElvaHT9t99pqVHvz6FPuwVJ37F3ZxhG8M4t2b4Lfw7cYcY
GO7qUSLwd5/5PadPW/t8oeLLlvJuJT7+xul9oOOtuu4XRdrHy5W05+uEM3i6
e77zsftF/umi4PE1bxhnyTfi7l+JO5REm4zlmn7COezaxX7rEi+LJ19cyh8Y
HsI4b9r7LVxT9Jb4OWrmkmeXIxnnBds8+fI3Cxd567suOaH6SzhN987a71Dn
peh9Ov3rqU3JjNN3TdjubtOfiwq2I1yG/5XMODfb1hi19cojETzsUurcbkmM
89ezZOuLLW+LiSlnO2jXi3CaXg7tU+xJqHi3ccKANWb+jPPwu8XnVXxiaIhb
4uqitxhn8rsf3Xx/PRVhfS18BqrxQzitaj2ZUWzWW+HhdTDou10s4ywctWGP
ik80MhuQ1HX6c8ZZ0nzVzIqnE1Rc+80q345lnE7rzm9p6PFYDJrfyXysGv+E
s/WN+Z0Pp94QLYfuty3jtIRxdnrdPFK93uJSeq+p+T/sZZwZ5ceuV/ejqNs1
x6IX6n4knAMHr8/5ZeB7sSf4wOdCZkcY57xWzeqq11t49poysLbB+XVrq0k9
65i/Ed2/zHG9F3GVcZ5LHLtPzSei2TTTeqFqPiGcBSLbPFXzkjh3++KR6xVP
cx1Z86rTZzUvCW/nHl/U/cR15CT0VJZ6uI6EB3kW+JX1TvxwmVrKJU8M15F1
bw9/UvOSKFZv+sHRnhFcR772a/53k7XJotnFYZ1XzLjLdSRHBclDGckD15FK
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
Gqx7m7rvMMuPYN5gkJw3YD3R8Gu29IvXP541/Yp2bj12eWlr7Ryb5LcxX5Ep
5ytYzzNjnnn9UZd/ht6oeFqUOqj4a+f2HD+YJzku50lYj8OJh3cNrjuvb/fp
/qxiTkuUk5bXumtzCiQviPmZFDk/w3rOIQ4fyDjk9flzPT2+2sxfyVihzNXm
MjgeMC9UQM4LsZ4v2Bd15b7g9Tvicr7aPzxE6b+g5DttDoXkDti/F7B/KW+E
Yf8ew/6lOatimKd6h3kqkjtiX9fHvqa8nYm5rL2YyyJ5Eva7NfY7ySNwzusq
z3k5rvYDvyLxs7wF8sNj5AfCMwn8FMI8Fcn//iD56YS8QXa/wK4P7JI8GHYn
wS7JYzDH9Q1zXCR/hfzzE/mH5Hdwzh4nz9kZf0Vc36/y+rLcA/mqI/IV4a+B
+EnD/BXJkxA/75HHyG4G7P6EXZKbw27ZldIuyW0w92WNuS+SJyAfRiEfkvwR
5hyeyzkHxn/FOP5ZXuQfmT9XI38S/sHYXwGY1yK5K/KqD/Iq2c2C3Vz3pV2S
H4HdKNgleSLmxCIwJ0ZyV+TnhcjPJD+OOZNWcs6E8R9Cfigt8wPL2yKfpyOf
E/5HyD8FRsv5LpKnI/9Uri/zPMcJ7A6DXZbDbgvYJbkX5srSMFfG/S3qRUvU
C5JXxJzPQznnw/gfIX86yfzJ8mqoL51QXwi/P/LzOMyDkfwT8vNR1B2y2xR2
P8Muyb/B7hzYJXkHzKHl8ZFzaCTPn0/Wr9IFZP1iOeasLsg5K0VfX07I+sJy
X9S7Hah3hL8/6tdNzI+RfADq13fUQbJbB3bjYJf5h927sEtyO8yt1cTcGsk3
o546op6SnObcKsj1Ql9/28r1LB8A/JdRfwn/dvi7DfNmer8+oi6T3eGwWwB2
Sb4FdkfCrp6HWMy5kdwdPFxDfSd5ZVzfZDlnyPhT0Z/Eyf6E5RcQb07oBwg/
xWdHzKeR/Avi8BD6BLLbEXZzyLhieQHEVQkZVyxvhrj9iLk4kqchbt3Rb/Bz
VOzHx3I/Mv6R2I8l5X5k+RPkh/wyPzB+K+STH5hnI/lP5A1TmTfY7jrY/Qq7
JJ8Fu61gl+QPjPMMyx8izzRH/8N1GfnzuMyfjD/auL9l+VzjfM74w9A/r8H8
G/9eAH0U8jzbzXPBKG+zfL1x3mb5W9SF3LIusDzjo1FdYHlR1Lvqst4x/jOo
d/6y3rG8NOpvBvo3wv8P6nVXzMuRPAp1+Qv6OrJbBXa7wi7Jn8BuNOyS/D3q
eM5yck6P5NVQx01lHWf5RfQnL2R/wvgD0J98kP0Jyx3RL5VCP0n4G6K/+oD5
OpIXRx81GH0m2b0Hu79gl+SxsJs7WNplv9B3HcJcH+NH37UM/So/R5on+89P
sv/kvtcK/Wdj2X/+jk/0n96y//w9j4f+s7vsP1leGP1tJvSTv/fQD2dgfo/k
Y2C3L+wSzu+wexF2uT+E3WmwS3KaG1yPuS/Cs3KxeWWtX+kfWT26u8F9Fv2O
owZ+J0s8bJhdK3pMhJelnYV19daFZ/L7zV4Wc5urPa/3bNXYSvv9LL1XcmCY
5+CHk14qPg6/Fk/UfoeK7+5ZTW5yUTs/6HZ9ygntd6n03b0OkHeHnL5/NwR6
fKGHvn+XCrtrYJe+f/f3x3zmOXsstrxRfm29XOpfwtn4r7cu2jlEavrxLtp5
E+HcWSz0lPacuebOqR+1eR7CmfeF1WXtvHLQ4qKLtPMRwnnnS6tT3+1fKQ2K
um7Snh/z9+J1cnpfWT7oGQw9/D1Q2K0Hu+RXW+D8DpzkV8Qw/2MtVN4D7/cf
Mjbi93vmZw07mnlH9b/ziHnfND7Ir7Jx7azHqXz1SQw+pvFHfr093XffT5Xf
V9/719LOucivh7cOh34vFqVENdh8THvOTX6RPBpy8usd9CRCD/lVCXYHwC75
tRA4+wEn+TUo1vo/37v14FbJ7PdUh9rJ7xySXx3MR2d/H9lZfn+Y/fq24u/s
93gv+iS/o0h+lbJMMNfeF9xtr/zuIvk1+2yiy3+/l/Xp/v96L+scrNe/l7U0
9NtAP/GTBjxLgIf4sQb+CcBP/DyHvw/gL/EzC/zo3/MzaEGv//wewVP87q/e
pPV7lva59fv9bJtzz7tnFSpCo9z3GcZJGfzOcYhH5+mGcbJ8gmNO7XdrLp8t
YtsaxMlT/K6z9sfFwwzjZNDkv/trv9Nr+jKrsvb8j/i8j9+xUh4hPgdjfTOs
Jz6fQb8Z9BOfXsAzHniIz4rAPxz4ic/8W6S/4fCX+EwDPz3AD/F5P/t3XzMD
vuZvkstgfwk3nKO5jTo6Rv3LfJbHnE+TodGn9xrkEzpXHdHhV0XDfELzURXL
Pcl6ZJBP6Jy0yIC0rO8G+aQA5sqqNbm2UTv/JT7p3JPOq4hPmkOrjvXEJ51j
FoV+/k4x8FQCHuKT3ic/BviJz+rwty38JT7XgZ/14If4TMn+3d3igOF3znjl
/J2HxWOcM2bV/lhWvQ7Mp/nWOfe0c9OBGTFX7hrUETp3/uQfMXS8QR2xmdE1
p3bOF1LMbkCWQR2hc+SZ08xXpal5i/g85vixh3bu+KtoSbfjL6KZTzoXLo3n
6cTncaw3KSbX8/eIoX8W9BOfPYAnFHiIz2HAnwb8xGcX+DsS/hKfmeCnvJnk
h/jM7a6dH3gFfOtwbX7L3/VXtBulPX/3Ckjdb6HJOW9ZQH9fqZ/f90znyCkS
D393uDvwX5X4+bvD5O9U6S+/f7Ud5NMgJx56Qk8Q9Oh5+Ay7xENX4BwGnMSD
o4NDdvxEHWqhxQ/7VQFx2FjGIftF5+nDZdyyXxTnFWScs1+0LwrLfcF+NTLe
j+xXa+P9wn6thl0H2OXvTRvvF/YrLLuvmhlQ//3ynNp1I78KIF8Fy3zFftVE
fhss8xv7tQ750FnmQ/YrCfmzlsyf7Ndr47zNfm2AnnHQQ37Vg91hsEt+lQLO
+8BJfi3aZuNtUK8Z/5w5aa4G9Zrx77EoN8CgXjN+b9HE0qBeM/51kKPOMv69
0IM6y/gXwC7qLONfA5yos7+vS/DdvhfU/VY+YN83bf9RXrJH39Jd9i3s1/cX
Rn0O+xWFvui17IvYryvoo57IPor9anW80M5jan7ZlBzvquUbyktxZyasidPm
HNdH/DVBzU+Ul2j9ZqynvBQA/U+hn/iJAZ43wEP8/AT+QcBP/EyAv4PgL/Hz
FvyYgx/KSxe/tT+u9aWr3vwYYhDPou/Ix+W0euA8sn+mVh+Iz9rob9Nkf8t8
rkc/3Fz2w8znz+eyfx4l+2fmMwj9dmvZbzOfX974d9Tq3/ULLywc1HpIfNaq
ez7RV62Xu2y6JGr1k/j8ivU3sJ741OsnPrOAZzTwEJ+bgb8N8BOfdN+RI0P6
S3yOBz8LwQ/x6V3CM/v+xc6iWP1cv/Oe+NXRy13rV469a7Xnktq/EJ9PcB+0
V94HMZ99cN8UJO+bmM+2uM8aI++zfu+7PplNtH6racjQyukGeb60XaHPB9X+
bPndyvVPqv0a8WndfdFcrZ+za2RZ/5Xa3xGfZbDeC+uJz3XQ3wz6iU9z4HEE
HuJzAPDfAH7iMwn+Hoe/xGeVTpKfW+CH+Ozvcyf7vnVF9D3tvpX5LPw+5tKq
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
WB+I9aTnCHgOlDz//g44rou7vC6sfzGuY3t5HbmPmoDrfkded7ZL13cR9PD3
wmD3NuzS9T0EPsEbX9/RiNuO+J4Xyfci/nfJ+Gf5BuyXYLlf+H3mx7D+ENYT
nrbYp2vkPuXfr5fHvi7nm72vWX935IEMmQf4vZ0JyBthMm+w3SrQUw16yG5X
2N0Gu8TDn+bV/9T3jnlg2rJPk0TlaHRo477qX/5u2h/63v3oV3fovt+07n27
Sb4qnkd7qk9VrzPbfdKucltn1V4nJ9HqV9bv9/Tq15P+P/XDN1GPzujeh7m/
v/LlZYFlAXcKy/eGEh6bal2yzx+v1pbvHyU8j27k+s/3EuvXE56D0H8P+gnP
QcThsS2fKxn6G7L+eqr2PRVRsc8zjW/Sr19P+td+i779X++XqxHd+pl6XYT9
w8PLtOtDempCPlrKf7//FvqPSP2cJ8OBJ0Di+eN6wnN08ohvBnxy3ovasquR
AT+sXy8nPcehB7xxPLvjusfK6856riJOusk4+f0+ZN160j8Ycesv45bX6+ss
rX+H/XUadZnwbMd+v4D6yN/5Mj735DrYx/icl+VFjOvF//l+U1ucj9P6cch7
t5H3aL0+TxI/+jpIfk2Enpuom4S/GPDYoX6RnM49m+I8kfAE684N+bsb4Ocq
8iHhjEX/UwHnXLQ+HjzfRx6j9fq8979+R+Ogy0skp3zSEfmE5I+xr/XvFQ9F
/AdiP5Jcv79ITu/xu6L7Xqp+3/F3lKD/CvYXyYOA0wbxTPqHwK8LiFuSe56d
scP2wFWlVKsEx0HqX35/1IzwZ0FqnZt/+FF9LZ6pvkzzbpE9D1NDnof8/r7w
4bVNtXogz+9+r9/zh/dGPi80voZqT5yM+xBna2CX5CeknHnYA/0bpP7f369f
UKe/AR6WBwP/Iomf5XPhbyXpL+v/if58h+59rX96zrwTehqCN1ofD7urwBut
n4x8q39P8kLw2Qx80vr98HcP+CR5IPhsrXsf5g/wdht8kvwvxFWg7v2QdSF/
qnt/Yz3IH+neZ5gO/bdwXUh+Ajh347oQzlvA2VL3Pr1iuF7wl9ffB2/euF4k
D0f9faJ7L9wm8N8K15Hf44fruF333jMr9C3TcV9D8UD95BX07ST/f85sfK0=

    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V/P3x+++NyNZP6NQKEJkZ0RDVIq0tDQJpZIKKSIV7ZKyigqZGdm7
YW/Zm+wysjf/19Pr/Xj8H4/v+3HP59xz3/d9732/z/uc1znnW6//sI5DkyiK
+hZRlOr4ehZFZ+VRdKKYP5dRdIfoY8XvIPoNyfSPo2iEzp2h1kv8FuIvF7+T
+G1EPy+6p+i1oltUUfS0Om0r+gXxe4l/ruj7RF+ta88Tfb/oa0QfLfpF0SdI
pp3ol0X3Fv2x7v+A6IWSOV/0ANE7iB4nuqb6ryN6oOhHuLfGdKGOn0hmiK59
VPQEtX3Ev0DHt8QfIP4/esZI18wWf5r4U9XqinWUjs9Ipptk6upYW/2P1Pif
ldx4nWuk47m539W2kl+hc7/p9wrRJ+h8L/G3Fn2z+PvqdxP1s0bnHxR/kfgT
df0EtXtFj2dMajeIfkNyHdSWiP5Ixx5q94hur2uP49kkt4XGvIP63FHnUo3r
O/FvkkwX9d1Yvx/UPbuK10NtpeTbSf5htc6S76pzj6jdL/mOkt9L8nfp93uS
fUi/LxP/XdEt1S4VfaTO3a52pegPxEsq0x+K3kd9XiX6LdHLdO1s0UeIbq12
v+47WmO8U/xZvE/JNtfvjhrDMvXXVHRL0W11vpH6vFW8t3XdXfp9ieTn6/xV
apeLXqxzDXnnkp+o4+eSOV10L9E9RG8lmTqir2Y+iL+d6GtE1xW9veiFouuJ
3kL0bNH/E10VnhurdO3m4s8SvaX4G+i4hcbzpPjrxD9C9HO6/5aiL+FekrlB
zzZEvzfQcRPx3ld7TvKniTdf9Hax3xnvi3fVT8++Su1U8bfU+cck94r4/yv8
LKsZg45r1F4SPVrXdRVdS/RQ0aervZL4my8q/N23Ziwa2+m6T3/1/bTaIPE3
E39D8V/UtZMlf7HapqLHqI9vRG8u+iIde0tuG8Yg+lLmqq7dWMd31Z5hboj/
juiTxO8nuqfoBsxV9fMtc090fx1PEH8X0Z1KXztQ8t1LP8tpoidJvp/ohpLZ
iXejsZ2lMV8o/nrJ7ST+bnwr8ceIP1H8Pvq9q/gbFR7D06I7S/Y90Serz5ai
Vxaez2Ml/51+byGZmoVlnhV9u3jD1DbRe2um4yPiHyf5LqW/1ymih4q+gfGL
3kX93KbfNyaep48WnqttNK7jRb+tsW0r/pWi64j/pn4/o3f+Jc8l/hLej/jH
iH9v6vXYXOcfUGsr/s3qf6pkWot/k+ifdM1Rogeo/3Y8k+ROFN1e9BGi50tm
jOQPisz7Krfe+0DX7Se5Wazh3OM5XvyTmbOij9G1H0nmQP2+TDLH6Np1krtT
MvfquJHOd2E9iv+Fft/M/JRsa/1uqnMfq23HnNN7WKLjBPV5hGTeU597S26i
+rxG/OniHxr5ui/1+xbRV6OHJHeI6Hmih0lmX+aJrmsjucPV9+XijxB/f/E3
U1+TUz/jZeIPF38/0deLHi+6pegHw3fpHvlZ1ubWn8tzr/G+osvM65O1OVf8
IeLvI/4h7Fs6/qR2V+712zGyrp+lVlP0L4nn42ai6+v8BMntLPov3jnrQ20T
jX+u2hY695buleh4sq57KPf86SGZZbl1y3HoRo1lf8nPUb8fiz4InYnelczG
ok+QzBfqZy/9PlP93Kfjr5LrKv6duXVRB9G3ir5V/Lail+bWLUczt0V/ouuP
Ef2H+t1QMhtpvHfnXsudxP9U5xvk3p95Z7y7O8S/VvQ4yTQX/T77ocYzTX3c
pvO7qg2KPKZRaoN5fh13En+46Ia6thHfWLyt1HYW/wzxN9C9bs6sQzYTf1sd
B7CuU8/Bk0VfUfg5ecbLC89F5uGmkt9G8v3RdZKdojGdJN51knkc20P8LdX3
0sx6j3XAerhd/N0Tr53buJfoo0UvFX02toqun8l+KvmYZxT9puiG6me66N9Y
4/rdW/Tvoh9D7/A+S88t5tWeqb/bEOZJ6W/Dd7lOx/PVfwvmqo5P6PdJzGfd
56ncz9tE/J31e5GuH6Frb9Lv87GtMusg9M/zkv1b9Fjxn2WeS2a06BdE/yP+
uaLrSv4OtT0k31jP2FXHRzBZCttgy5n/hW2elaJf1LX/ij5P9D6699VqZ7K+
xJundo7okTrerGsuEN0MXatxXi+5zpltL+yu1epnc9a7ZF5ifUtuPH2KPoCx
aiyH6Hg4e7boK3XdFWqTJfMy81byF4p+XXSkfqbq0FK83UTfqHu9Kv7d+n2x
+DsX3g/YC75GL7J/SeZ00Ut1bm+Np5Pu0VltA96PxvmiWgf9Pibx8WvGmVnm
uNCgv41Md1SrwbeOTcM/QsceiffNronvQf/bFd4j2R9n8w1F/6u+v9GYLtU4
92aNi35FvA1Fz6psF56oc6vFe1WtW+iPftdL5jAdj1d7S/QNuvY1yU4R3SXI
cN9mQYY9bmPJnKvWmLkkXne1d0S3CDS2xEFh/O+y1yS+J/PqCF23NLXt9Jx4
PdXeY84wF9TqiX5LvDfVBqi10vg3qGxHHFnZfhggumVlW2iIxtpUcv3Vhqv/
rfR+rhd/mPr6Wrx1wX7dHDtJsgeHtdBUrbF+N9exUOuhPhfoXX6v4/mJ9XMv
bCjJH6pjP7VhsXUaegodNV3yM1gvPH9ivYs9A/222kC1TPKjUtvt9Nk36P33
eDe8q8TPix+Df8Oz9Fb7WPTBOvbBh4k9hhPUXhX/x8T6aNOwr9XS+K9h30DX
ih6U2NcoCtv8yE4Othb35TzjmSDZxyXTXs+8s2Rmp/aV+A4X5P4Wt+m4JrGu
3k78qal1+0Y6jlXbS/Ql6vtxtdMS65Cawc5ZqGufKr1fX6rjk9g9op8u3efH
ahM1htX4MrpunOhJoiO+geh52Iuif9PzHxvW0XnijxL/Z927vtolqfesc8Uf
KP5X+j1GdDfsM2w50feKPkD91EGHq7WX/Fjxu2OT6fd40beL3j2zrfWAWjd0
u85NUDtc9Bb0pXaY6D2Yv6n3oCt17aZqe+qaZ/VcD+d+hwegw/gukvtSY/9C
bYza52qfqZ2tdqBklkhmYWr+6LCvce1lQR9ep/NbMp/V78jcNjr2+SWin5DM
EF0zX+fvFn2YeAvwscQ7KrcNhS2FH9RI97hC7TTRz0j2OfzPxGMbm/hea3Uc
l1hPNk2tC6YE/ldq56lNrexj1M/tB7FeuKYV+zT3YL3ouCR1Pw1S2xrsZVcn
nqfYDAN07WA9y7+ie6jPi0XHmb/fGZltrfbinyj+Z+LNwv/BDhT/GPFPEv8L
8WtqHJthayZ+F8xBvtE++CKSGy+Zn9SuU5+Zrp8s2dN0bk/sh9Q2YzPRM8Uf
JH4T0bF4f0l+Y9FHqr+ZakzLRPw0ty8f57a15ujcL3E4su9L8Fr8Fr5BuPbz
wL9O/D0i+0Mzgm4/NTWNDqwnmYWS2U70KeI/n1p/LpB8kZuPLp0W9G1vPd89
2KWsOcmel1r/7y/eTpXt13NEX5X7uTZCn8W2wbYSr3bu73EdvqhaT+YzvijY
hujtU9tf4Cq5ZGuozQ16Zmbptf+jjotzv0PWOeub9TVVvB9Kj6cudqvadTo3
pbCPgX9xCrqTtSn6ZNEnB9t7hs6fKvpA7Addk8e283dM7VuwNiu+ifitRE+W
7I265kjRPSvrw22wNZjDvBv2LMnX0rGzZM6W/JW5+78W2zC3X9AkvFv2qS66
9mG1+yLbHv9K5sHIWMH64JvU1vntRbcRfZP4u+X2BQbzfgq/xz2CXXpLYh2B
XX1rYpxkheh+kXEYcAowCnw8bNhTRG+e+Dp8wJ1S6yae/Wb1P6WyLwResSb4
HSdhWxVeJ9uG77sI2yLxcXPxN8/tKyzQ74Uawya55+Sp2Hq6toZk/lS7nM1I
x33FuyH4TdBLsKXY58K6my96Q41hI9G7BzthKvsf7zbxN+edLNG96uVe+6+o
j/Xif5fY9piS2Dc/PNDYIZ3V50OpMaiu+OW69y9hTweTwn44XvzR4v+KLak+
XyqNW7XT77tTY1bf6J4vl8a0OlbeH9/LjJGgx5j3B4YxY9uA52CDYn/WFG9J
YsxkpzCH+X2V7rlUMtcn7gOdiD/TS9euVHtC126g3xvmfo/txbtH7Ubx/8z9
7Bezn4u3KjWeg5+In4aPdr36nlN5vaFb1wbd+29inG8j1mZhjA98r4Pog3VN
M43zKbXmsf2LoyR7R2rccor63x+9I/piHffO7Hccix+vaw8HH0D/sY/wLcAJ
UuNjj8bGCHknk3XdvsFPac8alXxT7H7eY2w/4iL8x8x2dWvJjNSz3MI+GBuz
XM4eyrzAL2S/wM4v7UdsI/6hsX2NZqnXBuuihWRGMQ/BPdATog8W/Ri2Zmz7
/0z8Er6p2vLY57Hz79bvrRNf+wG6PbH9fLj62UPXNBb/MNEjNM7rdP4I9gfx
9+V6bKPMflAr8fcC4xB/FesyPMME/NnMPlFrXX9najxkTWycBr0BFjpKrRU4
Rmy85wHxZ2XWKeiTNqnXM2v53tjjGil6os7vmtlvOgqfQ2M4ILYPsqy0nmgq
/hnq/1rmms7tpTZC8gemntN8u6fFaxH7m96t457BR95C1+8T/OtJ6DH2dPY+
9dkYvAAfW8fLS38f3iV+z9mSuVD0rolx4Y90n78Tz8kW6uPBzH7viTqeBPYT
GSNdzvgl9yx+Z2kcedfCeBxYXF/WhNoL2B46lqlxvD/Uzo+N9YF5DcmMh6wT
XaXG5bDnhopfP4r+CxSA29UW+bvauNj8V8GidN+++v2a6GNF9xP9bWwsH7w0
07s8U62D+pqUGFNnnK9gL0u+j+h+6vup1HhmH9Y9e7boNwvj+GD4rxeOSRCP
+BRbBuxAMnsnPr9K9A+xz4Ovrgt4yGLRv6mdF/sZG+m6abmxozN1HJjZX8DG
HZQZC/pMbURsvDEr7Nc8FnmfAWdmr1nH9bFx6R/Vzon9fvA78J/ArrFjxsbG
ePGB8FvG6Pf7utefiWMHDfFD1e9uor9QG6nzW0bGpUbFHs/E2Pbd9pFtuNMz
jx8bAvsIe+bdzHoSnwScA5wcrIO9Z1LsGMo/ahNi36sIdg6+ya9q58b2zfdg
H1BrJPprna+Rei7NU/9d1R4SPVvHNpnxwJ3CnCWmUD+x7kRngkuAN4wK+uEV
jWlC5PUF1oCeQVeAI6BbaifWW2BQBxfGOFinB+o+92XWxStzY+P9xd9W8rvz
nkXX0/k7M8cOPoytS64X/6DCOAv6BB/hOdFjRD+TG3M4NTKusUztLL5vbN3G
enxaMneUth/AiBYFm3+NeIdWxlzAhP4qjQuBY/1ZGsv6n8ZyW2ZMba2OTXL7
JE/mxpAHsp/yTLl9ho6pY0vgt7+Id2xmHA/7CEwbnfZP7lgbuu4r9ih8TvYC
9pzK8Z7f0Q+590TwWnDb+eiQ1PGfOZFjSw+rzRX9Ov6g2jzmsK7tlNsm+IK9
qzLG/WvuGBljw3YjrocejgvH7B5GJ4j/kK65KzJGBxZOvI+41ApsF9Zm7rjh
rczJwrE/5tKPuXF+ML0/csfs2MsaJsaTF6B+xOuu8T0q+i/J/JbZnvw+N4bP
POys47jSz7MePD7s+Qenjjsx99jPjoyNR4FRjCn9e6rkD84cx2mnfs4RvxV7
i657IPW3eIB1lpj/LHZ07BjWW7HfM2OYpj4OzewnHqd+Dist92Zs/5HvOF3n
D8v8XV6LraPYp47XfR5Njft9Gjvuwbv9JHaslXf1qO6/Y+JnfLpw/BI74IPQ
D9+ou/pYnlpfdeOY+r2tkvwRku/CuNlPMn+LJ8RvVRpzfEr0kaKPR3fHftaL
JLM6NgaL/fNqbGx2YeT9HewV++eA1Jgf6wtbhTgf7wcb453cc499H3wWm4fY
4X1qkyLbSx/lfie/aFy9ctuZh6WOseE7YyMRj+Td7pzYzsIG66Dz96fGindI
vMey5+6hfu7ObEu9E3tOMseOxRdJjSc/Ezs+iV30Suw9lnlbN7FdcL7ot2PP
Q94VfvLwzPGOtqljsOwveyV+r3wv3uHPucczQ7LNMs/hHcQ/L/cesS52zJyY
19ex4+TE4y4gLqM2LLItgr+CjsKGIe40KujGBvpGu+n3eZn9H/aj83WsrTZU
9Dgdt8mMaZ+V2C4B97+xcLwMmrjYzYltc/Rkff1uyByKHUdFry4Wv25pPQYG
TgyMceDXRGFP2Vrv4KLUPuOZkklL+5PXx461sgcti43ro9uXxI7N9o2M/+8o
+fr6vZf6uCq1HXWt+PVKxx4aizc/tQ22t44LUtty2+h4cWr/Fzx/uPTVZnrm
y3Tt1qXjEwsK+yf4JjWD/0EcZ2TimCH8W2PH+tDJ4P9D1U+e2Tch1ss17Ing
LOzBp6XGrT9Ez4OdogcZG3ZC6T32ENG7lN6f7ogdo+abEoM4Hb86c2ximOia
om+MHVdhX5ura7cqHS/ZRfe5NHWc5RzJ1cgc27o9dgycb72rzs9Nve/cEDs+
xnwgFkMsk2drqPPzUu9TxGW2Eb+2+KMz+0v4Sh8Xjitjg+HX55IpY+eEDNE4
U8lNFL9maexjV/zU1HGQDVLjQ9gVV8fGCTqFdzIrd+zvTF3/T+p43yjRf6WO
rcyPHddiDCMz48LNWS86Tk+NMyzQ+Y1jP/tVOm4YO0YTJ7ZHsUWxbxfr+j9F
vxxiBGDz4Njn5I79/Zw4lp4yfwrHlbHxwPx/1+84Ns4EVgXW1D4xZro2ss12
DfEB0X/Htv+w/eZnjlMQc2gr+V9jx4vBi0q9qwodKnqT0rjJ8MQ5BWAas7EX
Sq8lsLofU+N1s2OPhfcwLPP4wH+w+75LbftdGhuHA8/ZSrxJqTGc/QpjEOAP
V+HrxqYvjz0WYtMjedbSeBCYTy0wbfYFtST2d5mjYxr7e02TzKDSuEeNgH8Q
o5xRGKPhWRarbRY7To2O/D61nqyr44zUcUAwq01Ly51bGGcBYyEhKU9Mg4Od
pvn2G7ap2szU8cQc7EKtY+Z4R0u1wbF9ohG57W18n8GSOSd1fOdU0WekjgUR
HyIe9I+OP0SO6eAPnR18IvTzt4XPjVZf30f2bc8W/V1kWx2sYJD6HJE6nkNc
h7hPbfG/Kvzd8Z9GBx+qnc4fnXj+nBV77jBnUp3/OHVsehMdx6XG7i6IPX/x
y/ALfinsWzTQ8fvCPgF+Bjx8Q7B8YmPg+XV0fm3he+HHvJvad9iFZyo8X/E5
hqd+Fny7L1OvHWwJ7E7snLti29HoavBU4mfgq4NT53p8EDnn6sXEvtcg/Eu1
9yP7ouRhrQ76hBwRrpmcOCfrRNFzM+OA2JDfxI5DEuN4u3DOFTKl3vHZaj0l
N15th8z7EX4f+V1DJfOR6G6l58CVmeMl9APuCLYL9viBZLqWjqOBSzUL2NSJ
Gu8zaq9JvgbzRa2Prq/AwYjdi/5Q1x5f+tn3FD0993wGVwNfA2ebnjhWR//E
6A4K72q82l+R59WFov+OPB/whf/OnZc1MHXO0RuRn3dD3eMp0b1T2/XQjIf8
GOwEbPqLEmNifdTHALWnEuP14Ihgjz2CH7EirBd8BvyFtbHfK/7yzKAPGgUd
+IXap1xbOi4PBv945hglmCJxyCbhGVdmjnuC8xFTI562Rtf+Kvql9L9wU9Qq
nPuEOcqaKKxLT9bJV1LnJhEL/q6wn/2bZF9N/0vPi06RzOupdXItHc9PjS0f
L/5jmTGFU4g74Ickxi0+T+3XE0PsU9rnHiz+mtT5SzviLxb2nfH9fyvs7/Kc
yOKb7yXeX4X3kk113QWpcX58ZfZz/N/GOv9PYeyEPnuXzjnZLzGG8V9umO77
aWo/+lTRb6X25ck5WV/YvyfH6+XEc49YJLFQ5nOSuG/WPvPtj8K4BbgHGAT2
/P6JsRawkTaiWyfWOfO4NrZ9Ag6Dv4TN3z91Pib2CXEn8E9iSfgmn+S2Xb/L
HKPCxma9kOvGs5DHMzv4+O0ke7Rkro2MjxIHxM/vIn4n8Zfx3grHl8Ga8E/x
0/DRjlQfczLPefzKz3LHtshDmhXwulqF8+d4LtYrNPMNjCgOPia2+buxbfje
6qNnmOdl7pgKWMghum5m5rysW0rn1YCdk6N1SfB3wCrIvwSvYI4z19EJrXW8
NPN6waf+NjfODJ5KfgbYBL4W2CvfYkblePgP+M1ql2dep/hOX8R+//T/ZGYc
/s3M8WBi2W0z60F0IDmYLVPnYRI/Pjb4JuAM4AXYpW9kjj2TM/Na5pg8MX10
FO+O9wYG9lVsHGxvdFXqnBAwaWJb+Es/xZ5zzDfwaXI7waiPw27OrHPQw8eV
zkedFtY+MTJ8R2Lc+Dkvp17v6I3nsJUz2z28J3BP/C9yJ9gn2R+vDvvRujBv
yanDxno7c64V8X4wT/Zt9t13dK8Oldf/u6KPq7wm38a/r7xfvi66beX9DHuP
fZ79nZwccm7AmbFPNisd68RmuSLYLW+Id3Tlvf93tbMyx+bYI9BtxFyIrZN/
Rd7zm6LbVd7X8ZXJwcNfBpPoFvzrRWE/ZQ2Tb8z+jn7AV34/tj8IXpoU9vEH
a4wrMseg8bnBfJg7+PH48+zF4LqtS+cJwwcvWBzmA3nb5DqAdYF5gZl0Ee+K
zL4k/YFf0A9xIjAT9o83UutYdBF5hB2C7/xJap2JbnywNJ7zJPMttX5Gh4P1
8szooNWp9Tk6HGzgvdjzFkyXPAR0InGka0rHksDayQ3ArwYLJ0cLX/108f4u
bGuC9REvAVevcsfV2NeG6vyfhW3TJpnjGfjsZ4j3b2E7+EIdNy7te+Drvxzb
l2fORKXtKuZVUnpvZl5lpffmRuqzSWpMkjxwcs2JTWMLYi8SJ5pTOI8WP429
jT2OvQ/sv05iv5W8gWWZMQ3G3Kmyvb6neAelxjnJn5gRMAHizeBB4B7YmP/E
ts3+zJxLjD2BDUacG3uXWBh5MHUj5+5gd2H/jMptA7+WeI/GFsL+Yf+dVHoP
AqN6Mfa9wDNeij2GPmG/1s9oUO79lb2VnGRspKHx//s82K4XqM+NSvtjxCaI
jYELYaP2LW1PYnOST8xextr5qfDzkf9KXGdhZBvk32CHsB5/LHwfYk3EnCZE
xsrBzFlH5BWTl7xj0DnPZravyVcCc/846Jbfw77IPHs4NoZDTs2c0jkNzDti
b2BQxNtWxcav0I9PxMaU0ImPx5YBzyBmCqaBT4muQc+ANx5eGmf+OfYY8EH4
XuQiYDcjT74aeV/kUczOnTfFN/k+fBfydcD+0Ano1s9i73fUU5D/tzyyrvk8
tgx5/mDx4IH4lOR74FeST0zca5H4J2Mfhn3/DNFDUuMV5LqT+/6k6F7o3WB/
kkvFeyZHi/hgo9K4H/HDlbFjiOBpxMAuiJyXTq45thx4ALlGYALk/RAf5R2S
40e+O7EYfE1yjfA3byydP0wOC3lMc0vnOpwWfAz8CLAH4tHgD+SNXxxi4uRj
LMidJ4D98WTsWAM5Zexr5HRhyw0s7UeT90iO40TWFL5eZtyA+BNxKPY47Aow
a3TFPqVzSsEM0WnknjK3u4NvZ8a39ytdB0GsFL1CrgW6BV1CrgX6pG3oc2lY
a2DZ2B7EW8jnwJc/tHQtDHFEMM73c9tgYMbUj4AbN6ycn3lw7loK6mJaBlse
fwp7HnsfjB7sl9xE4v3E+vGPsMmwx4jnkofJ98Rvu1Z9nprbrr4y+E3ELMCb
BoR1xP5chPkzXO3VxHjk0tiYJPjUTbExq2OJteXGp8mNfCrzHgr+Vrt0Dkwm
3pjM+Uv9kc2cy4ruIh/r9cRYFXgcONU9pePUYO7kJj6b2m5mbpOTR+0PeObO
pfNtWHfoSPJ/ahTO9cJXAge8OfZzgXndEhsre6F0Liu5ZGDgP+Xev14sXZNC
ngC4+56J11qP4AuTR8Q3a5B4n9qtdJ4t+wD1K+QA4z8TV6fOBX32fOm8XHLV
wO7B8Im5gBeSK4WPQZ7ZPZnjMm1y535hq3fAX8wcQ0FPtwq6Gmyed8M6xYfe
N/F3xEfCJ8GGJ9ZMvjExafITxpbW+eQ5UJfFnO+YO5eUPBBibMTwWFPE88nv
JXZO7jdYcz/xDyldz4UsNU/U/pDTAD5EvQB21gal88/B6chbJ48ajI99g5x/
9g7sFuL+6M+euXNNbohsnxMHx+YhBgK2jj4kfkGsiDUFrkbdBHgWez71C+z7
rFuwe3Q+dsGIYBsQfz+rtF5irPUS6zHiP9RDEQMi14+4D98Ge2R4sEmwO4YF
24OcAfLOeT/ghdQggNNNCb4ydj7+cotgMxd6Z2MzY+DgclXpegpyLjcJmM8f
ifcyzBTqpKjL+s8XSIwdaRr/h5XVKJ1rR+5OreAXs8+1DT7gt9jbmfPHyNMD
bwW7Q+fOjY0Tgm9Ry4Zd803h+iDsczDPo8J6bxv2T8bzQ2qstgX6vHC9G3sf
e2ybIL+ucH0WGBRYafswZnKJNg1+NPZ+mzBOQALwSrBKcHpqVVijvXV8Qu3N
yFjkotiYIefrBvwQrIb6JexbMHLyWtFD7BOXxY5BMCfAOo+KHLtArxG/WJ8a
X24eeb9cGBtbZt+6JjZeTd4k8Qz6Yb+fF3uc1Nx9ndvPJY8WbJpr8XnahndF
jhwYPRg1NXef5vaXyYcnP54cnr9TY+5g3StK123hx2EHPxTbbwIbBUsF82Td
3h87nwS7lRw/bNedMsdCiIMQX12o99I5ty/ZIndcDXuqZ7CpsL9OCDbYS4Xr
LdET5OU8EDs+Ti7Og7Fj7qx5Yk7Em8hPuS92TPxI9d0qdyy00hjOzRzHwcfF
1wVf68a+kjuvZ5PMsSjiUJtmjlERsyDORAwD+i2NZVXp/G38jkXgb9xD9MMa
62Pi/1y4XgzfkFgReTnEg/iu4JVglXUq14f+rXssLo3PgImACVFDCtZDngBx
Jmz1T0vrevQ8cSbyeOCDg1GXh21P7Ofa2DGjBuGd8M4Z78wwZnCBZWEMxOSI
9xDrAbulJg6sdmXpmlN8f/B+8mZR4sSHiLeBbe6YOdbFc22eORY4LNgMU3Ln
aVAjAx6K/EHM5dQxVjAM8EtwDOwG4tPEW/cnDpk5t2HfyvVoSfC3ya1nPAdU
rkvaWPx3MtcPcK8mleuYPhdvaeJaEPohP4K8JeZDJz3H/aX3pjvZNyW/LzZu
5VyIrfDfKtfm7JJ5f8NOYI9D16Jz2ceon6JuivxzYvQPJdbJ4CJHB324O0pF
rb76OKRy3sXWmcdwX+mcBnBuctHBGcBAqEtg7Fnu3EpsSGIVxF+wScDUqfsD
VwdvI0cazA0skLxo8MB6lfNv8Y/JSSdHnbz0LzPnrhNf/Spz7jn7O/mi5GiS
n0l89YrK+ay7VK7Z2V7n6leuCdpW9PaVay3xp7epXOeIz71tZR+BGsQGlWuF
6mSOD1IDhr7aoXJ9JT791pVrP8FmwCnJ4QeLeJX+1H4IY2FMu+v6PSvX+TbO
bG+QL8F7J8/21sx5L8R/ybnpH+YSNUF3JP7+HNENxAHJpyXfluv4/lyLzXpQ
7tyaA3PnwNyZOD57T2792Vz0XaX9ZeLD1KGxjsjrBLMArzhaMveWnjO1cufZ
Etcipk1/6EhkWga9B6ZFHgZ5AsS5kUN/koP/QrD3WBOH5mFdpB4nWNnVledS
u+DHo+sYG7YodQH3JNa35LXgC5Cn8Jzu/UTi3EtqwLA9sP9qh2fBdkMfskaI
C59RWs8z96kxoI56XNB12IbN9Hu/1HUETXOPk7zLxZJ9WHL9cut7xgH+iv1G
3s7yxLlYHLGhwGs7hz0IXXpN5dpyYuurctvD+ALEcojZ8M7JqcV3wD/gHHgA
9SXUrpCLvi5zHcY5iW128g+x2y+vnMe7Y+6aDGowqL8YHWjWBVgpmCn5uz9l
zism5/GjzPUh1Ib8nDnHF9z1G537NrFNyJwlXwH/A2yEfH5iL/jzHyauUwAH
Jrd/XuB9FPjkw1Grg64mt+nrMJZLKtcXoBve1+8PEufhv5+5LouaLLAeaheZ
/9TmUCeCHDnS5EIzPrAt8q95b2Bs5LuDe5PnTC579zBPyJ8mpwW8mBoPMHBy
bPHN8MsuroxRcH/6IZ+Z+f9r5vxtcidnVsbTeE/E4qndxa4j5l8rsX0+rXK/
34JzVPavecfEj/jG9PlH5vzqyWHs68P4qa2hjoW5xzv6Jrz/deG94SMQy74h
t100Nsizpr5Wn/unzv8h75qalMvEv7RyrvvGufPcyY0n153cceqeBifGWak/
AmulrpmaZ+LI1EFTU03MmvpcanWoTaFmhhok5iT2PbUNvIcPM9cWEU+eVLmm
DIz5s8w1WeR97JC7BoD8f/JVrshthxM7pdZpbfguvEdqb4iVU89MPQXPiB7h
eXkeauHAc9gjqQminpa6YGp3qe2innpO7rm0JnPNFPF/bI/plet88IU2TGw3
so9QX0SeId/p+8Q+LPVQ1Bl9mjhnhdwVfF7u91lYa7xD6sq4L7W9yHKeejFq
x1gP4CzUivHe+BbUIxA/5L1Tw8S+xvk1QYaaJGoMqeOjjnhR7nX6v9w1G+Aw
+F3Uw7AfYXdRR3lJYjuM2h9qsIl5sf/gv48I/XPPd8ParBsZF5pXubbwkNR2
LLgNewd1Yjwj9iT5MuS+YFuQF4Ttht6hNoYaCb41ddHcB5uGvBf8fuxP8m7I
xWHvpjab94QNQU4RdiW6mRjGuGCDkU9ELhR1yeRZsUehO/EpBoS9FayBb3RS
aozi9WCfk/9O7jh+Gfkb+InkJpOjTI4N+Bvxbf73Armi5D5hz6Lfie8S28Um
JA8dbIH8VvLP2VuoFSYmju0JBt6lcu4IWHrnyrkXxDXIocAHvz5zfgi+IDGo
lcEWBTPvXjkvB1y3W+W8HPxWcqDI0wK3IfeHXC7iFeh9YhbU0fE/K1Yn3pep
H2MuYdOQe4aNj51BPTl1ONg95LZh85Ij/n1sbAqbhrw1bOdbMuc74dPh95HX
hG/Iuv4g89oHh+9VORcKH4T8JfQfudz8H5s3Esfafkqc80OcELxoRWScjjhr
g8j4ETg3z0INxeOJMQnqeqjJZC8ATyLXBEzps9LYB7jHJ6WxQvAG/LE0cayf
Wh7qoKjx6RmuBZ8n9/OF2DYJdu3zsXNQyTU9oDQWBB4GJrcycmxrXfCpwQDw
qdFL+MjkJpB7QN4H+R+YxdRKP5+59pk4NTVg6CvyKf6rWY59pIaZ/GBiiGfn
zoNaHexDdA35Gy8ltgeITxFn5zdxft7rmsj1xNTZ6u+/eDM+FrF1aqepryMX
/cQgg29L/S6+BjWz5PNjwzyd2F+g5uJ20Z+XxkPB1R4r/D+GwN5WFP4/IOBA
4K99c9td5J08kzjmSd0DNhiYLrHoE4KfTuyKNcT7BG8kX4Jr9std344/AyZM
vhnYFH4RuUZgD3dlrt0ghoA9SY0PMQFiB9SP4K+DhxJv+Shy7g3/p4b4CDFo
con55vdmrhUCq6bWjFq2xYltbup6moa5dELlGiH2bPLC2Vex/ai9Jz+d+BF1
P2DOxKqo5QHHIq+JvDO+O/Ed/scH+cfkUZFP1TTsO/y/D2oK+T8l5KOCTxMf
v6xy3R35Sz1L5wuBeRWJsSNq/6jpW5gYA+d/DbFOsFHJXb836HJipehzalrg
Yc+gN7dM7KvWyV33iz1G/hf/IwWcg9rPH8PcwK+jPghMgn2HHG7yt/FzqeUB
9wZ/4H8PkTvMeuxTuS4LjJ3/P0JeNVgi9tYTYV71rVxHRA0Neb/g/WAOF1Wu
vWcNgVuxjohZfhcbOyUHgVoUYuushx9j5zWBdfN/msijx44lbx67kjwHapKo
R6K+nHgE8Xbiv/zPF/LIicmSm02cl3wD6pU6hnk+sHJONrHV9bHve2PmHEgw
KnJNW1fG4rHffg82HTY5NQbY2qydkyrXZjySOZ+cmBK+N3VVYDzYk+RYY4vu
Xvp/PrBPEe/g/9SQSw2Gw/+Wws8BLzqlcu0H8WVyt8Cbqa0n5kXsi5gwdUaM
fXnm+h3eJXkR5OuR38z/BaDGB91PvgH1QORA/x9hA0fh
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1nAf8l9P7xp95zid7ZiRSESlE9qwoNCQaKFIRUhmRLTRRIikjkRYpyZ6Z
5YeQlS17h2zC/3p3Pf/Xq/P6nvu5zzM+z3POPa7rPm3dZ3CXQVmSJD2LJNG/
5OSYJIfXkmSahFyKSWWSdJU8XXKQPDckyekas6H6p2j8PMlnSN5M8nmS19TY
tmon5EnysuTn9PdJnbub9C9Jfk/yLZJXpUlSV/LNOv80nV9H+vaSn9L9NpJ+
rtrGOjZD8tG63izJa0o+TeP7aXyi/o768430/aQ/SPrbJN8ruafkOyWvpzHr
aHxv9Z9W20PyGtIdrNZbz7FE48dKf6quV0i3r+StNG6+2uaST5fcR7r2Gj9V
x/7VM3fT+GN07Df115P+Jl1nnnSbaPyZkvtKf7z0f0u/leQvJI+QvLv0r0l+
SeP/1vi9JL8neYh003TsHh3bQsdGqj9D/Zr6B0t/hX7PKN3/XR3bmvvp74tq
HaT/RnIvnX+Y9Dfr2J+65ye639E6tlL9V6R/oRr/u2ReWyL9yRq/UMd21TXW
V/9Gtca6b0+pv9Lf26RLpdtG8te6f1/p2+jYrZKvk36O+htI31fyLF1vkC68
juRjJH+s8b01fk+NuYbvLf2R0n+n+/9P8sbMJbWeus5zkkuNj2rX6/z/JLfS
+O2l31vHFujYn7rOX2pj1O+nazydWx6d+fxdNK6l2t2SW0j/G79VbSTPI3lf
6fZTu1fyUI3/Wbpf1C6X3Fn6+3LLl0meJf3BGttW7SG+heSDKvlhvofG36X+
ZD1fQ/2drmPd9beH2tPqT9f4juofrvaE5MM1fh3111O7SXIdyY+of4PO30F/
79CxHXT/7dSfrf7JOn/70ro7JTfR+EbSbyX5dslHSz9Y7/Jutbskbyf9kdJ3
lf4pyfdK3616nmcYL/2jud/HCMkPSH+2zr2fJnkf6fep3s99lTxW/U56vi91
3q4af5XkjpI/l7yL5GskXyd5bf3dW/JJ+l4X1Txn/pI8R8cn1fzMPSRP56/k
f3T+EZJvl/wXa0Cts+QpfHvp6+rvoZIH6viZ6r+u51kueaL6R0r/o463krxu
9T5vlL6Z5OvVP0r6ldK3lnyGnucftTH6LS0lX6nf+rTaexrfQPJ96t+s8QeU
fge3Sb6mxkRMkmslh2o+TlS/vg4fx/qM1v3C/NZ9/mVuY1skn6V7/ad2he63
m+St1d+C36sx4zXmmcLrfSz2UmOu07W/1zVWqB3I+9X4YzV+Mx2/VWM6VfPn
cfUnSl8v97u5RfJhktdmbalto+O9JH+pa3+lNrSaDzfqWa+SfoWOXahjG7F2
1Xpp/CLspY5/q3a+dLto/DUa30X693VsgI6dw/rQ2IJnVbtZ924k/eY6dojO
H4qdUX9N6W5Su1rnP6P2gc7dSfpzC3/btThX7fvCz3IR9lXy5dJ9JHmg5P01
flfJLXSPudX6fJ61UvOanqdjN+naL6t9q/5k6W9Qf4na15LH8D10rU/UzuC3
8nt0vc8ln5XZnl2vsS+pfSn5fOxp7vGnS+4o+bPC44dI3lLnf1j4+XCKa0ge
rnOfUHtN8iDJQwrPxUz9a9XOKvwtU+6tdpXGjtTzv6Pj/XXOm/r7ltqJ6n/C
99L33lT6V3XOZ5J/kLyl5Nd4bsk/St5K8luSv5Q8RtcblPsa/XSNUXovDaRf
Q8eaVv7hYvXXUdtZ8h86f2vpP2XdSz5f+k0k/6ZzN2D9F14ruZ51gtql0teX
PuT2L1/r/M0lL5P8leSL8EX4N42dpXax+muobar+bLXzCq/ttdWfonYhcYJa
XfVnql1AXIEvV3+G2vnq/8fzqn8L19P967H+dKye/qxT8/rJJG8hebz0DSVv
IHkv/JOebzPJb0j+QvJo1q3kAruJf5F+iPpnq72h39xD8gU1+0385amSg97p
ON17T/yZ5LrRz3Kk5Gslbxz9W7pIPkVyIXms5D2IjyRnrDHJu0u+QHKsrsfz
/Y6v1/221vN1kzxc+rWj19JBkvtLxhFfWdmLayRvFL1WsI+XSV4r+tu0kfyL
+rtiH3S9drwP6TeMXnvYz8clHyh5meQ7E3/PczR2WeHv/YT0raR/W/o5kp+W
3Ebyu5LnSv6f5HaSP5R8j+QROr+D7vehrrGZ5P+kayJ5hK53seSrpT9C8nfS
by95nOTOkr/Fj2Fvdb31dc7k1PZigvSjpf+g8PwcJv2a0WsHe/2v+ttKPxwb
IflT6S/XsRbYTskrdf5J0j8m/Y46dqD+Pqy2vfpT+H267+NcW/Ljks/Tub00
/j7iJR1rqr/3qm2l/iXSXyz98dI/qGPb6tijzA8da0Ssi3+QfI7kLSWPlvyg
rv+Ixu4geZ7kS6RfI3qt44/elnyp5GbS3yf5fclHSf5e+hckT5VcP3ot9JZ8
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
Dh95t/SbZubc5lbxOVwzMQO8Nfj6CYn56wt13lq5fQE+AZ5468JcMz7ypGj+
7evcfBd4RDO1jTJzQvD4xF9NEvP5Z6tf5I4liCleJtdVq5OYP4b/miL5r9Sc
LLYdG797YbwV3HSPwlgTPgj+86HCvgnOca6ufVBuPHVYZqyW+BwsEcwWXLZZ
YSwGHwLfdT/5SWbOlFiEmKRHYTwXfrZDbl8GZwufeVTu2AuOF2y2dWGsD4y2
t673aOG1wxqibgE+q03i+gX495PVWmfm5F4vXBtA7NRD8rho/ob3xPs5Npo/
eDd3vQLxIHzMz5lrAOCLFxSOTeCI8cX45B0K46kvVe+3M7+1et9w9d8lPrZE
1zpV7djM+dFi6V4r/CytuB54frn686+OWeHz/9Lf9plrAF5njepvu8x8CPza
RmplZg6rKTFJYX4eTvmG0vjfr7n5izUlr1GaGyVG2FP9PUpjWefxDKzv0twZ
fCJrrSZ5UuY1x1zi/MmZ59Tu6u9WmssjBiWWIKbYsTRn3Vx/m5XmuonB5ql/
JflEaT4OPRw43Pcc6XcqzXHCbXL+XYXPR0cNCvejBgB7OF/yhGi+YXjumAVf
dwX5deXzpkbjcY+RD2aONXqSz1Yxx9/6O176fqX58iP1t0tp7pEagdWxnvT/
FfYRxJrEnLwTcpbbo/ko8jBi0sPAk0tzlZdInhiNN16p+w/OHDPCJ4PtwTEz
r1Idm1DNr0z9t6X/LfEx4h/4racK15TwveB04XLvqXwunD5cPvx2Y/Ubla4d
IKble4P1JKm/GXMD/czMc4S5w7ualnkOzZR+c8m3ZY6PsWPMhwcy2zOej+cF
Cydn2br0OYydUd2/gVr91PeAf92COZOZs51VGv+l+OjgxHU+8INwb2tW8w8O
Ge6Ye86Nrr/gPly/Xunngxsn/sH2MX95F9hAbC3zkbmBzSUeIUbZv3QMwbMw
92ZlfqZtS3PCcMEcw/ZuWDreZxES+5MDwBPDDxO/b8Dv550nfh5isQ1Tv7OZ
0fUS5LXE+PgGxt6c2UdcGHw+dSLUh7xerf93EudoM3X/fXPzUXDoCyt8AG6J
HAquFs4WfBacFm4UjhR8FpyWeVZf7ePM8w1s/6jCuBR4FNzCOTXjTOBLB+S2
7+QGYOAfVngAsRcxGLhj88KxP/gj8REc7lrSDcmNi1L7Q24CProfvl/yxZk5
+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
XhlqMcE8yeeoyWSvJHsmyQfZ+/R/f+KQSA==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt1nuQj1Ucx/HH7u+3K6zbuqVIug4NpVLoNkmpbIqJbpgof1TWnS6MMClJ
JWFSCNVQul+oSE1CKbdqpRblmiQJW2Ftr2+PPz7zPJ/3+ZzznOec85zznNq7
f5finCRJHqEs5eQnyY/0cG6S1KQnKiVJhv+JRvO1aCK2Jy9JvscG8kc0MByr
wAbRAWxQJkkex6pFPewoNhSbjB3hi2kfNgB7DDvIb5B9AKtMY7ADWAl2P59P
o7F6/GT8BPUepJlYATYWOyYzDHsWK+cH0H5sIDYeS+Q20iisBk3AfvfSN8t9
xF9Hc8Xe5M+TW678cXWb0x/8GNlC5evk1tOjWKN4Z/drZboah5EyjbHB2Baq
Kr9X7iFcJFkTWfoc+4FGui+gTeqOkzlb3Qf5n6mh/GqZ7fQG34H2yNWt7P3l
1rkfoE5/eosOyeV6SIZ6qjsHO4D9o96/1Bl7kp9IZe5/kNtIf/ETZJtiW+W2
0UFsPtYNe4rPkduHjcim6+Rb7Dt6mynDs8rzqJey1/nn9a+R8WsS7dIRbJnr
YOUvqFdf9m9sIXY3NjXGAfuE/wev7r4G9VO2FPsXq8nXomLsU+wwVpsvpP7Y
Rqyj576mrRbYWOxY9Nd4dYn5oZXYn7Fe8Druv5ctofKYH7kbZW6iFfEt8Jvx
Ce5bYufGGPC5eAf3V9MiZUe19wU+xP0MbTXA38Pej/Vhjt7hL1O+kO+qfy/J
XS/XCavK52vvdpk7qERZNawy1iPmkTZg76j7Np2vzoJ4Z+0WxHcg14tfFs/A
qvK18U3qfOMZfeI7Uac+1j/mjM+NZ8g9rb2W7kcApfgzcjXwOrHOs2lZFb6W
uu21vVKmN81Wbw4dNr8z+Aq6V+Zl7IQYb6qIdYO9GmPA/yJTR34x9iF2E1ZE
nYPxG/A+7nthd9J+bBxd7blfxhjEfqQvM5W103YD1xOpOjbKtSDmQa481iGW
0d5qbIV6t2GrZC7CXuR38/cpK5Bbkk3vn8N34tM8s7XcrPjW+Ac8fy7WHDtH
riqeUWcF1Vb/XNfzaJiyQn798fs2rm1jjalXDx/ofhBtUfZKzGNe+h6Fse4j
J1Ml9lTsK6wfVi73dTb9Bk7Ul4Z0DPsmm34DJ/EnUyV1S7CR2Jn8WbFf8b/K
LtFWN1qobAe2C/uAv4HmYZPju8xP95//9yF1j8rtDs73pOVxNujbb9hKvjet
wR6Ta4Y/FAuKTnaZhLXCxvBVqHmSzk8TbAhfkZPO1ZTYX2lL7Gex32XSPbJB
7Nv8oZx0v/yAbyu31tp4EmidSffh0/DhcmU56Z4cY7dHbhXWNzcdx3FYdWyK
uvWjj+rOUPdCfDxfm9rCs7FNck/wjWNssFexzdjTfFPqHudCzF+cP/yZ1CPG
DyvFHuHr0eXYIuxnbBrfLPqTpOvsF2x67E256Zpbjm3FZvKt4nzEhupbpfz0
bIoz6hDN5+dR3Wy6XmLdDJfLzU/P5ziny+h9rA22BpvoXS+I9Ytl89MzO87u
v6kQ+x1bHf2gzdprz3+GXx/7AP0o39a1Hc1XvtOzp8d+6dpebp56rWkEth3r
gr3LX0nPYgu09xo1VnZSnK3YrOgb7TVnRfFu2v5J+XXqLoi5yE3/Q+IbuiL2
k+PjEt9TfAcXY7OPj198E0nltD/Rh9O1dQZNlanvGbP0/5Q4f7E1Mpfic2Mu
M+kZVBHvn03PjUZYY1rLXxb7s9xpmXQ//1juI+qhrCv+LrZM5qr4J/KMzlhR
/MNgNbCpWAOsEnYr9hc9jBXzpbGO4p+ERmH94vyNMVNvKXYtPymYskuwnbHn
K+8Y/xtYO34HvcVfQ+uwTjGm6naLd6ftWN/4F8pL/7/iP2y37F384bz0Xyv+
uXbEd813UL8UuzHWPX53/Kvlpf9L8d+0C78lvn0aht0TayPmRb1t8Y8Qa55W
KFsvUxR9dN896sV5bY4Wx55ozlu6tqD/AE30VCA=
            "]]},
          Annotation[#, "Charting`Private`Tag$180355#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{757, 880, 2071, 758, 887, 2077, 774, 894, 782, 2097, 901, 
        790, 2098, 908, 798, 2101, 915, 806, 2105, 922, 814, 929, 2084, 822, 
        936, 2090, 830, 943, 838, 2110, 950, 846, 2111, 957, 854, 2112, 964, 
        862, 2116, 971, 870}], 
       Line3DBox[{759, 975, 976, 2072, 1127, 977, 978, 2078, 1131, 994, 995, 
        2081, 1135, 1005, 1006, 1139, 2156, 1016, 1017, 1143, 2157, 1027, 
        1028, 1147, 2159, 1038, 1039, 1151, 1049, 1050, 2085, 1155, 1060, 
        1061, 2091, 1159, 1071, 1072, 2094, 1163, 1082, 1083, 1167, 2165, 
        1093, 1094, 1171, 2166, 1104, 1105, 1175, 2168, 1115, 1116, 871}], 
       Line3DBox[{760, 979, 980, 2073, 1128, 981, 982, 2079, 1132, 996, 2125, 
        997, 1136, 1007, 2131, 1008, 1140, 1018, 1019, 1144, 2158, 1029, 1030,
         1148, 2160, 1040, 1041, 1152, 1051, 1052, 2086, 1156, 1062, 1063, 
        2092, 1160, 1073, 1074, 1164, 1084, 2145, 1085, 1168, 1095, 1096, 
        1172, 2167, 1106, 1107, 1176, 2169, 1117, 1118, 1221}], 
       Line3DBox[{761, 585, 1225, 983, 2074, 1129, 984, 2121, 985, 1133, 998, 
        2126, 999, 1137, 1009, 2132, 1010, 1141, 1020, 2136, 1021, 1145, 1031,
         1032, 1149, 2161, 1042, 1043, 1153, 1053, 1054, 2087, 1157, 1064, 
        1065, 1161, 1075, 2142, 1076, 1165, 1086, 2146, 1087, 1169, 1097, 
        2149, 1098, 1173, 1108, 1109, 1177, 2170, 1119, 1220, 599, 1222}], 
       Line3DBox[{762, 1226, 1227, 1179, 2171, 986, 1130, 987, 1182, 2172, 
        988, 1134, 1000, 1185, 2173, 1001, 1138, 1011, 2133, 1188, 1012, 1142,
         1022, 2137, 1191, 1023, 1146, 1033, 2140, 1194, 1034, 1150, 1044, 
        1197, 1045, 1154, 1055, 1200, 1056, 1158, 1066, 1203, 2178, 1067, 
        1162, 1077, 1206, 2179, 1078, 1166, 1088, 1209, 1089, 1170, 1099, 
        2150, 1212, 1100, 1174, 1110, 2152, 1215, 1111, 1178, 1120, 1218, 
        1235, 1234, 1223}], 
       Line3DBox[{8, 504, 1884, 23, 509, 1889, 38, 514, 1895, 53, 1432, 519, 
        68, 1446, 524, 83, 1460, 529, 98, 1474, 534, 113, 539, 1907, 128, 544,
         1912, 143, 549, 1917, 158, 554, 173, 1523, 559, 188, 1537, 564, 203, 
        1551, 568, 218}], 
       Line3DBox[{766, 242, 1774, 378, 243, 1782, 388, 254, 1798, 398, 1799, 
        264, 408, 1809, 274, 418, 1818, 284, 428, 1827, 294, 438, 304, 1836, 
        448, 314, 1845, 458, 324, 1854, 468, 334, 478, 1863, 344, 488, 1872, 
        354, 498, 1881, 364, 875}], 
       Line3DBox[{767, 884, 2075, 768, 891, 2080, 778, 898, 2082, 786, 905, 
        2083, 794, 2100, 912, 802, 2103, 919, 810, 2108, 926, 818, 933, 2088, 
        826, 940, 2093, 834, 947, 2095, 842, 954, 2096, 850, 961, 858, 2114, 
        968, 866, 2119, 974, 876}], 
       Line3DBox[{769, 1276, 1277, 2076, 770, 1283, 2194, 1284, 779, 1292, 
        2196, 1293, 787, 1301, 2198, 1302, 795, 1310, 2199, 1311, 803, 1319, 
        1320, 811, 2109, 1328, 1329, 819, 1337, 1338, 2089, 827, 1346, 1347, 
        835, 1355, 2206, 1356, 843, 1364, 2208, 1365, 851, 1373, 2209, 1374, 
        859, 1382, 1383, 867, 2120, 1393, 1394, 877}], 
       Line3DBox[CompressedData["
1:eJwVz0srhGEcxuG/xjA2GBunjcHGYMOwcdo4bRwXjsUYlFMs8EFkQ0xkSqkp
pZRSUz6KL4LL4ur3Ps/9bN5M4Wz5tCoitkgkIr75qXZIRlylIn59F6lxriVJ
Hde2lD7aGrSReppIU3Lfoq1setus7bTxbMvojftO7aCbLl5sWb219WoP/fRR
tg3qnS2nAwwzxKttVMcYYYJ778b1zTal00wyS9E2o++2eV1gjiUebIv6YVvV
NVbYYJ1P93l98m5Ht9mlQMV2+P//tiM94IRjvmwXesk5e877/AHyiSWD
        "]], 
       Line3DBox[CompressedData["
1:eJwN0LErxGEcx/HvnVM6NjeeQTmTWBSDgbKQ6cfmMujuxjsLFouU4RgYlCwW
2Wy222z+ACIiIiKiEzF5De8+v17P0294uudrSTUVEXMqtUScqtoasaCaDtoi
iuxEf5mIX5X5Fi/ZGd7QD/9Wkc1qih3rizU1zRKNsyN9sg9NsgmNsENt+u87
f9MYH9UgX+X79pW/aJgPqY/t6pk9aYD1a8/9Hr6tR/6gXr7BCzbP67rnd+pi
dWd5m+NruuU32uE53qkOvqJrnvAr286zyvBFrfNLfqE0T6mZ9q7OztmZltmS
Kr7/ATs7NBI=
        "]], 
       Line3DBox[{869, 970, 1389, 2115, 861, 963, 1272, 853, 956, 2191, 1269, 
        845, 949, 2190, 1266, 837, 942, 2189, 1263, 829, 935, 1260, 821, 2214,
         928, 1257, 813, 921, 1254, 2104, 805, 914, 1251, 797, 907, 2185, 
        1248, 789, 900, 2184, 1245, 781, 893, 2183, 1242, 773, 886, 1239, 756,
         2213, 879, 1236, 1400}], 
       Line3DBox[{872, 972, 1275, 1219, 1121, 863, 965, 1216, 2181, 1112, 855,
         958, 1213, 2180, 1101, 847, 951, 1210, 1090, 839, 944, 2143, 1207, 
        1079, 831, 937, 2141, 1204, 1068, 823, 930, 1201, 1057, 815, 923, 
        1198, 1046, 807, 916, 1195, 2176, 1035, 799, 909, 1192, 2175, 1024, 
        791, 902, 1189, 2174, 1013, 783, 895, 2127, 1186, 1002, 775, 888, 
        2123, 1183, 989, 763, 881, 2122, 1180, 1230, 1229, 1228}], 
       Line3DBox[{873, 654, 1224, 1122, 2117, 864, 966, 1113, 856, 959, 2151, 
        1102, 848, 952, 2147, 1091, 840, 945, 2144, 1080, 832, 938, 1069, 824,
         2162, 931, 1058, 816, 924, 1047, 2106, 808, 917, 1036, 800, 910, 
        2138, 1025, 792, 903, 2134, 1014, 784, 896, 2128, 1003, 776, 889, 
        2124, 990, 764, 2153, 882, 1232, 596, 1231}], 
       Line3DBox[{874, 973, 1123, 2118, 865, 967, 1114, 2113, 857, 960, 1103, 
        849, 953, 2148, 1092, 841, 946, 1081, 833, 2164, 939, 1070, 825, 2163,
         932, 1059, 817, 925, 1048, 2107, 809, 918, 1037, 2102, 801, 911, 
        1026, 2099, 793, 904, 2135, 1015, 785, 897, 2129, 1004, 777, 2155, 
        890, 992, 765, 2154, 883, 991, 1233}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1401, 1622, 1882, 1930, 878, 1929, 1928, 1985, 2213, 1559, 
        1402, 2071, 1560, 1403, 2029, 2072, 1767, 1561, 1404, 2031, 2073, 
        1768, 1562, 1926, 2033, 2074, 1769, 1563, 1883, 2171, 1624, 1770, 
        1564, 1884, 1626, 1771, 2005, 2122, 1885, 1628, 1772, 2153, 1565, 
        1927, 1630, 1773, 2154, 1566, 1405, 1632, 1774, 1567, 1406, 2075, 
        1568, 1407, 2062, 2076, 1569, 1952, 2193, 1953, 1954, 1886, 1570, 
        1634}], Line3DBox[{1408, 1635, 1887, 1933, 1934, 2182, 1932, 1931, 
        1986, 886, 1409, 2077, 1571, 1410, 2030, 2078, 1775, 1572, 1411, 2032,
         2079, 1776, 1573, 1412, 2121, 1623, 1777, 1574, 1888, 2172, 1625, 
        1778, 1575, 1889, 1627, 1779, 2006, 2123, 1890, 1629, 1780, 2007, 
        2124, 1413, 1631, 1781, 2155, 1576, 1414, 1633, 1782, 1577, 1415, 
        2080, 1578, 1416, 2194, 1955, 1579, 1956, 2195, 1957, 1643, 1891, 
        1580, 1783}], 
       Line3DBox[{1417, 1644, 1892, 1937, 2130, 2060, 1936, 1935, 1987, 2008, 
        2183, 1418, 894, 1419, 2034, 2081, 1784, 1581, 1420, 2125, 1636, 1786,
         1582, 1421, 2126, 1637, 1788, 1583, 1894, 2173, 1638, 1790, 1584, 
        1895, 1639, 1792, 2009, 2127, 1896, 1640, 1794, 2010, 2128, 1422, 
        1641, 1796, 2011, 2129, 1423, 1642, 1798, 1585, 1424, 2082, 1586, 
        1425, 2196, 1958, 1587, 1959, 1298, 1660, 1897, 1588, 1800}], 
       Line3DBox[{1439, 1677, 1898, 1676, 2139, 2064, 1438, 1961, 1960, 2198, 
        1437, 1589, 2083, 1436, 1659, 1799, 1658, 1435, 2135, 1657, 1797, 
        1656, 1434, 2134, 1655, 1795, 1654, 1433, 2174, 1653, 1793, 1652, 
        1432, 1651, 1791, 1650, 2133, 1431, 1649, 1789, 1648, 2132, 1430, 
        1647, 1787, 1646, 2131, 1429, 1645, 1785, 1005, 1428, 2097, 2012, 
        1427, 2184, 1939, 1988, 1938, 1989, 1426, 2063, 2197, 1662, 1893, 
        1661, 1801}], 
       Line3DBox[{1453, 1692, 1900, 1691, 1965, 2200, 1452, 1964, 1963, 2199, 
        1451, 2100, 2014, 1450, 1675, 1809, 1674, 1449, 2036, 2099, 1808, 
        1673, 1448, 2138, 1672, 1807, 1671, 1447, 2175, 1670, 1806, 1669, 
        1446, 1668, 1805, 1667, 2137, 1445, 1666, 1804, 1665, 2136, 1444, 
        1664, 1803, 1018, 1443, 1663, 1802, 2156, 2035, 1442, 2098, 2013, 
        1441, 2185, 1941, 1990, 1940, 1991, 1440, 2186, 1962, 1679, 1899, 
        1678, 1810}], 
       Line3DBox[{1467, 1703, 1902, 682, 2201, 1466, 1966, 1319, 1465, 2103, 
        2016, 1464, 1690, 1818, 1689, 1463, 2039, 2102, 1817, 1688, 1462, 
        1036, 1816, 1687, 1461, 2176, 1686, 1815, 1685, 1460, 1684, 1814, 
        1683, 2140, 1459, 1682, 1813, 1031, 1458, 1681, 1812, 2158, 2038, 
        1457, 1680, 1811, 2157, 2037, 1456, 2101, 2015, 1455, 1251, 1992, 738,
         1454, 2187, 679, 1901, 1693, 1819}], 
       Line3DBox[{106, 532, 812, 107, 741, 813, 108, 814, 109, 1151, 431, 110,
         1152, 432, 111, 1153, 433, 112, 1154, 434, 113, 435, 815, 114, 436, 
        816, 115, 437, 817, 116, 438, 117, 818, 118, 819, 119, 1199, 536, 
        120}], Line3DBox[{1481, 1709, 1904, 1970, 1969, 2203, 1480, 1968, 
        2109, 2066, 1479, 2108, 2018, 1478, 1702, 1827, 1701, 1477, 2044, 
        2107, 1826, 1700, 1476, 2043, 2106, 1825, 1699, 1475, 1046, 1824, 
        1698, 1474, 1697, 1823, 1044, 1473, 1696, 1822, 2161, 2042, 1472, 
        1695, 1821, 2160, 2041, 1471, 1694, 1820, 2159, 2040, 1470, 2105, 
        2017, 1469, 2061, 2104, 1993, 1995, 1994, 1468, 2065, 2202, 1967, 
        1903, 1704, 1828}], 
       Line3DBox[{1482, 1710, 1905, 1944, 2177, 1590, 1943, 1942, 1996, 2214, 
        1591, 1483, 2084, 1592, 1484, 2045, 2085, 1829, 1593, 1485, 2046, 
        2086, 1830, 1594, 1486, 2047, 2087, 1831, 1595, 1906, 1056, 1832, 
        1596, 1907, 1705, 1833, 930, 1908, 1706, 1834, 2162, 1597, 1487, 1707,
         1835, 2163, 1598, 1488, 1708, 1836, 1599, 1489, 2088, 1600, 1490, 
        2067, 2089, 1601, 1971, 2204, 1972, 1973, 1909, 1602, 1837}], 
       Line3DBox[{1491, 1716, 1910, 637, 2188, 1946, 1945, 1997, 935, 1492, 
        2090, 1603, 1493, 2048, 2091, 1838, 1604, 1494, 2049, 2092, 1839, 
        1605, 1495, 1065, 1840, 1606, 1911, 2178, 1711, 1841, 1607, 1912, 
        1712, 1842, 2019, 2141, 1913, 1713, 1843, 938, 1496, 1714, 1844, 2164,
         1608, 1497, 1715, 1845, 1609, 1498, 2093, 1610, 1499, 1347, 1611, 
        1974, 2205, 698, 1914, 1612, 1846}], 
       Line3DBox[{1500, 1723, 1915, 1949, 1265, 1948, 1947, 1998, 2020, 2189, 
        1501, 943, 1502, 2050, 2094, 1847, 1613, 1503, 1074, 1848, 1614, 1504,
         2142, 1717, 1849, 1615, 1916, 2179, 1718, 1850, 1616, 1917, 1719, 
        1851, 2021, 2143, 1918, 1720, 1852, 2022, 2144, 1505, 1721, 1853, 946,
         1506, 1722, 1854, 1617, 1507, 2095, 1618, 1508, 2206, 1975, 1619, 
        1976, 2207, 1977, 1724, 1919, 1620, 1855}], 
       Line3DBox[{470, 336, 1267, 642, 641, 2190, 1509, 2023, 2110, 1510}], 
       Line3DBox[{479, 345, 1366, 706, 705, 2208, 1516, 1621, 2096, 1515, 334,
         1514, 2148, 333, 1513, 2147, 332, 555, 1210, 331, 554, 330, 1209, 
        553, 329, 2146, 1512, 328, 2145, 1511, 327}], 
       Line3DBox[{1530, 1752, 1921, 1751, 1980, 2210, 1529, 1979, 1978, 2209, 
        1528, 961, 1527, 1737, 1863, 1736, 1526, 1103, 1862, 1735, 1525, 2151,
         1734, 1861, 1733, 1524, 2180, 1732, 1860, 1731, 1523, 1730, 1859, 
        1729, 2150, 1522, 1728, 1858, 1727, 2149, 1521, 1726, 1857, 1095, 
        1520, 1725, 1856, 2165, 2051, 1519, 2111, 2024, 1518, 2191, 1951, 
        1999, 1950, 2000, 1517, 1372, 1739, 1920, 1738, 1864}], 
       Line3DBox[{1544, 1763, 1923, 718, 2211, 1543, 1981, 1382, 1542, 2114, 
        2026, 1541, 1750, 1872, 1749, 1540, 2054, 2113, 1871, 1748, 1539, 
        1113, 1870, 1747, 1538, 2181, 1746, 1869, 1745, 1537, 1744, 1868, 
        1743, 2152, 1536, 1742, 1867, 1108, 1535, 1741, 1866, 2167, 2053, 
        1534, 1740, 1865, 2166, 2052, 1533, 2112, 2025, 1532, 1272, 2001, 752,
         1531, 2192, 714, 1922, 1753, 1873}], 
       Line3DBox[{1558, 1766, 1925, 1984, 1396, 1557, 1983, 2120, 2070, 1556, 
        2119, 2028, 1555, 1762, 1881, 1761, 1554, 2059, 2118, 1880, 1760, 
        1553, 2058, 2117, 1879, 1759, 1552, 1121, 1878, 1758, 1551, 1757, 
        1877, 1120, 1550, 1756, 1876, 2170, 2057, 1549, 1755, 1875, 2169, 
        2056, 1548, 1754, 1874, 2168, 2055, 1547, 2116, 2027, 1546, 2068, 
        2115, 2002, 2004, 2003, 1545, 2069, 2212, 1982, 1924, 1764, 1765}]}}},
    
    VertexNormals->CompressedData["
1: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
/Zv01xV94APRB0p/W6GfzBP9pPTXFH2pr+hLZT5r5eRva+j5DT1Uj9w0dsnf
zsC5Ajgpn4/Ar6f6fnFj9F2/RD8p/fVGH1tiaX4fK/2dgH44WvTD0t8d6KvD
RF/NqR5tR3/eWfTn0l+tnPzV6qH9naixS/76Amcp4KT97Qe/qrnq+cVro98O
F/229Pc6no+8xPORfA/QF+vz9NfzSnVFH3PfxNyna+4sL5Kn1hHyn7VdlH5n
liXpvzMxoIDaD8VO7+HioeQjxXNIo0LH1f7JrfLx+iZK/lI8rUKdPNV+6/Xq
nUMilXyneK4stvWB2p9Vtfr1U+E/2b9p5RRPrR6K51DYPQq7FM/7wBkPnJQ/
5K9xHT2/eN/0bn4m27dYFti3MtTq6Xp5L2a8L2R1L6Uf6jB97zKlnpAeZjr3
Tm+1fwpP2JGq5i/5u3PmglQDpd/6GdgqVc138je3axu+XunP3DxN+iv1TfYz
Wjn5u0ujh84L2Y2AXfK3KXB2BE7Kn5orgvP9+ur5Vtcv/mVG6R/c0M5yQO79
udzQSfrbp02Vam+Vfmh0m2d5aj7S/rrvGjLwg9I/pTheeaHmL/lb8F23HpOU
fmt6+GcXNd/J36KdN3jfVPoz72I+A5T+Re6vVk71TquH9veExi752x84xwEn
7W+FOefy/Tr4bdw8Hb+4m3ftFh9Gmj5sEije35C/dhPXXXmnnLdNt+IjVT3U
nw8Jz579WTmfl271O6pjl2W2Mbk/VTnPDeaNnKbrb48dHW3vKuf/0rVV1VS/
aH+1cvJXq4f2dxjsXta3y1cB52bgJH+dc5/k+7XGRbxHIX9z8uel7Lzqnxpe
Und/ty7qsEXthzq0H1lKzRPa37qfO6Sr/dP2TqOn6+Zz82XMReVr/33TR6h5
SPy/Z9B0O5Xfy9ZOvLlGJ5+1cspnrR7aX7K7A3bJ3x3AaQGc5G+1CPW9kp3X
zOM/dP3iYfnzZFu8Mr42rad7fs2u3emv1svu77tNPa3DV4Zltv5Q+6fwuQbX
jHX46vBv87JqPe4XwO+G6/DVH79ZDdX6PaSTY7/SCi+Rv1o5+avVQ/6S3UjY
JX+bA2dP4KTzeyb/vdsWr+gyrvl+0fuTzkydt9vhtbPqnQWhQbOkvyW7in5o
0JS/Wce/HrQgfws4iv7JpcadR11S3CzI31z0WxZXAisfOXvcQtb3e6I/87mR
t/jhNncL8lcrJ39/afSQv2T3IOySv6WBcwhwkr/7t6jvJXd4hdcZuTBU532R
JfzdIvyVda0Z4tZVxI1r9zdUxFnW9yPYl15iX7h2f63FPsr6rpWTv67Q0xt6
yN8GGrvkbwv9PJT13QX+Bgl/5XvmCORzmshn6e92nIuO4lxIf+vjHDmJcyT9
bYlz91ycO+mvM85paXFOZb+qlZO/Wj3kbz193pD+7gTOTsBJ/p5FPkeIfJb3
F5/AV3UFX0l/t4H31gvek/7OAE96Cp6U/v4Fr9YXvCr71THgYU/Bw3J/tXLi
Z4O2Qo8h9JC/trB7Ud8u365fR2S/Wgt8ZSv4Su5vwwqlWunUI+mvGeraWFHX
ONUje9TBVFEHpb+vM0XdtBV1U+5vgoWos36izsr91crJ33jomQk95O862E2D
XclXwDkeOMnfmv1uttKpR9LfePQbg0W/If2tir7FUvQtcn8boM+JFX2O9Hcj
+qICQfl9kfQ3B32Uh+ijpL9auTX81eqR5xd242CX/K0BnF2Bk/z9PVv0G66i
35D5zNBPlhL9pPT3BvrSL6Ivlf5aoY+9K/pY6W9P9L15ou+V/i5En2wu+mSZ
z1o57a9WD/lLdu/BLvl7Ezi/Aif5Wxb9pMHF/H5S+kvPCzv1nyNYCbz/rxad
//5frq9R/oqv+j7xyqOdJRcoz3O03iioqok6p3iWrT7p4/uCWeM+y+T8rjD1
Pm3J2I399yn/T/fgtP4c1tN9Vg/oj9bXzzO6ma1W3+t12ZpgEqc8V5Hdmkur
DFfn9vzTdk1U50jp/n3+rrw/3oXfsoPmu5ap9110X6ldT3aLdBf6p+nr56ua
lf1uuuEQO7Lr+k/1OYzsVlu6vow6x1bC0KTglZpZ0q7vzGHtuG8se2lskK3e
y5Hd6lhfCuvJ7inof66vnw9ffq1LC+V5L6LHxee6drPsp+TX0+M24j6Q7M65
Pjafj+hejexq19P8jD30F+ypp59b2r9tqD6vPr1icyJWJ84Fr7+4qc4TVK9n
4XpZx98dmAejuQqyWwjra2A93b+Phf4sff08znSoofpe4Nuhc5vn6eTVRrft
GercQ9176Wf36Oxva8ytWeCelexu0qwnu0XNhP7ah/X08wqG4v3L6Bl2M364
zbeQ78OHjBurzmfMyL9PfSHnG2m+DnGUc6Ta9bS/XaB/p75+/hr+fhb+yvcA
paBnotDDtXYtoZf81a4nu8Xgb83Devp5F/39lXY3I261RdzkHEtbxBlzXXK+
Qrue4jwO+t/p6+ezkW9hIp+l3aLIk2oiT6S/e5BXj3APTXaL6eeh9NcZ+g16
6unno3C+jonzJe222jxljs65kP4efTPzvM45knHWrqdz5AD9L/T183jwVV/B
J9JuIfBAWcED0u4l8Ea04A1pl9aXx3ry9xf0z9XXzyuBP4MFf0q75cF7kYL3
ZJyngSdPC56Udml9FNaT3c7Q/01fPzcEn0cJPpd+GYH/Twr+l/obYH001lP+
hFsebVV5iydz31dqUfqtlSwvvaNvrc85rCMT8t+Q/xJy/tJST84hZx2wftR+
PTk/z1OOqny0uFzeotXnnsu5F4Mt4t70lkv3kg7rDnlRHT/xJyX/nvXjUK8F
7nNdvagv9bgl7mXL303aF5bt5kV9i1ZOffgF2F0CuzTfdRL6P0E/1fcZaf52
Ydk7LEN/GPTpmTtaPid6Qk9voYfN0eCvOfZCCQW/pRb/MvdKqn5Lwh96vlf5
iInZzLBAVdZs1T1WOaHY/OQ10ez5o/cbh+98zxqkVGj3xfE+O/nnZH3P26HS
L+NyzVW/LMnfX2PGG60clcNmnup9o0y3B2xBn/3RUQv8WA3z0nmXeA7rfH92
lxZHH7Dzn50fdr/p+R89FB/t+kNiPdfqnyP0y7gth18UNy1+d4GfU9z6Im40
J6ONQwURB14A8ayNeFJ/NeRTq4U8/B0LLV/Tq1GVuyzRaGwA+xrPQ6DHQejh
FRHPH8AfKPBzik81+HtS+MsPwt+nwL9J4OeEn/DcQX4SnuNWdbv1V+J6rvel
yo2KjLGkPO8AecZemyqK3IvOxaBda1apeRVX6ISaV7LPp/V99PXI9avEevlc
Px352eqnga4eRnj6OuvZ5b0vvWp77Eg4Y/u554aQa6zZi+pX1f1Lj7h3Tv2c
yVrjy/Xqjj4nP79gMMx0doSF8pwSP+/jrCHKOX4fZN11ew6b2nx/yzubQ1iB
9+F/nozxl3pG9Jw0T/0cxSmDQaU7eD+Wem5mOy+YMdiLTT9a8qmt8pf0XJmx
qpnXCG9m3nnNRduSYVJP5Ccbj8m377Bt9h1y1fkymrtrYm00YYaCo6Nto/sq
LtITkGkVWjN1sVcT3xpr+ivnivQcD7idPw88frmYnyI8X6ekOC1t48xdvk+z
HW7tJ/V8r9t7AB/hzZ1uzLPVxWOBudmSJqZuKh7S0+7kxQ1rQm7xocXTvR0b
eUs9tVuH7lPiw+df/VpENz6nMa/bdu6paeY68encJCZb+fd88MZfuatDbkk9
o3r1HKXsF289qkIXB539CsKccOyr4XE1lf2i+PTzmL9Q8Yc33ta8xOI2zv/R
00zo4Vo94UKPnG/8OHntcSW+3Mc+Y5ftEE9OeurArznCL6mHPvfUWvgl51E3
3EsZquw3/xJ+P1nZf6nnJ+LsKOIs9XRBnEuIOEs8mZcvPJqp4Ng8NmKTiov0
jI4881Jn36Uev+5Opjr7LvEYXly1dYESl5dDVtqpcSI97shDC5GHUo8P8nCn
yEOpp+LUvovUfWra/0U1J2XfSM84nIty4lxIPdY4F1fEuZB6Jqd+cVHzJvvR
hFJrlTwiPcRvTSvk8xtPFvzGtLxEdUHLY+fA81reI97W8iTx7VDYfQleTYHd
EeCNAeANM+EXLxEpeOMoeIPmEiuBN+zAG8OFX9wW/r4S/sr8XIC4VQKfkP7F
iNt98Anpt4Oej9BD+l+CZzaCZ0jeAPtlLPZL2uXY997gH1PY/Y59Pw/+Ibud
oMccekh/L/CSNXiJ5KOQb6Ei36TdWPBVR/AV+esNvloPvpKfd4CeNOgh/f9M
FTzmCR4jeQLOyxZxXqTdIvXEuTsEfiO7Y3HuTMFvZPcn9ByGHtI/ALw3DbxH
cgf98y7tNgFvbAQfkt1H4I3+4EOyexx6KkQIPaTfGjxpC54kOfHVc8FX0q4t
eK8b+JPsfgTv5YI/yW6RKUJPKvSQ/ongVQvw6kjI+0NeW8jl+Z0Ju53Bt5RX
n2D3C/iW7JL+ltBD+glPAniY8FgiDjYiDtJuU8TZAfxM/j5GnPuAn81g1wZ6
pkMP6T+hH3+Jxxz7PkTsOx8Bu8X080ranUCfrwGfk7/W+vkj7Ra/IvLtCHie
5JWR5wdEnv8bZ/A/zpG0mwH+xzmSdk2g5wL0kP52OF/pqAskL4tzbSHOtbR7
GbzRD/WC7CaDNy6hXpBdU+gZBD0Uzybgk86oI2T3NHhsseCx/9QFU9QF6ntn
gj8bou40BZ7Z4M8nqDuExxf6naGf7C4BrxZ6LOqR5Dfw/wTB/7KuvUHfeFbw
v6xrv4fq8b/EPwx65kAPxa046sgz6JHfk4A6cgB6CM/N3mMnqHzn2dml9Aqd
Pmemt+DTsWcWKPy6wZJwdt0QUNjkSCibPq7SnMkPj7GZOS7OEfw9c5+X3lPl
wb25nnFK/sr+6sjgM3PeGwSxicapPl1eecv1n8pt3uan8Jdb6/lP1HjT+ndn
iixkyjrT9H1dc5R/R+tP3r3/zzqFdy7szp2l+k3ro0/Z/Rmm4OCt29RUcdF6
r++2y9YrcUnO3dVbd32VZuXXmtje5j/6HihlfDdErp8/cNp6db9vtWw9RRdP
nZR5PWeVec5TMqqnzyzzXK6f+fOro5qvw3skPfTS8fdMjaOGil7utaXj+ka2
t+X6xzhX7avMjTUYtMWC1neweVBRwc1HdCjUYPTDY5zWz4L+IUK/zJNTpY7k
KvHkdcJyk5Q4yfVL9PHL9b1+5wxW4s4XtXC/rv47Wh+E+CSJ+Mj16wOceo9X
cNyb2aOUiovWOyL+F0X85frSiVM2Gyt+zs48ba76TetTsL8nxf7K9W2zfbeq
cSwS53NSjSutP4L8OSvyR64fs2LnNyNln9qGpa9srOwbra+yPLNG33VPWMzV
UsZFPG+yrZffXt05OYdt2vu06M9ykWxD1aZGwV38mPe9o56zd2ezA7P8vfOe
JrFnf2+bDH2w29LGpVr4m8OZLLng8jutiiSyxZ023WgQF8RIvs1SzJcHT54S
W9BqvyXdjwyd8P63/ZFMduAbM/tV4pClY/l9uyspegcY3X2l2lk2IcdsWtgR
S3peLtJ09nMVl5NPN9u6jm6WrzLG3p378xlzNkl0Tu6VxbqZhJgaWsSycCHn
Bx+tbPj2RCYz7Fba5cSZGPn8PqPZBO9PP9JZyZrFtwVWiWJbhV2+HThfAmcn
3I+4wt8g+Ntf+MUz4O9q+EvyOvWCD+1ZF80iL5p0f1h2i+WGS4vWvd6VzQ9u
yh4zpWIk87OxvGrY3Y+R/J+4P3vmK34cTCgWYe+w3HKziD8ve+159VUNOdv1
rVJ7l80+cl9yFpUeONsxiH0PTun01yhM7svFvh08O5lGsvsRrY4+CYyV8Y/0
T7FbtieFXV4Y/OvCtgwWifgUiclNCZ+XzOpmXuzdqXY6Q5z56kPXTNIOJDLz
KautFgW+YVsQnxvQ7wf95O/wSptq+ewIYsk3DwZWNQmTfsV9N4u43NGDBW+K
vtxg1DOJ36pdVpk7ATdZ5YJHZ1xJjJL4Ix8vmt3vDGf+65xrxA1Lkvh/FD4e
MjvnBTO7/Xtp7UPvWQTw36+yceamgf7sXsjNaedfZrHywD9gYvs5AZeestOT
vj+/8+Gt3N9k6A+BfsK//PuadzWCb7JuK8LXDkiJkvjHlV9/7VpHD15zvMFm
XfzxjpXi7wXc5Dax+yx18feoedHe+gznSy89y4vVwZ8d2GLW/JwXfErCjK4q
fsrPmANugVsH+vOSv0zbqPgpP2e2tl8ZfOkpt/GZ7KaL3wb6V0E/4f9W6Ou9
2sE3+eGwJ8N08R+bG85WN+Tct2nk4wM6+VN918wFcxyDePnib5/90cmfd92c
11iYRvLRFdl3P538OdLZo/XyPSn8YKsVtrr5M6Jtkb0R85J5swIpDzoq+UP4
g8oM81Pyh3t/2Bu8UMkfwv8J+idDP+EPeGTQ2XdHEK84cs9o3fwpe8JhjsJL
3GNu67BCOryUUOvFcIWX+LCa8dGBOry01XznJ+U88jFehV7W1+GfpJe2uQo/
8LYT8tbX0+EHi91lNyn8wN99yi7irsMPxRpZVf/8I51XOFy0XoAOP+yA/mnQ
T/jLvfx5QTnX/O/ngKn1dc712fj8c83PDg8sN377KgvC/7LYyQEpip203Pfl
qxR2siD8O+fk8wwvNadaUn03ZwvCv7ZZPu/xgTOiDwy0cbcg/PtM8nmS/yo1
+UkH6+MWdH77TM7nVW448GfYxlFuFoR/H/RXhH7CH26Yz1e80unD1UsWc7LQ
xv+EiD8n/ImI/yARf66N/3ARHy7rAuLfUsSfE/7OiH+GiD+n81sc8S8t4s8J
/07onwT92vjnifhzwu+un/8Sf239/Jf4s5CfI0R+SvyuyH8Xkf8S/0jkv5nI
f4k/GPn/WOS/xP9FP/8l/hD9/Jf454F/agj+kfg/gH+sBf9I/BPBD0sEP0j8
RYIE/0wW/MPp/Obo84/Ebwf+GSD4R+KfCf120E/4ixYW/HNQ8I/E7wX+DxX8
L/E3B/9XFfwv8Z8HP78Q/Czxh4D/mwv+l/E/CP5/KPhfvi8yBf+fFfzPqX7d
gv5Q6Cf8I/X5X+L/fVXU3wOi/kr8r1F//4j6K/EfR318IuqjxP8C9fe2qL8y
/r+iRf01EfVX4l+M+stE/ZXxPwv9IdBP+Hui/maK+ivxl0Nf91n0dRK/Pfo6
V9HXSfyv0c+4iH5G4ndCfzVF9Fcy/nvQX3UV/ZXEPxH9VSPRX0n8KdB/AvoJ
vzP6onjRF0n8qbGiL/JosU/ti7wIf1n0V0kjrqn9lddmsV72pSlpNRsrfZqX
tv8cvjFZ7eu8qP+kfrJ/9c9qP+lFflH/yez2N1P6Ty/yazj61bNLItR+1Uvb
N46Cfm3f+BZ4tP3hR+Anf8usWVwy5OsTduLsjb6Bi66zQSNXjS43JYeZb40e
7BkfybIqnnlr+OIR61f5XQxzyWb1u9/f0uB0IrMf7uycmuHHdk+yct3/RKkX
letecvqbxRzCtq3LyI1iGSlDy4RWec7vfWs5+FD6Oza/16/ig8eFsSKDih6/
dCyanxm7Z8ahnW/Z8OMLd0wtH8g2nkotMDIiiXdtMKjezglJLHDKhC2x/a+x
HUI/z43Zc8lt+SO2v+yeTJO73hLntVYpXdp/C2FbzHt//rA6VOK8ENTWc13n
GNbph23CtIHRbA9wLrlX2eBQ1ht22np93QWT09lb4Fy1el/wzQ9v2MoB84Mv
h79hRYHT5crWj+sSUtiP9nOfRZ1IYhuAs2/XB88bDX7NlqzZVGNRqzCJ88kv
36ZxMefZ9jL7mjoXeiZxGrk+bPbuiRcru3XF50O1oyTOctWfrEyd9IyF3Gr5
xGduosR5a4/f/tkzQ5lZqmHVB0bvJU6jaqPXGZ5V4jhk3+L1r95JnCGPlxlv
dQhnZ7pubVpnQ4aM51qHRU83VHnJEr+EnthVOF7iPFdzR4VWq935909fLads
/xfnl+HpDpWfnuXpV0cOa9skWuJMmJfSNM/sPO+WtDN8yKIkidNj0PXyMz75
8l6F3F0XfPgXZ/D+lbOto+7yc30m9yg1Nlvu+991Nc7OHufBlw8zXrxla6aM
Z0bVf759NjvP+oYlJqr6CedK4/khUWYP+cwdLq3WmftKnLzeky3vtvtzo9X2
F3YpNZdwmhutOLexykt+rPjxGqq/lJ8P3He7TmmYzC9OWvxwxuG3LBM4pxVt
0a6jVQIP/Njk84dSbyXO8QbFZzRwiuHVb7Kog1bpMp4vPuyzTZ/0jA/93v+g
ul+Ec/3OPrVLvfPjZU0qrrry5LbEyaLq7ct+Gc6rdG+1uGe/56w/cLr902e0
yeDXvLEJ77xQyR/C6WCz+JrVknd8Y8jZA5Omxst4ul1oeOfV9wzevVaZSyN3
Jch9X/i50uU7bql8yZop9kfS4iXOMgX6TnHoHMOzF42tr+Y/4Uyws20Vmf6M
b/C3NfNst0HiHNSl8ixHFs3jK30atyjuhIxnG+dtLZXzyIP+xi2IUs4j7Xvp
bUtmNB2aw4tnTnE/utxTnvelh3kH1xHZvP7l+C1TKtyX8Zy/9kGPV2aZfITV
2PdLmnjLfTdZ8POKwifc/1qXoykKnxDOiucvDFV4iR/a8jHnxaLrnHDap5ff
q/ASPzOzy576Lx5ximcD6Lkn9HDC+erl9OLb/2bx361jXqTlRnHa9+Pdqx9R
eIkXnus9deC4ME44E4v0ParwEr9R4abTpPKBnHB2Qhx8RBw44Xw7Y3uno8sf
8W+NnecpvCRxpj7a7avwEi9aafdihZckzmLYl2SxLxJny+aNryi8xF17fXWY
Pzmd075vXDp3zq0Pb/gqa5+WCi/xwsCZfHzIMoeEFJ4wxr+VwksS53nklanI
K4mzZuHif+NjzvO914r/3FvomcR5oO2ntOwnXrxLl213FV7itO8vkecDRJ5z
ys/Xc3zHzJ0ZyuNd9kfcN3ov4xkXHNig4dkw/mS4c2OFl2Q833076LLNIZwX
DB0aX3tDBqf87IZz6iHOqcTpubJl8+ar3dn3rIQJCi9JnLmV+70s+/Qs++B/
fo7CSxLnRvBGd8EbMp7F5sXNnfLJl7k0K+ur8JKMZ8XKn9f3jrrLrA7eGKvw
ksQ5c6pj0wnjPFivG55rFF6S8Ww7X/BeL8F7EufCttnHIs0eMuu/C48rvCRx
xjUwGpq53Z95rF9SdvfccIlzFng4QfCwxFn34LPYyQ2TmTsv3cv28Fv+Djh7
9f30wNwqgWWP/mv7sdRbiXPX98bFDZ1iWHuLWe0PWaXLeP6tJupIjKgjEuf0
KX4+Jd/5sc9/GvpdfXJb4hzgkNlG4SX26d5zz179nkucrVHX1om6JnF2vF+s
i8JL7MuQ6m2mTI2X8Zy5fUhXhZfYgp5ljEfvSpD5aV2dd1R4iQ2Jy/B1TYuX
OM+gLg8WdVni7Do3M88k5RnzLh3R57HTSh4VytqtU3BOujl0pMJL7L31vgor
4k5InB3RJ3wWfYLEeWXJuZVDh+WwW52SnNJsPLlh8+wWtgWf8/HLHQ0V/mGD
+kYUXNHEW+JpgH7mnOhnJB76HpgUfG9JF/Rv9DnQLMhprp6+H2Yyvs+E1neB
fLpGTngaCjxsi8DDTqMvGo++iOTDEc/2Ip5sM+TO6E9y0Z/Qeuq75qHvKib2
hS3Cfg0T+yXldpr+pzjk1NetR1/3Xuw76458iBT5wHIgX6rpr3I06yOwnvJH
i4fyfALi0xzx2YT9ojhYIA60j9ORP6Yif1iEyB/5/Srt8P0q8nN5mu+HIfkp
nK8W4nzJePqjv/JAf0XykTinqeKcyng2RJ9WGH0ayZvgvB8S513GR9vvkbwx
1h/GeuLbUbCbBrsUtxPA3xr4KT4GBh9eqZ9zn4XvXSF/DQx2x/4v+R/wYQ/B
h9JfQwfRvy1D/0byEeDV/oJXpb9B6APPog+kvDIDP+8X/Cz9PaPpJ0luqllP
+TNMY5f45zXw9wR+ikN1zffGkL919L+fQcqT9OuX9Hci+sOq6A9JHqFfB6W/
1GcGoM+k+IShniaIeir9pX7VE/0qybXrqe8iu09hl/IhHfgLAT/FoQ2+18IY
39NCvNQW8nqa75mJR7+RLPoN6e8i9J/z0X+SfIN+3yL9ddX0sRSfFuh/3ET/
I/2lfng9+mGSa9dT3VwPu2tgl+KQBPxJwE9xoO+Z+Yjvb6E4kDxdI49Hf+gj
+kPp7xz0t9bob0l+FH1mUdFnSn+XoE+uhz4Z/TyLRr9q0Ca/X5X+Ur9dFP02
8bB2PZ2LY7BbDHa1/e094NfGIRnf68I0ccjSyOfC377CX74V/lJ87qN/pjjQ
c0E54S+nfCCchdCHk5z8ffM2319O/mr7+Q+a+GRgvfZ5pDzsFtU8jwwGfur3
6PuLauP7XrTnor5Gvhj5P0fkv/SXzksi+nOq1/Qc10XkP6d8oD7fDn0+5cMG
5L+9yH/+Ef62Qv4fwfMC5cl6zXrKh6Ow2xV2KR8I/0Lgp3yoBz4sgO+BoX2v
pfkeG5JPBh9WFnwo45AG/imA/p/iYAs+9Bd8KPedniP88BxB8fECH14QfCj9
1T6PkPyhZr3sV2H3BezKfkP/eV/mg4GBwWud+sj/rZsT4/6X3Em/Pso47NCv
pzIOhQ6I+ugh6qOMQwXNcwrJH6E+9hT1Ufqrfd4hOdesp/6h8AG9uizjMMNB
7/2MzIfumu+3IX/76H9/nZTfRr90XvRLMg670Z+0xfMLxaEc+qXiol+S/vZA
n5OF5yCSn0C/1EL0S9Jf7fMUybXrKR+0dikOD4H/AvBTPnREP78M3ydD/tL3
4SzSyB3Rnxc2z+/PZRzo+cgaz0cUhwXowzeIPlz6O0vznCXl6Lcvi35b+qt9
XiO5dj3VzUUauxSHHcBfEPgpHx7jOagMvmeG/CV5YY38BJ5rtonnGunvOPT5
vfFcRvJbeH5xFM8v0t8VeB5xF88j0i+tnPZXq4f8oucsB+DRPkcE4zmUniNo
XuIp7gVoXoLuC5ZijoLuC7Tfb0P1YhruKUpgDoTmT1xwr1EfcyOVMH+inTOh
+RPt98lQnFfhHqcd5ihIv3bugj5fo53TiIX+3vhc9ih8Lwrp7497rpOYcyD9
DzRzEfLzJpo5CtK/Ap9z36D5vpTpuAe0xhzCNujXzi0Qfu2cA8VH+/0kFP9A
3JM+wpwA4R+hf68q4++qmUMg/NrvAyH9RXGPXAb3+IS/k+ben/Ana+YESH8J
fK/FQHyvBcWnF+7Z6+KenfDTvXwu7uUJP93j2+Ae/5UGfxd8jwTT4C+Fe3DS
b6G5N6+kwd8C9+yk30k//lJ/sH78pX7tvTbljxvifwD34KRf+30OFP+VyJ/+
uEcm/XTvXAL3zoRfe09N8TdF/o/B9xKQ/sb6cz6c9vcA8v8B7oUJv/YemfBr
v6+A9C/C+bXEPSzhp3vbRri3pfzR3vOS/uvgn8/43D3Ffzz4xwj3pKR/N/in
C+5VCb/2Hpb0f/lQq5F63mq0+NluoeJfrEZeE3K632yPe+GfmPcj/iy0J6CO
eq7GLy22W9lneX61cjk/g/m0C5hPIz2zVlS4VFc5P5eNLpqlKHgJz0zIr0Ae
Bj2/MSfwGXNipOf39dK2dR13eB03E/e0pEcrp3mwNZiXYJjXIj32PdJG1Ffi
tWFtw6fJOnjWQr4ectITgLmRJMxNkZ7glw2uqfvqV7hn1DKd+IRo5HS/3wLz
M36YXyI99QOujVHzr80sW7e5OvullROeIMwRhWKOSKvHVKyX+aCVh2vweGOe
h/SEAr+PwC/1aOXkVwjik4i5GtKzQT+e8vyuh9wBctr33dgvS8y3kJ7WgeVm
6eyv1KOVU3zi9fNH6hmGfLsh8k3qGQL5TcgJjyny+TrmPUjPz90i/2eJ/Jfx
IflsyGWccb4qXBNzF6TnI85jP3EeJR6tnOIcuMO2plpfM4aet3dU+BJzCHJu
9jTmELRzs5aYW9DOzdKcA+EPgv5M6JfzS5A/EHJZf+l9vpF4n8+Mxft81rhI
YZfCH9+z8R6mFg1++7JGkGvndSk+VzV66F6gCfRMgB6Sk1/LMQ9cQYPzIXBq
5zQOYa6Y5jS09xGEvxHs7hJ2pZzuO+6J+w55D9upT6WFKr/0qWVa/4aSd9Rn
Hirok7C30DP2ddM528SY8/I+dyjud16L+x2ph/u226Lyy8tnMS+V8yT1uLTd
10Kdq1h/8Z/1R5c/knre4z7ruLjPknoePn/SWOWXS20H7FfzjvSs/Vq2+4tF
19lFr94r1bkS0tO6it79nbwHX+zxOtzeYYbXj9eijyY9RU+c+udauw28be0U
s8j0f+cTHHFf2VXcV0o8o8sdX11YyfuWpW9118VTu1Kteuq9l/PPzR/UezDS
8wb3s8XE/azEc33P0jyVX+6WC/ZcpROftCcbZ6r3fKHNmplHmT2UetbiPvqc
uI+WeE4syjqs8oJ5kejuV3X26+SHWTbqvWbr/gnHW6x2/8/9e4i4f+daPS2F
HjlP1WmSdQXnQs+427rp+1/HnJf3el0wb1BRzBvIe+eb8Oum8Evq6Vd7r6d6
bz29ftmvbssfST2PMV/RUMxXSDzj9eMs9VyuFuYasOg6b7mvbAv13p701Bkh
5knSxDyJ1GO8bXmkzr5LPas+mg7yaLeBNY7KbqfOKZCeIpifqSDmZ6QeT+Th
NZGHUs+hjiUiLz+5zboYluinzmWQnnOYF9op5oWknts4F+niXEg9voPP/7I3
92Vuta7YRps9lHpMcH534/wSbyzE+fXB+e0t9PNemKf6jnmqPpBPwLm2xbkm
3m6OuSxfzGXZCLv8Ac57uc3ivJN8Lu55Y8U9r8yrAODfKvBL+STwQxb4gfDc
R3z2Yp6K5HGIj8FzwRuEcyfs/oRdwpMOu/dgl+RlX4k5rmuY4yL5DfCPC/iH
5Btwz95H3LNL/OexvxZif6X8L/jqIviK4t8B+VMH81ckT0D+BIPHyK/rsDsF
dgnPc9gdB7skT8Lc1xXMfZHcHXwYCD4keQDmHL6KOQeJP0s//6W8J/jzD/iT
9qUoztdXzGuRXwfAq7VEHyf9+gS71bKFXcITBrsDYJfkIZgTq/FZzImRPMdd
8PNo8DPJS2HOZJ+YM5H4L4AfWgl+kHI38LkN+Jz8CgH/tMZ8F/llB/4ZAp4n
v4xg9zbsEp5A2B0MuyQ/h7myjZgrI3kn1IsbqBckz9Cf85H4+4I/bQV//ls3
UV8qor6QX1bgZyPMg5E8GPychrojn0dgt0ITYZfwTIfdNbBL8lOYQ2uKOTSS
F3gq6pdBc1G/SF4Bc1ZuYs5K4qf6clLUFynfjnp3A/WO9mUi6lc65sdI7of6
NRx1UPbbsMthl/CMh92HsEvywqvE3NoszK2R/Anq6UjUU5InYs5thlgveZvq
r6lYL+WTgD8W9Zfw74C/1zBvRvIn8GsQ6jL5RThtYFeLczDskpzi8ABzbiSf
gDjcRn0n+Ubsb0mxvxJ/OvqTQNGf/Dvng3wzRD9A+ZaD/CyP+TTyKwR5mIw+
gfyivDKBXcJTCHn1G3ZJ/gd5W17krZTPQN6uQr9B8lX6c54Sf32cx73iPEp5
GPihFfoTwn8GfGKNeTaSrwFvDELfQn5d0OcBiacz7F6HXZK31+cZKX8JnhmE
/ofk98GfX8WcrcQ/Ub+/lfLm+nwu96u0Pv9LeT/0UeB56Vcy7FYXvC3x9IXd
UbAr8aMuVBd1Qcqn6NcFKT+DerdT1DuJfy7q3RVR76S8KupvXfRvhD8b9foq
5uVovwJQl8PQ15Ffj2H3KuwSnl2wGwK7sv6ijs/CnB7Jb6GOT0Z/SPKPmDN3
Ff2JxL8T/YmT6E+k/Dr6pcPoJwn/GPRXhe6L+TqSR6CPqiT6KOlXMfRF92CX
8HjCrjvsknwL+q5yf8Vcn+Q99F1B6FdJ3gb9Z8FK+f2n7HvN0X/OEf2n7HuL
o/+8LfpP6e9+9J/VRP8p5d2gvzT00/4uQD/8FfN7JB8Huztgl+LQGHZfwS7h
vwe7rWGX5E29xjVW+4+tKxJTb+vMM2d/XtdM7VeM33Xc2FrnOat2kfzPwbEG
nx4Nal96iyV9DqXo1JNXra86WTrkTZuc9XmZZT18f1TN1LAiJWfFsCPtX6+6
Vs+P+c42bhiRksXmzzEuFWyVzJbVPZDXZ24QC7cxL5Ne9y3r0mxzt1SDdDZn
xvfGp+qGsY5m9V4+q/yGdYV8NuTmQs4XQY8d9IQKPbwR7J6G3cfCLu9fdGqv
e403WYYbzGp7X/lLOPniNc6e1mGsmvOQ5ZFjw5jVkT3Gnu+z2OjX7mGTY2JZ
1+PGr0OyY1nQqh9N17V+y04f+LwmamsS23rzzJIb+5NYkV1zah1p9oZdKNj9
x8U+b9jlRQHddo14w9K2j+swuVXcf+QpQs49oMcRegoKPXwi7PaCXX9hlz8D
zrrA2Vfg5NUqx354q8R9wuuurW2UfSC/2j2ZsyIgwJd98TWt8rtpDBu3yqZo
669ZLPnd3TapxYLYqXn3HiY3TWb9DO2dRrK37M+dzd1vZb9kfQ2id7TJSGO1
9uxv6Nn5DfvW/29SqXcR7BMrmj5jcyYbbtO3+EHrOPYd8s+QDxNy/hd6+kFP
daGHZ8DuWdjtLezyLsBp4CdwjhI4uYFBl//5vVstHk2ucuzQSi+eXbxV6dax
zKB2ye8Tv2ex4QXfx29bvd7Lv9CoiFanUthY08elbbq/ZeeuTDpVfOAWr+iv
R7on+Waw0Co7h9/t9oZ9qDNtzXsDJ6/an/qZBF9R8jI9vlmFkXGsgEHiTPX7
Id3xPav//k534pn/9b2s2vX0/Yphi5fq6Z8r9PMzwBMDPMECDyf8QcA/SuDn
LeFvIPz9XSvfXxkf7ff8KPL/+XsE57YtLV3j1k2+wmp9qbiW/sr+Nimyok0O
+/3P2s+BAb48/dvrp3k6eXK6TZGR6cWC+PwHrTap+9UXedL03WrX29kv+YO4
fb1082TIkIULy7yL4N4+Dvt08+T+tjTP10lRfEb//ZFTQrLY5CONt49zDWDe
+BzrFnwerOT8FV0d7++x0K4fJ9bzodDvA/1DkW9mwOMFPDWQbxeAfzHwU74V
LyH8/Qx/Kd/8EJ/DiE8NER8+aMLsve8+L/PK3bLmtfW/54s/ePf8SNUivjz8
16yByl92s/4Y/yptc5jh/D5GF63DeLr559QIHT7ZWzn79JSYWP6x7dKS6rkO
BJ9cPTymYPTWJN536/EP13X45EDY3D2X+rzh186UP79T4Y034JPBTXvccy2d
xofv6zxD+ctCLYoGTTsTIO896T6sRZO/3x5477Gg9cOwPkCs5y4a/cngpesa
PMRLLsD/DfiJl5rC34/wl3gpAvHJRnyui/jwEpc6pSk87NWqyK4D9/7lYe4T
N7GtEnd+vnaHPtVv3ZT5+WXb+GEKn/MnC41+X1H43A915NHXOT0V/uc/zWdH
9FL4Pwx15G/PTY5KveA9J+4IPqFTRzKKFTltuSeT2+wp8qF6lUiW3WZ22aqF
41ijYo6FpoZkcd9+H8PikqLYFORnR5O9l9TP+W02Mb+/e120zE9jrPfD+rHI
T9JvDf2ZQj836CXw9Aae9qhfPsD/F/hDUL8KOAp/Q+Av1a9UxMcP8aH8rDbm
WnGF972iH6Q/zvy3/vKAkqXz5cF3xqtyL6oLXxFPb6Gfa+P5WeDhFE/C31Xg
5xTPt/DXSvjLKZ5a+VvEoQD09IAeioOv/j5ybRwCgJPiYDLqYaqaPzZXyqn5
I/1qiDxME3nI6dw5I29zRN5yquPXkOe9RZ7zwjh3B3EurohzwVGv/yNPwnm5
CT19oIfOyyHY/QK7dF7MgDMHOPvgvAwZk7xH5ZkL5tFxCs9Iv4qBr1IFX3Hi
5+vgt3mC3zjxc1vw4X3Bh5z4eQL487HgT078rJUTr7bV53lOdfwO7C6EXeLV
8sD5EThHg1ejBmyqplOvOdXrId4LE3XqNad6vbtuXw+des1DUK8vTXlsr1NP
OdVrrZzq7JyjM/P1vIKeINTZobAbDLtUZ6OB8wVwUp0dcyVvfTXlvJ2Yzcar
5494qT76llzRX8l9eazf58h9yURfZC36Il4T+xKPPuqb6KP4MNqXEnm5sQq/
DH68toXKN5PAS+Gm7nG7FD4adPxqnMpPxEu0fgjWEy8lQv936B+C/X0HPDbA
Q/v7FPg9gb8X9rcp/C0i+jS5v8sRH2/Eh3jpT7WpH9W+9LpputqXekmeL1Gq
iFoP9r0ySVfrA9XNG+hv64n+Vp5fK/TDA0U/LM+vK/rnvaJ/lufXHf32PdFv
c6qbFfPaVVLrX8PH/Uq7KfWQ6qZxk9tpbuqcXb/eaWr9pLqpXU91k/TfhX7i
ATfgcQYe4oFBwD8C+IkHvOBvE/hLdfM14nMJ8aG6WW9Mcv7zi++wDPX5Rcbz
6r2TKbFKv+L25epLtX+pifysjOegO+I5iNPz1yw8Nx0Xz02cnr864Tlrk3jO
4h3A891MivgOcc1ktqUzz48qE8mrFil/rHhiLCu28/g5tT9zfBq7KV7p16iv
a9R6yGC1nwusOX3FXqW/o/zUrqf87A79M/X1cwvg2Qw8VC/mAf9p4Kd6YQh/
feEv1YtQxOcu4kP52f96n2tqP3fZIEd9bpXxtA8b02TD1yi2zeHKtWZLfdmG
lUM/H+2YzaYWP5y2a1cSK/vBdN6n+UGs/rn+VyacfstiDe/FbnJIYxN969Rr
kvCS/Upb6PL+2hvWqrjlnKLtMtmBrd57KyVHsN5N5i4IsXvNbhXf9/D5oSyW
0vLX3JcvoljSoiGPo0uHsJPuJ3oU357Nrmz8Xq/6+miWNv9zqUIRrszowJrM
i3mZrFnfjwMyOkay5U6vo2M7v+JrP1yN76z+vt3FsdfvTghj898PcK4wIIXv
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
0rFSZQcl7lnTPxRco+xDAeyj9vmIfn+59PudjR8p+5d1uLiTup+0v9rnHfp9
Q+3689h37Xr6HUMtHsoHAw0e+r1C8tdW319lvb6/9NyUjnjORzyPI38onnMR
T/rd9irVxX3KRXGfIvfFwOB4c53fMZe/L5m6sMGllD6h/OyNs0V19+vT2qNV
lDzmFVIccgfo7Etqo7J319dW+iSzzAvqOaBz1HnX25THI6N5guOE5rpx1sop
nmnQkwA9FLcvsFsRdhnikw6c54GT4tAX96GXxH2onGtaU2FKGSVf+Z5u/Q+o
+fsK56thcNQEJb95on1UVd3zlTsheqZyHvjmcWurq+eiHM6XU3+jasr54X+q
r/NRz1MGzpdWnoDzpdVTBudLa5fO1zrg3Aec0Thfxvr319Kvo7VaNVL854ln
a5dP0eG9bJP19ZV84u1spo8u9C//sCb950Yp8eWeV8unO+jw3q2KbcYp+8GH
sAdFlf1hN7BfWjnxXlONHgOhh7+HXXN9u9wdOJOBk/bLH/MG4WLeQPp1DOvj
xXpOfpH+NkI/Jz43BZ6zAg8vBL9uA7+NwM/JL63cE36RnnPQQ3mYo7Gr9SsB
OMmv6piviBDzFf/eE2F/d4n95ZSHxsiHeJEPnPIwD/mzSeQPpzzcgXzLE/nG
KQ+1cspDrR7iebKbALvWyMP1wLkXOCkPS2IOp4WYw5F+ZeM8eojzKPcrD+e3
nDi/FDf2Aec9Tpx3TnnYF/zwWvADJ97Qyok3cjR6aL9+w255fbv8PXCeA07a
r3GY1/oh5rWkXy/BtwsE30q/OoK35wjelnlYBvz/UfA/p3r0KVvUkY+ijki/
tHLyqxz0fIIeOl8WGrvEh+HAuRg4ya8/lcSc51Qx5yn7qEDU8buijnPqNxxQ
96eJui/zMBJ9grXoE3h55KEh+ooM0Vdw6je0cspDrR7iQ61d4sNg4HwAnJSH
XTCXmyDmcqVfm9BfVeqY319xd+xXIPqxK6Ifk/v1p4zo3wq45fdvMg8noN/L
E/2e5A2tnPhQq4fyMAh2r8Iu5eFm4KwMnLRfft8mvqg75h575rv9lHX0aeaa
5jv4h9JflME9+ExxD85orqMZ7s0viHtzOW9G622xnu7Nc6A/E/qPCP080sO1
0dCGN5ht3xolhyl/jb/+6FE/MIfVwTxDdTHPwEIw/9AS8w8HxPwDa475B+36
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
JDKJpduztZVs3rFZm48tO+AYycyq+O1zd4lmnZ4umnpraCK7ffbvwab7/dmf
1R1PTbqRyUs5hT8rbBfJgi5f/fGjmA+r6lTHOXZfNrep+L339E7RbOXLazeK
r41hrV8atC/9IJO9wvu0c5p7xrkl+yW2fJnMip10SU++n8xS2kzrnfUqiZVx
73DyVd0YdrF9cudli6PZdb+y5/f6ZfI3/8+9nvP0ae18GwSw0KhVE4z+JrDI
MtsSRwRl8vZ1vD+9ObybLcq79P7A8iQWwM3/nFXkMyN93ytx468KsD8H3rzg
/RC3o5r3/yeh/05SZJQSN257q1qTdX3C+WPEbemBWmFK3Hj/1RNi9zlGclPE
zSl09QElbrzC0AYXG+/35xQ38y125YrYRfILL9p5fC/mw6sgbstXvC02o1M0
33ar859ia2M4xW013ofvxPtwitv5eqPmtnqZzAfuThylxI2/QdziooaOia0b
wy0+3Fi3dHE0p7i907wnJ79OLuxc7UmDAO5Z3elrw78JPApxG3du1pSvh3fz
EV5PMpW4cYrbo7NCPkjIWbCQs93Qc0roYa+EHsnzhTW/S/Ls//l9vTDgbyvw
s9sCv/R3iPCXJQt/uT3itlfEjTUXcePO058eCF4Ryd/1uHwksKgPs7tZebjh
/9V1rTE1h2EciVxGtcUXmcvYSNbFbcKLTZtFJpWsUBjraCdEtaaECEWZWxrG
kbXcN0VMPTo5YS7LLSdyyYei5D4xNs7p+T1n9eLT2d69e97n+f2e2/9ynv++
FrUFvPRmXlSX1DZeHDwGM49qJPNIl8G7kXlX5cw7GeE/jew/KpD9x8HvGeZX
Cb+LPNkP49gPqRq4xcJv77HfkuDWepT9v5j9nwSHZYgXN44XEhyCEHc5HHck
OCTcGTbHhoMq+dr//b1ulSQ4+CCuH3FckxNwqEce2MV5gASHvsgb0Zw3qAw4
VCH/OH9pyz8kOHRHfmji/ODwc/37mz2099Wl75W57j4vI0q7+DUoS88614fe
DSq9NWBs6KBbf/W98r0P6VdPoF+V75UYmpJNkYU1KvBmVcmjac1qTchgvzeX
rOrT+KfGSBermvnh49wbv96psIvh9en270do+1fxfod87b1x2ox6dFqrR+pj
8rOA39vK18033+6a06S8zzTmF9fWq9VDDVNWVmWVnzw+bqlpU4t65jQ6tNc1
q+26LHeFfQ7tMcwfrpM56hNSOuy38n6a8WFtm/wkyB/J8uln7KdJCwtraHZk
arRd/wTYaxkeM3Shi5X2bE9srbLZG8n2KtkfjP3xsLdzp4y2+XKemC+Xifkt
Ow5ELHbya6AlN6/GPrDxspV5UVlYj+Z1Er6cDSw/iOWT6HMf+uxmfUjw1/eL
PhEJu5/b7U1ke2kU8HSZ/XiqHZ8ixofqgGfG9LtT2+FGtcBN5AA3EtzmgvdZ
zDuJn1jhJ8HsJxQF3GR/EPaLnsPgt9XstyT4vNHqrBfiywPxNQ11WeLLiHh3
QX18hXh//Z/3JVJQL3LxHF/qRRHyZwjyp9TZw9pzfL3eGZD3pE9Yq+VJ6RP0
OjgCdl3pKIckf57qqA/Vw65q7bmn6HMb/UOp9txwCfBxRz6UOpihPY8TfPoA
5yjkMbFLz3tSx9O0vCTfJ/IFv9eRl7aA389aPhE/0eNa5jDfgP/vRTyGw/8l
vmIQXxsRRzLH74j2P7hsLe7E3/T4knh/Aj3nwJ8l7nS/lXMnD3ix4Wpehcpd
fiiwzPZb6XN24HnbuaYZqUlNvmaVmT3ka0FijUrvGTbx7eEWFR0TsH6mJbE8
KH5nvyRfq/Io+3JuyNEW5RxmudXsa6bSONO59vsLcF/OX7v/GfcjqqvtPJqX
5Wm2n2/GuUash/A6ybor5JewfBL5V777p7XTh0SfHOifzfo79vvD3jy21yHf
B/15mT6v9T/zVMMhpwi4VbAcOo9z9wO3VD7Xdj2S8c85yYLnAuDpzvqTO+y9
DjxFzjXgGarNw8wEbnHAU/Rxg1+ZtOuaMVgv1e73ynqJdv9W5BvAi8gfAD0r
wYvoaYGe87R5eiHfvNLa2Utibz5wywNfImcT6u8DbS5cMPC/AB5Fn27gsUKb
e5aMfukg90uOvnEv+slG7icdfdQfWiFfaQ==
     "]], {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{406.4330623779169, 355.21259397682826`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1., 0.9999999999998993}, {-0.9999999999999748, 
   0.9999999999999748}, {-0.9999999999999748, 0.9999999999999748}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.324537929649344, 2.425883070198081, 0.4020133621509183},
  ViewVertical->{0.5783494645241952, 0.1369823079553526, 
   0.8042062821141113}]], "Output",
 CellChangeTimes->{{3.969025325658393*^9, 3.969025344615131*^9}, {
  3.9690253752996063`*^9, 3.969025394768406*^9}},
 CellLabel->
  "Out[137]=",ExpressionUUID->"6fd5a12e-80ac-4abd-a632-a7aaf4c426a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complex Numbers ", "Section",
 CellChangeTimes->{{3.969074384956889*^9, 
  3.969074391015607*^9}},ExpressionUUID->"b9ca7190-6e5a-442f-8927-\
551a43240abb"],

Cell["\<\
So till now our discussion didn\[CloseCurlyQuote]t involve any calculation \
related to Complex numbers, we know that these class of numbers are also very \
important, let\[CloseCurlyQuote]s explore explore some functions related to \
that \
\>", "Text",
 CellChangeTimes->{{3.969074393990768*^9, 
  3.96907452751305*^9}},ExpressionUUID->"4b19bc82-35aa-4c53-820f-\
20a53d4b0cc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", " ", "=", " ", 
  RowBox[{"3", " ", "+", " ", 
   RowBox[{"4", "I"}]}]}]], "Input",
 CellChangeTimes->{{3.9690745352998877`*^9, 3.969074554814646*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6c0083e9-7a51-4bbb-b07a-47c9bd755fa5"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.96907454043259*^9, 3.969074555332246*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"9b6daad0-d233-4386-94bd-9453ae3303d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.969074557717505*^9, 3.969074559206498*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"080bb0c3-0eed-433b-9239-56eba8608e77"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.969074559588152*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a1a84f52-f3fa-498c-91fc-03efe294e086"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Im", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.969074560736464*^9, 3.96907456213111*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c4a2d02a-3b33-4450-b171-113d98fceb32"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.969074562537879*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f6f8023f-993f-4fea-9746-2d367b426222"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Conjugate", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.9690745655359583`*^9, 3.969074569958707*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"90ff8ed1-0bcc-4895-a14a-29766ba0678a"],

Cell[BoxData[
 RowBox[{"3", "-", 
  RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.9690745703059273`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7709c20d-b947-4455-be3f-a5258cb13555"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.969074580696939*^9, 3.969074582936178*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0ff97a13-1f9f-49d9-b6d4-37d46884bcf7"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.969074583446876*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b7447658-8723-490d-a681-119e69902d21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Arg", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.969074585136323*^9, 3.969074586893372*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"565b1a9d-95ae-4511-a6e1-8afa96c433b9"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox["4", "3"], "]"}]], "Output",
 CellChangeTimes->{{3.969074587412986*^9, 3.969074608372574*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"073df008-13c2-45c5-8534-5c952cb242d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", " ", "+", 
     RowBox[{"I", " ", "y"}]}], ")"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.96907463966926*^9, 3.969074652965714*^9}, {
  3.969074684481642*^9, 3.9690746913400784`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e7af8383-30d6-47fc-aac7-6ac2968c70bd"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.9690746534273243`*^9, 3.969074691988782*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"af5b5494-440f-4283-8fc8-03c22eeb2f70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.96907459246408*^9, 3.969074627305294*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"9529144f-2de7-4410-961e-39b0d9ec47d3"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "y"}], "-", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{{3.969074598115262*^9, 3.969074655274455*^9}, 
   3.969074693662691*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"8c5d53f8-66f4-4259-9ba1-ae55e5bb81af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"z", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.969074617682398*^9, {3.969074674781741*^9, 3.969074680364636*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"bfe9c9a6-4418-4cf6-bf6c-8a6f3b5abf62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"Im", "[", "x", "]"}], "2"]}], "+", 
  SuperscriptBox[
   RowBox[{"Im", "[", "y", "]"}], "2"], "-", 
  RowBox[{"2", " ", 
   RowBox[{"Im", "[", "y", "]"}], " ", 
   RowBox[{"Re", "[", "x", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"Re", "[", "x", "]"}], "2"], "-", 
  RowBox[{"2", " ", 
   RowBox[{"Im", "[", "x", "]"}], " ", 
   RowBox[{"Re", "[", "y", "]"}]}], "-", 
  SuperscriptBox[
   RowBox[{"Re", "[", "y", "]"}], "2"], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"Im", "[", "x", "]"}], " ", 
      RowBox[{"Im", "[", "y", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Im", "[", "x", "]"}], " ", 
      RowBox[{"Re", "[", "x", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Im", "[", "y", "]"}], " ", 
      RowBox[{"Re", "[", "y", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Re", "[", "x", "]"}], " ", 
      RowBox[{"Re", "[", "y", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.969074680817314*^9, 3.9690746953017473`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"14d16e7d-825f-4e09-ae08-98652c4cb497"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s take an example from wave optics, The N slit \
intensity can be written as ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "0"}], 
    RowBox[{"N", "-", "1"}]], 
   SuperscriptBox["e", 
    RowBox[{"i", " ", "j", " ", "\[Phi]"}]]}]],
  FontSize->18,ExpressionUUID->"61ab527c-f61c-4f91-aebe-932975032023"]
}], "Text",
 CellChangeTimes->{{3.9690248669614773`*^9, 3.969024896936364*^9}, {
   3.969074999314084*^9, 3.9690750185420923`*^9}, 3.969075902368897*^9, {
   3.9690759473205442`*^9, 3.969076006136948*^9}, {3.969076071045403*^9, 
   3.9690760715810223`*^9}},ExpressionUUID->"4eef11ab-3476-4a27-98f3-\
834510b397a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Amp", "[", 
   RowBox[{"N_", ",", "\[Phi]_"}], "]"}], " ", "=", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "k", " ", "\[Phi]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", 
      RowBox[{"N", "-", "1"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "use", " ", "\"\<esc phi esc\>\"", " ", "to", " ", "write", " ", "\[Phi]", 
    " ", "and", " ", "this", " ", "works", " ", "for", " ", "any", " ", 
    "symbol"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.969076013574917*^9, 3.9690760667224703`*^9}, {
  3.9690761017937803`*^9, 3.969076143642329*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"202c11a0-9622-413e-b80b-2ba2567de99c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "N", " ", "\[Phi]"}]]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]]], "Output",
 CellChangeTimes->{3.969076073365747*^9, 3.96907610666781*^9, 
  3.969076148053997*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"b484354e-46fc-43ce-8702-313413eb892a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Astar", "[", 
    RowBox[{"N_", ",", "\[Phi]_"}], "]"}], ":=", " ", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "\[Element]", "Reals"}], ",", 
       RowBox[{"N", "\[Element]", "Reals"}]}], "}"}], ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Conjugate", "[", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Amp", "[", 
         RowBox[{"N", ",", "\[Phi]"}], "]"}], "]"}], "]"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.969076566011828*^9, 3.969076578178198*^9}, {
   3.969076617379211*^9, 3.9690766254475803`*^9}, {3.96907667428743*^9, 
   3.9690768155228033`*^9}, {3.969077081137967*^9, 3.9690770825897627`*^9}, 
   3.969077200967802*^9},ExpressionUUID->"f0e826f4-65f7-4df8-81e8-\
0d52e8a5899a"],

Cell["\<\
Don\[CloseCurlyQuote]t panic I have used Assuming function for just letting \
Mathematica know that \[Phi], N \[Element] \[DoubleStruckCapitalR]\
\>", "Text",
 CellChangeTimes->{{3.969076824224393*^9, 3.969076832078944*^9}, {
  3.969076865607641*^9, 
  3.969076870977669*^9}},ExpressionUUID->"0084c9ad-9abf-44d4-bf9a-\
9263e7582d2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Int", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"N", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{"Astar", "[", 
     RowBox[{"N", ",", "\[Phi]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.969076632089015*^9, 3.969076648506133*^9}, {
  3.969076712297173*^9, 3.9690767219407053`*^9}, {3.969077092231935*^9, 
  3.969077112619256*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"89b260b5-4268-49a9-89e9-42164cd21bd1"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Csc", "[", 
    FractionBox["\[Phi]", "2"], "]"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"N", " ", "\[Phi]"}], "2"], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.969076638976506*^9, 3.969076648875227*^9}, {
   3.969076713908276*^9, 3.9690767224007683`*^9}, {3.969077100293932*^9, 
   3.969077116626045*^9}, 3.969077165536867*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"21d5f5ab-4bda-4dc3-985c-dd1a0075b411"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Intensity", "[", 
   RowBox[{"N_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"N", ",", "\[Phi]"}], "]"}], " ", 
   RowBox[{"Astar", "[", 
    RowBox[{"N", ",", "\[Phi]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.969077118177285*^9, 3.969077143358306*^9}, {
  3.969077182680859*^9, 3.969077184027869*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"14c6bc3f-b826-46a4-a0da-465c256cbb67"],

Cell[TextData[{
 "We have got the intensity, and \[Phi] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "\[Lambda]"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c226709f-daa5-4689-ac96-097c9d3c1fcf"],
 " d sin(\[Theta]), let\[CloseCurlyQuote]s plot the Intensity in a 2 slit \
arrangement"
}], "Text",
 CellChangeTimes->{{3.969076914768095*^9, 
  3.969077010266231*^9}},ExpressionUUID->"65f2b608-9e8b-46aa-9550-\
9359cc69abbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Intensity", "[", 
    RowBox[{"5", ",", "phi"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"phi", ",", " ", 
     RowBox[{
      RowBox[{"-", "5"}], "Pi"}], ",", " ", 
     RowBox[{"5", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9690770282506437`*^9, 3.969077032004691*^9}, {
  3.969077210779117*^9, 3.9690773084193163`*^9}, {3.9690773487061367`*^9, 
  3.969077392050527*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"f030f9bc-c10c-4abd-aa08-26204b8f480e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KIcKq+7x97/ul0aVs9H77jVSIc5Ntmd+tzTO81BPSwxtzveueVr8hDQmcUia
zc1S4ZOL0QMdY2mUZte5PLlKhbMX6noOG0ijxOjAy9XNeX75vLW2p4405hix
qnJvymPP9T8IVZfGwJ0an0VnqKDh5NqbrSSNXYmVa1t+UqHu7KJ2g6w0niwV
6qWro4KDw73APxLSKK62a2/vSyp8m3qY+kxYGv/SNT5Y9aXCIf+oysP8m/1g
qlb1fR8VPnI9+UbPJY3HitIJfw4qmCSnzJaybNoXOPOToYECRRpZnO700vhd
PWsl4DYFjviesSJWpdCc+3WUuCoFiCeeQVkzUmiGVTvnWxZBs+z2e54/UrjL
Uv24gfsiiH8LnfPpk8LyF67N/HSLwLr4TGWwXQpv69VbfIhcgF+65XGFlVIY
3LcaFLHZDx3WDU0ib6RQZ5CFqi8wD3j5O+29TCkkKkJaqoPn4Fn+ood1tBT6
ctm97HGYheAWxhflQVLIw0/fLfFxBq5NCPTI3pbCo3I3St7Iz4C1mu7euQtS
yPs7mnMmbwpYMi9Jxm6XQspnriN7tMfgWvJoS9eoJP7bS7szYuwHnHtPYdjR
L4m32OeuJG3vBes+JuOMTkmsdOyjj0v5DhqiCpnXqiSxZ+9Pnf6UThDdpvej
v0gS3arP2MftagcW2138+15JIu9bH8F12hb4FXfWf0usJF43jt7FmPcROoq9
SvwfSqKec+sV17FqwE7/8T9+kvhwT/Sqwkgl5M2Gy1h6S2K72Ogbi4S38Iw3
+XjZRUl8t+/Zm2dLBRCsnRsmfUYSG6MqcxuUs+Da4coPwUcl8UUlg0FH63M4
59m0NL1fElPW00r0wqPBOqxH6wRs+g+5LsV39S4QOX/PV+tJopLT5bM3Z51A
s4n6TEVVEkNqiYPtB2lBfIy5I0pKEp+5LP3K2mULrKxbWJYFJDE66xjTO69b
sKikuMORTRIZmz8Usa9Ewq+9+t6NGxLYw3PIPt/8OXSc3529dUECW+M/14uK
vgK8f2Tg6ZgERr6w+LV0/Q3kpTsK0Q9IIMNKg7F50jt4VnPZwq1LAu1JAkkW
9NUQPHjnXmejBCrJqN573v8RrtFElhmjBLoMe+9RPN8E56SeT6aXSKBmMak2
9XMbWO/Ik+d4LYFUboGZBNMvQJx+f9I7RQIH/lT33OHfrNet5si+OAkcLdn/
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
qvSO+eJUFbj3cHRWPeJGuoUx2UGvBlj7z+vCo2fcuHvOWZ2uuhmCV/5MHXnN
jUqSI59aZP4AW9A+n13vuLEgU/epc/NfiGd7uVOTxY2zyid4dep74IucI6dZ
GTeWKKfoS5wdhP25vxNYGsh6/RRWCesYhlJ9Gen6Dm68f9HvUL7/GHTaTWof
n+JG7nKOlCdHZsBp1KyYbYUbG/I2lBLy52DueuaRxh1ujDh6pczy4gLQhXmf
seDiQcHRwpysrWWIFOgY4RDmwbOWi+Wfp8j1K33/tWYZHjxg8V9j/sIaqBF3
Ak/sJ89vbmNwMtyGn0fPM3Mb8uDjFx3dPMYUaNxRGtNqxoNjmn4J6X6UeHb+
4buTjjxYqGEV17pDjeP+U6q8V3iw6vNtBlcrWvRiOv7jjxcP7t37fs+bHDp8
JMldf+oBD+4fdT1a95wRc0++XrT9woOWd7om50bYMLiIcWEmnwcf9VNsLPaw
o5Wi91xQKQ8SnDIsuus5cInCdPrTXx78L9tMMOI3F2pkrI1Q0vDitacnskyX
+TCH6mTnexteHIvxvPkoQwyD3Yo69C7wYv/2rTVmM3G06lBsb3HjRW8Bfdq7
s+K49ImqdSuQFzNZPyv93ieJ6raZdRafePEml3/P2X5pzP6yq3iNkg8vzg98
jbJRxEBBX2I4MzkOMfzSCIMSWoYM/JTk40ORmeg99PlKuGCXX2CmxIc+8dM9
PPzKqEp3KSfZmg/lLtBIRDurIIVHc7aWIx9q3Lb51PRDBRu7DmTVXOHDS+p7
WuzYVfFaFvfn5bt8uMjO0Lidp4qZ9iVvTT7y4Z8StvarJDW8W7EnvTeXDyUq
l08PH1JHc7W4tOtFfLj3UPVJ5ih1nKO/lvyqjQ8f0pWGSctooMpX4YT5HT60
K8gjPdPRRAqRh3GhTPx43v5GVNptTWx8sPR8Nw8/utLste36oYnXztY8O6TA
jz2HXu29q6GFXxj9wuOs+PFz6SUXZhZtzHMR4vM7y4+7tR0T7+/Xxl8VxEQb
F368tEBSoXPWxvoQuiy+2/yY0zsSNpqnjX+G3u9bDeHHw1fCgwjd2thz0Kzk
z1N+tPF/tee/HW2conzWEpPKj/Ih+2eOAAGXHLTtvT/xY19I8d/p0wTcJHYO
WX3jxwM7hbJWPgSkEQ1w0yjmx0q6LZJvOAF3BYivcNXwo4nDu+kTaQTk7CkN
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
av//l/0HtB/mrg==
       "]]},
     Annotation[#, "Charting`Private`Tag$30250#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-5) Pi, 5 Pi}, {0., 
     24.999817784232416`}}, {{-15.707963267948966`, 15.707963267948966`}, {0.,
     24.999817784232416`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.969077236938281*^9, 3.969077309024438*^9}, {
  3.969077349506988*^9, 3.9690773927149887`*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"231b3fff-26ab-4dd9-9980-0132f7cb8353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%74", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "\[Phi]", "]"}], ",", 
      RowBox[{"HoldForm", "[", "Intensity", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"Interference", " ", "plot"}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[75]:=",ExpressionUUID->"1509c41e-567b-4c6a-bd2e-1934303052cb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KIcKq+7x97/ul0aVs9H77jVSIc5Ntmd+tzTO81BPSwxtzveueVr8hDQmcUia
zc1S4ZOL0QMdY2mUZte5PLlKhbMX6noOG0ijxOjAy9XNeX75vLW2p4405hix
qnJvymPP9T8IVZfGwJ0an0VnqKDh5NqbrSSNXYmVa1t+UqHu7KJ2g6w0niwV
6qWro4KDw73APxLSKK62a2/vSyp8m3qY+kxYGv/SNT5Y9aXCIf+oysP8m/1g
qlb1fR8VPnI9+UbPJY3HitIJfw4qmCSnzJaybNoXOPOToYECRRpZnO700vhd
PWsl4DYFjviesSJWpdCc+3WUuCoFiCeeQVkzUmiGVTvnWxZBs+z2e54/UrjL
Uv24gfsiiH8LnfPpk8LyF67N/HSLwLr4TGWwXQpv69VbfIhcgF+65XGFlVIY
3LcaFLHZDx3WDU0ib6RQZ5CFqi8wD3j5O+29TCkkKkJaqoPn4Fn+ood1tBT6
ctm97HGYheAWxhflQVLIw0/fLfFxBq5NCPTI3pbCo3I3St7Iz4C1mu7euQtS
yPs7mnMmbwpYMi9Jxm6XQspnriN7tMfgWvJoS9eoJP7bS7szYuwHnHtPYdjR
L4m32OeuJG3vBes+JuOMTkmsdOyjj0v5DhqiCpnXqiSxZ+9Pnf6UThDdpvej
v0gS3arP2MftagcW2138+15JIu9bH8F12hb4FXfWf0usJF43jt7FmPcROoq9
SvwfSqKec+sV17FqwE7/8T9+kvhwT/Sqwkgl5M2Gy1h6S2K72Ogbi4S38Iw3
+XjZRUl8t+/Zm2dLBRCsnRsmfUYSG6MqcxuUs+Da4coPwUcl8UUlg0FH63M4
59m0NL1fElPW00r0wqPBOqxH6wRs+g+5LsV39S4QOX/PV+tJopLT5bM3Z51A
s4n6TEVVEkNqiYPtB2lBfIy5I0pKEp+5LP3K2mULrKxbWJYFJDE66xjTO69b
sKikuMORTRIZmz8Usa9Ewq+9+t6NGxLYw3PIPt/8OXSc3529dUECW+M/14uK
vgK8f2Tg6ZgERr6w+LV0/Q3kpTsK0Q9IIMNKg7F50jt4VnPZwq1LAu1JAkkW
9NUQPHjnXmejBCrJqN573v8RrtFElhmjBLoMe+9RPN8E56SeT6aXSKBmMak2
9XMbWO/Ik+d4LYFUboGZBNMvQJx+f9I7RQIH/lT33OHfrNet5si+OAkcLdn/
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
qvSO+eJUFbj3cHRWPeJGuoUx2UGvBlj7z+vCo2fcuHvOWZ2uuhmCV/5MHXnN
jUqSI59aZP4AW9A+n13vuLEgU/epc/NfiGd7uVOTxY2zyid4dep74IucI6dZ
GTeWKKfoS5wdhP25vxNYGsh6/RRWCesYhlJ9Gen6Dm68f9HvUL7/GHTaTWof
n+JG7nKOlCdHZsBp1KyYbYUbG/I2lBLy52DueuaRxh1ujDh6pczy4gLQhXmf
seDiQcHRwpysrWWIFOgY4RDmwbOWi+Wfp8j1K33/tWYZHjxg8V9j/sIaqBF3
Ak/sJ89vbmNwMtyGn0fPM3Mb8uDjFx3dPMYUaNxRGtNqxoNjmn4J6X6UeHb+
4buTjjxYqGEV17pDjeP+U6q8V3iw6vNtBlcrWvRiOv7jjxcP7t37fs+bHDp8
JMldf+oBD+4fdT1a95wRc0++XrT9woOWd7om50bYMLiIcWEmnwcf9VNsLPaw
o5Wi91xQKQ8SnDIsuus5cInCdPrTXx78L9tMMOI3F2pkrI1Q0vDitacnskyX
+TCH6mTnexteHIvxvPkoQwyD3Yo69C7wYv/2rTVmM3G06lBsb3HjRW8Bfdq7
s+K49ImqdSuQFzNZPyv93ieJ6raZdRafePEml3/P2X5pzP6yq3iNkg8vzg98
jbJRxEBBX2I4MzkOMfzSCIMSWoYM/JTk40ORmeg99PlKuGCXX2CmxIc+8dM9
PPzKqEp3KSfZmg/lLtBIRDurIIVHc7aWIx9q3Lb51PRDBRu7DmTVXOHDS+p7
WuzYVfFaFvfn5bt8uMjO0Lidp4qZ9iVvTT7y4Z8StvarJDW8W7EnvTeXDyUq
l08PH1JHc7W4tOtFfLj3UPVJ5ih1nKO/lvyqjQ8f0pWGSctooMpX4YT5HT60
K8gjPdPRRAqRh3GhTPx43v5GVNptTWx8sPR8Nw8/utLste36oYnXztY8O6TA
jz2HXu29q6GFXxj9wuOs+PFz6SUXZhZtzHMR4vM7y4+7tR0T7+/Xxl8VxEQb
F368tEBSoXPWxvoQuiy+2/yY0zsSNpqnjX+G3u9bDeHHw1fCgwjd2thz0Kzk
z1N+tPF/tee/HW2conzWEpPKj/Ih+2eOAAGXHLTtvT/xY19I8d/p0wTcJHYO
WX3jxwM7hbJWPgSkEQ1w0yjmx0q6LZJvOAF3BYivcNXwo4nDu+kTaQTk7CkN
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
av//l/0HtB/mrg==
       "]]},
     Annotation[#, "Charting`Private`Tag$30250#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Phi]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["Intensity", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"Interference", " ", "plot"}], HoldForm], TraditionalForm],
  PlotRange->
   NCache[{{(-5) Pi, 5 Pi}, {0., 
     24.999817784232416`}}, {{-15.707963267948966`, 15.707963267948966`}, {0.,
     24.999817784232416`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.969077733385949*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"32e21820-9459-48e2-a0bb-6378f4f84a89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation using Mathematica ", "Section",
 CellChangeTimes->{{3.969077780629879*^9, 
  3.969077787315364*^9}},ExpressionUUID->"4847a984-80f1-41e2-9da3-\
270b8eeaeec1"],

Cell["\<\
If you ever tried to create an animation with python or any programming \
language then you would know how tough it is, one of the most powerful \
feature of Mathematica is the ease with which animations can be achieved. \
\>", "Text",
 CellChangeTimes->{{3.969077798494116*^9, 
  3.969077908375325*^9}},ExpressionUUID->"b29d8ab5-3085-4040-b7ae-\
5c52decb530f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Animate"}]], "Input",
 CellChangeTimes->{{3.9690779621623707`*^9, 3.969077970156559*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"e757b368-705c-4827-9c2c-80b61b35ea7d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Animate",
              ButtonNote->"paclet:ref/Animate"],
             "\"paclet:ref/Animate\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
an animation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) in which \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) varies continuously from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) takes \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to vary in steps \
\\!\\(\\*StyleBox[\\\"du\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
makes \\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) take on discrete values \\!\
\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), \[Ellipsis]. \
\\n\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) varies all the variables \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\), \[Ellipsis]. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Animate", 
                    "paclet:ref/Animate", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Animate.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Animate.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Alignment", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AnimationDirection", "\[Rule]", "Forward"}]},
                    {
                    RowBox[{"AnimationRate", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "AnimationRepetitions", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"AnimationRunning", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AnimationRunTime", "\[Rule]", "0"}]},
                    {
                    RowBox[{"AnimationTimeIndex", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AppearanceElements", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AutoAction", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AutorunSequencing", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Bookmarks", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ContentSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContinuousAction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControlAlignment", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerLinking", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerMethod", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ControllerPath", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControlPlacement", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControlType", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DefaultBaseStyle", "\[Rule]", "\<\"Animate\"\>"}]},
                    {
                    RowBox[{"DefaultDuration", "\[Rule]", "5.`"}]},
                    {
                    RowBox[{
                    "DefaultLabelStyle", 
                    "\[Rule]", "\<\"AnimateLabel\"\>"}]},
                    {
                    RowBox[{"Deinitialization", "\[RuleDelayed]", "None"}]},
                    {
                    RowBox[{"Deployed", "\[Rule]", "False"}]},
                    {
                    RowBox[{"DisplayAllSteps", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Evaluator", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExcludedContexts", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Exclusions", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameMargins", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0"}]},
                    {
                    RowBox[{"IncludedContexts", "\[Rule]", "All"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Initialization", "\[RuleDelayed]", "None"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LocalizeVariables", "\[Rule]", "True"}]},
                    {
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Paneled", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PausedTime", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "True"}]},
                    {
                    RowBox[{"RefreshRate", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "False"}]},
                    {
                    RowBox[{"SaveDefinitions", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ShrinkingDelay", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "SynchronousInitialization", "\[Rule]", "True"}]},
                    {
                    RowBox[{"SynchronousUpdating", "\[Rule]", "True"}]},
                    {
                    RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}]},
                    {
                    RowBox[{
                    "TouchscreenControlPlacement", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TrackedSymbols", "\[Rule]", "Full"}]},
                    {
                    RowBox[{
                    "UndoTrackedVariables", "\[RuleDelayed]", "None"}]},
                    {
                    RowBox[{"UnsavedVariables", "\[RuleDelayed]", "None"}]},
                    {
                    RowBox[{
                    "UntrackedVariables", "\[RuleDelayed]", "None"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "55", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Alignment", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "55", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Animate\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Animate",
              ButtonNote->"paclet:ref/Animate"],
             "\"paclet:ref/Animate\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
an animation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) in which \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) varies continuously from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) takes \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to vary in steps \
\\!\\(\\*StyleBox[\\\"du\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
makes \\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) take on discrete values \\!\
\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), \[Ellipsis]. \
\\n\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) varies all the variables \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\), \[Ellipsis]. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Animate\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) generates an animation of \!\(\*StyleBox[\"expr\", \
\"TI\"]\) in which \!\(\*StyleBox[\"u\", \"TI\"]\) varies continuously from \
\!\(\*SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Animate\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"u\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"du\", \"TI\"]}], \"}\"}]}], \"]\"}]\) takes \!\(\*StyleBox[\"u\", \
\"TI\"]\) to vary in steps \!\(\*StyleBox[\"du\", \"TI\"]\). \n\!\(\*RowBox[{\
\"Animate\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"u\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) makes \!\
\(\*StyleBox[\"u\", \"TI\"]\) take on discrete values \
\!\(\*SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"1\", \"TR\"]]\), \
\!\(\*SubscriptBox[StyleBox[\"u\", \"TI\"], StyleBox[\"2\", \"TR\"]]\), \
\[Ellipsis]. \n\!\(\*RowBox[{\"Animate\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"u\", \"TI\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"v\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) varies all the \
variables \!\(\*StyleBox[\"u\", \"TI\"]\), \!\(\*StyleBox[\"v\", \"TI\"]\), \
\[Ellipsis]. ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Animate", "Web" -> 
      "http://reference.wolfram.com/language/ref/Animate.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Alignment -> Automatic, AnimationDirection -> Forward, AnimationRate -> 
      Automatic, AnimationRepetitions -> DirectedInfinity[1], 
      AnimationRunning -> True, AnimationRunTime -> 0, AnimationTimeIndex -> 
      Automatic, AppearanceElements -> Automatic, AutoAction -> False, 
      AutorunSequencing -> Automatic, BaselinePosition -> Automatic, 
      BaseStyle -> {}, Bookmarks -> {}, ContentSize -> Automatic, 
      ContinuousAction -> Automatic, ControlAlignment -> Automatic, 
      ControllerLinking -> Automatic, ControllerMethod -> None, 
      ControllerPath -> Automatic, ControlPlacement -> Automatic, ControlType -> 
      Automatic, DefaultBaseStyle -> "Animate", DefaultDuration -> 5., 
      DefaultLabelStyle -> "AnimateLabel", Deinitialization :> None, Deployed -> 
      False, DisplayAllSteps -> False, Evaluator -> Automatic, 
      ExcludedContexts -> Automatic, Exclusions -> {}, Frame -> False, 
      FrameLabel -> None, FrameMargins -> Automatic, ImageMargins -> 0, 
      IncludedContexts -> All, InterpolationOrder -> Automatic, 
      Initialization :> None, LabelStyle -> {}, LocalizeVariables -> True, 
      Method -> {}, Paneled -> True, PausedTime -> Automatic, 
      PreserveImageOptions -> True, RefreshRate -> Automatic, RotateLabel -> 
      False, SaveDefinitions -> False, ShrinkingDelay -> Automatic, 
      SynchronousInitialization -> True, SynchronousUpdating -> True, 
      TouchscreenAutoZoom -> False, TouchscreenControlPlacement -> Automatic, 
      TrackedSymbols -> Full, UndoTrackedVariables :> None, UnsavedVariables :> 
      None, UntrackedVariables :> None}, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`Animate"|>, False]]], "Output",
 CellChangeTimes->{3.969077970470476*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"5e78e851-7c7c-44aa-bd18-e23ca9524679"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s animate a simple wave using the wave equation ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], "\[Psi]"}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["t", "2"]}]], TraditionalForm]], "Text",
  FormatType->TraditionalForm,ExpressionUUID->
  "8b1e0215-13d1-41ed-a398-5463147303a7"],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], "\[Psi]"}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["x", "2"]}]], TraditionalForm]], "Text",
  FormatType->TraditionalForm,ExpressionUUID->
  "a5b2da94-85a1-4637-8802-caeeb3b38258"]
}], "Text",
 CellChangeTimes->{{3.9690779954654837`*^9, 3.969078052834508*^9}, {
  3.969078097812687*^9, 
  3.9690781767597427`*^9}},ExpressionUUID->"c04e65a7-d3b3-47e0-ae74-\
5d24a1dbf99a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Sin", "[", 
   RowBox[{
    RowBox[{"-", "x"}], "+", "t"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Simplest", " ", "solution", " ", "to", " ", "the", " ", "wave", " ", 
    "equation"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.969078191994835*^9, 3.9690782208344727`*^9}, 
   3.9690783059945173`*^9, {3.9690783630577517`*^9, 3.969078449675198*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"df43413b-e448-4bf7-bc9d-40ce287c79aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10", ",", "0.01"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.9690782431680613`*^9, 3.9690782777319927`*^9}, {
  3.969078315357854*^9, 3.969078380918063*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c1a3dac9-d6c1-4ab1-81d1-11b15911beb8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 2.02, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10, 0.01}}, Typeset`size$$ = {
    360., {105., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`\[Psi][$CellContext`x, $CellContext`t$$], \
{$CellContext`x, 0, 10}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 0.01, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{404., {141., 147.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.96907827811063*^9, 3.969078310780283*^9, {3.969078343878612*^9, 
   3.969078404695899*^9}, 3.969078454009672*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"518de116-aa79-406f-908d-9109d497d293"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.969079213710388*^9, 
  3.969079220701684*^9}},ExpressionUUID->"6c130c8e-0a57-404a-8e95-\
08f96fb13477"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"-", "x"}], " ", "+", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.969079130820445*^9, 3.9690791379772663`*^9}, {
  3.969079170337563*^9, 3.969079286672275*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"63abd497-21b5-459c-b75c-9fbc5c8168f7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 4.042752864098947, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {168., 173.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Cos[-$CellContext`x + $CellContext`t$$], {$CellContext`x, 0, 2 
         Pi}, {$CellContext`y, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{404., {205., 210.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.969079131870709*^9, 3.969079138442848*^9}, {
  3.969079172063464*^9, 3.9690791992478237`*^9}, {3.96907923276511*^9, 
  3.969079287133012*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"14401c75-44dc-437c-a126-f89294fd693a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.969079110974573*^9, 
  3.969079119764793*^9}},ExpressionUUID->"e5891e2c-dc11-439a-91d7-\
2a4a06914dd0"]
}, Open  ]],

Cell["Here we conclude our first chapter. ", "Chapter",
 CellChangeTimes->{{3.969081489332889*^9, 3.9690815453880367`*^9}, {
  3.969081652085691*^9, 
  3.969081656828743*^9}},ExpressionUUID->"45283982-e8cd-402a-8779-\
c65504d4cffe"]
}, Open  ]],

Cell["", "Title",ExpressionUUID->"97b11c47-0cd7-4321-937a-ed64078b151a"]
},
WindowSize->{808, 1305},
WindowMargins->{{-2019, Automatic}, {1, Automatic}},
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d5ce9839-8f18-4599-bdea-b3b8ca32ecc0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 192, 3, 160, "Title",ExpressionUUID->"c22bb9c2-068d-4986-8f86-2fc12061bbc8"],
Cell[775, 27, 331, 7, 85, "Subtitle",ExpressionUUID->"60b570bd-f37b-49c7-9b54-5b7f98a5b12d"],
Cell[CellGroupData[{
Cell[1131, 38, 209, 4, 67, "Section",ExpressionUUID->"ac48bca8-b724-40f9-8a03-b699ee36d271"],
Cell[CellGroupData[{
Cell[1365, 46, 729, 18, 73, "Input",ExpressionUUID->"bd78cf76-a106-4653-aecf-41510a4c8f23"],
Cell[2097, 66, 215, 2, 34, "Output",ExpressionUUID->"4eacbb59-a6a6-49d6-9a09-002e8a39689b"]
}, Open  ]],
Cell[2327, 71, 513, 10, 127, "Text",ExpressionUUID->"af429fb5-923a-4817-84b6-6ffdd6884b94"],
Cell[CellGroupData[{
Cell[2865, 85, 146, 2, 30, "Input",ExpressionUUID->"87c44d11-e834-4e77-85cf-4cf25248d795"],
Cell[3014, 89, 193, 2, 34, "Output",ExpressionUUID->"7ce215ba-99fc-4150-bb69-3b97044139ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3244, 96, 195, 3, 30, "Input",ExpressionUUID->"943bb4f6-86d7-4fa3-b6d6-ea87ad8a25bb"],
Cell[3442, 101, 193, 2, 34, "Output",ExpressionUUID->"8cf263aa-5a55-4cdb-b39e-3940a5884778"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3672, 108, 172, 2, 30, "Input",ExpressionUUID->"39a9892c-93db-48f2-a1c2-6ff8bc720922"],
Cell[3847, 112, 167, 2, 34, "Output",ExpressionUUID->"50afe767-9e22-407b-bb2d-3b0943c3884f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4063, 120, 298, 7, 105, "Section",ExpressionUUID->"a139f78b-43de-44b9-bb98-3248d02ffdbe"],
Cell[4364, 129, 1036, 17, 322, "Text",ExpressionUUID->"30fcc52e-386d-46bc-afaf-3d37123d6b37"],
Cell[CellGroupData[{
Cell[5425, 150, 254, 5, 30, "Input",ExpressionUUID->"a21d794d-85af-4a4d-a386-df4754e4b570"],
Cell[5682, 157, 227, 5, 34, "Output",ExpressionUUID->"60db0660-19dc-4f1f-b92e-49dffa5a5788"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5946, 167, 334, 8, 30, "Input",ExpressionUUID->"9c784d72-124a-4b70-a85f-c88abaa28b98"],
Cell[6283, 177, 352, 9, 34, "Output",ExpressionUUID->"a3a3798f-5932-4b30-89c8-a98954f53be2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6672, 191, 206, 3, 30, "Input",ExpressionUUID->"951ebbb3-d476-4aa8-831e-9e1cf8d4d8c2"],
Cell[6881, 196, 228, 5, 34, "Output",ExpressionUUID->"4dbac893-625e-4133-8751-9a4c3b496adb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7146, 206, 206, 3, 30, "Input",ExpressionUUID->"6777951c-2caa-433d-ab00-2cdd0bae73dc"],
Cell[7355, 211, 219, 5, 34, "Output",ExpressionUUID->"9075bfb5-9550-46d4-b182-9b2d5ecf12dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7611, 221, 209, 3, 30, "Input",ExpressionUUID->"f496d3d2-96b2-4a99-a497-cffbece5d088"],
Cell[7823, 226, 243, 5, 34, "Output",ExpressionUUID->"abaa9b30-f78c-4475-94e9-3475f43f4be8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8103, 236, 286, 6, 30, "Input",ExpressionUUID->"39cea3b5-dfd3-4f85-9ebe-c81d97096f6b"],
Cell[8392, 244, 247, 5, 34, "Output",ExpressionUUID->"71ed0c3f-3599-443f-b05b-5f3bed6aa8ee"]
}, Open  ]],
Cell[8654, 252, 333, 7, 58, "Text",ExpressionUUID->"d6479335-e5d0-4179-a6f9-810aceea9a57"],
Cell[CellGroupData[{
Cell[9012, 263, 285, 6, 30, "Input",ExpressionUUID->"6a113143-ef54-4f6f-9151-4843802f86a6"],
Cell[9300, 271, 219, 5, 34, "Output",ExpressionUUID->"a3a30c50-404e-4064-b95e-861b8bd978a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9556, 281, 731, 20, 52, "Input",ExpressionUUID->"e0ce6c02-715c-4b92-9f3d-6e7491da370c"],
Cell[10290, 303, 283, 7, 34, "Output",ExpressionUUID->"12fcdae5-e1bd-4a89-b030-7c287dc8cd4c"]
}, Open  ]],
Cell[10588, 313, 681, 13, 173, "Text",ExpressionUUID->"f3643784-47e3-435d-a7f8-fdd57d9a70e2"],
Cell[CellGroupData[{
Cell[11294, 330, 355, 9, 30, "Input",ExpressionUUID->"6f4766cb-cb51-40db-b07b-6051ecdac398"],
Cell[11652, 341, 151, 2, 34, "Output",ExpressionUUID->"d064466a-bd55-4896-9f15-c1335bf01a14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11840, 348, 286, 6, 30, "Input",ExpressionUUID->"406b7817-44bd-44cd-b910-efc020fe0d22"],
Cell[12129, 356, 225, 4, 34, "Output",ExpressionUUID->"b8e1a489-0abb-42b3-a84b-5dd8ac3f353b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12391, 365, 208, 3, 30, "Input",ExpressionUUID->"cc4a3be7-db1c-4e56-a01f-85b0a35194e3"],
Cell[12602, 370, 367, 9, 34, "Output",ExpressionUUID->"042445c2-42af-497e-a11f-f980f5202c97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13006, 384, 306, 7, 30, "Input",ExpressionUUID->"02b9b49c-6594-46df-b7e8-f2f1151628fb"],
Cell[13315, 393, 413, 11, 34, "Output",ExpressionUUID->"d3a52ef7-295d-4ad1-9c35-461e56e882f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13765, 409, 210, 3, 30, "Input",ExpressionUUID->"cdde7b44-c6c7-4f22-994e-f0992f4ff618"],
Cell[13978, 414, 349, 9, 34, "Output",ExpressionUUID->"2e4f7043-586e-4feb-9d9c-c27db3373639"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14364, 428, 208, 3, 30, "Input",ExpressionUUID->"9e043960-551d-4d1c-9f4f-fec41247c104"],
Cell[14575, 433, 333, 9, 34, "Output",ExpressionUUID->"bc5a7e35-12db-4f12-8b7e-ec765017df51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14945, 447, 208, 3, 30, "Input",ExpressionUUID->"bc045df8-34ff-469f-802b-df1fc1d58aa5"],
Cell[15156, 452, 201, 4, 34, "Output",ExpressionUUID->"08c0e8c0-1707-4877-884d-23cbca749e83"]
}, Open  ]],
Cell[15372, 459, 252, 6, 35, "Text",ExpressionUUID->"fa98e94c-3401-49f2-9469-3b7f37f95005"],
Cell[15627, 467, 537, 11, 173, "Text",ExpressionUUID->"efb4a92a-371b-4e1d-aa48-7a793b57c8f0"],
Cell[CellGroupData[{
Cell[16189, 482, 707, 19, 30, "Input",ExpressionUUID->"db8ee97e-e97e-44ca-8f61-d2b2278531e4"],
Cell[16899, 503, 443, 12, 54, "Output",ExpressionUUID->"990f1df0-f090-4a10-85ab-a7f525946cb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17379, 520, 203, 3, 30, "Input",ExpressionUUID->"10f4eec9-ec73-4104-873c-504b058a9e54"],
Cell[17585, 525, 246, 5, 49, "Output",ExpressionUUID->"578afe7a-66a0-4a3d-9dbd-b733ae355d98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17868, 535, 206, 3, 30, "Input",ExpressionUUID->"7278fee3-e054-46a4-a8a3-ac8eac47a0ea"],
Cell[18077, 540, 214, 4, 49, "Output",ExpressionUUID->"2155faf8-832f-456f-87dc-ee16f2d78cf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18328, 549, 210, 4, 30, "Input",ExpressionUUID->"0ead869f-7b2e-469b-a998-6efb604f6051"],
Cell[18541, 555, 214, 4, 49, "Output",ExpressionUUID->"67c3e8e5-b1d4-495f-84e6-e3605c3b6118"]
}, Open  ]],
Cell[18770, 562, 352, 7, 58, "Text",ExpressionUUID->"1f804d6c-1dc3-4370-a2e0-f67a270f5f53"],
Cell[CellGroupData[{
Cell[19147, 573, 207, 3, 30, "Input",ExpressionUUID->"d0efffbd-2dda-4367-9f5e-92f758a08f93"],
Cell[19357, 578, 308, 7, 34, "Output",ExpressionUUID->"814029da-40c1-44aa-871b-2a80695dda89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19702, 590, 209, 3, 30, "Input",ExpressionUUID->"ab2c942e-836e-499d-b8be-6b0d6a54b5c8"],
Cell[19914, 595, 275, 6, 34, "Output",ExpressionUUID->"2c706f98-c67d-446f-aad9-b449f3e48892"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20226, 606, 326, 6, 30, "Input",ExpressionUUID->"f35db193-469a-4bef-9f8c-4a896a514255"],
Cell[20555, 614, 359, 8, 34, "Output",ExpressionUUID->"4406f3a2-2e4b-46b6-8259-1d2d65c2cd42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20951, 627, 736, 15, 52, "Input",ExpressionUUID->"8fa1aa5d-d0da-4601-89e3-2dc96f3e6d4b"],
Cell[21690, 644, 149, 2, 34, "Output",ExpressionUUID->"cd72c64f-a58b-4c87-80d4-af5f9e34eded"]
}, Open  ]],
Cell[21854, 649, 470, 10, 104, "Text",ExpressionUUID->"64ca2747-82fb-43c2-9b4b-1a1b2127342b"],
Cell[CellGroupData[{
Cell[22349, 663, 190, 3, 30, "Input",ExpressionUUID->"e5f95c0f-9401-4303-ba26-c76f04748bd0"],
Cell[22542, 668, 27589, 553, 235, "Output",ExpressionUUID->"e8d2d2db-7b72-4c70-b39d-9db69069baee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50168, 1226, 434, 13, 30, "Input",ExpressionUUID->"bc41904a-9c29-47e4-9ec8-627c6995ca43"],
Cell[50605, 1241, 221, 4, 53, "Output",ExpressionUUID->"dfd3c615-0bd1-4c0f-8a55-f9543dc9a014"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50875, 1251, 169, 3, 67, "Section",ExpressionUUID->"a745c318-91c9-4124-bf6d-ea91e325f890"],
Cell[51047, 1256, 1276, 32, 211, "Text",ExpressionUUID->"9b0f7551-6c51-467d-8315-f87dd14ca8d9"],
Cell[CellGroupData[{
Cell[52348, 1292, 189, 3, 30, "Input",ExpressionUUID->"71eaebde-d845-4340-8b5e-30c9b0ec6a94"],
Cell[52540, 1297, 21300, 424, 219, "Output",ExpressionUUID->"ee403ebe-271b-4a5b-8980-17ea0eff33f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73877, 1726, 246, 5, 30, "Input",ExpressionUUID->"309e6c35-8485-4285-944e-51330838b4c3"],
Cell[74126, 1733, 171, 3, 34, "Output",ExpressionUUID->"01c37a65-941b-4bfa-a0b4-f254bc1174fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74334, 1741, 359, 9, 30, "Input",ExpressionUUID->"d631411f-b17c-40e1-bf51-81af9496702a"],
Cell[74696, 1752, 489, 13, 34, "Output",ExpressionUUID->"e44a1770-3114-4507-a913-307bde61bf2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75222, 1770, 609, 16, 73, "Input",ExpressionUUID->"f7dbf8d6-37a7-423d-88d9-68aa5102d4d5"],
Cell[75834, 1788, 622, 16, 38, "Output",ExpressionUUID->"68e17f30-36bc-4c15-bbf0-cfe6c999a1d6"]
}, Open  ]],
Cell[76471, 1807, 309, 7, 58, "Text",ExpressionUUID->"8b3a6371-202e-4f10-99e4-1f51a04f31b3"],
Cell[CellGroupData[{
Cell[76805, 1818, 199, 3, 30, "Input",ExpressionUUID->"8986cd60-deb2-456f-85be-dff19b6ff957"],
Cell[77007, 1823, 24079, 499, 188, "Output",ExpressionUUID->"f9fce877-0442-456e-8f1a-eadff24b4455"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101123, 2327, 284, 6, 30, "Input",ExpressionUUID->"182b8f43-6ab9-4958-9d45-743cd2707f98"],
Cell[101410, 2335, 253, 5, 34, "Output",ExpressionUUID->"0e4017d8-482a-4668-95c6-51ebdefdfa37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101700, 2345, 230, 4, 30, "Input",ExpressionUUID->"928d5f29-083f-4d11-b96e-f49d15559a73"],
Cell[101933, 2351, 371, 10, 53, "Output",ExpressionUUID->"1d32d120-115e-4493-8fe2-4f1c8886bb18"]
}, Open  ]],
Cell[102319, 2364, 247, 4, 35, "Text",ExpressionUUID->"5f2e2ef7-db56-4036-95b9-020bba8a2f9c"],
Cell[CellGroupData[{
Cell[102591, 2372, 382, 9, 30, "Input",ExpressionUUID->"20de9b97-2fce-4e80-80d2-d602c22790d1"],
Cell[102976, 2383, 184, 4, 53, "Output",ExpressionUUID->"caed8ac5-726c-4066-9d0f-b6f44d6ca3df"]
}, Open  ]],
Cell[103175, 2390, 198, 3, 35, "Text",ExpressionUUID->"25d709eb-4d4f-4b3b-ba7d-eddac7647636"],
Cell[CellGroupData[{
Cell[103398, 2397, 378, 10, 30, "Input",ExpressionUUID->"915e6df3-3877-401c-ac68-61a22afbb61f"],
Cell[103779, 2409, 207, 4, 34, "Output",ExpressionUUID->"b489d967-0980-42a1-a8c8-e1253ba4e30a"]
}, Open  ]],
Cell[104001, 2416, 240, 6, 35, "Text",ExpressionUUID->"0fbc72e5-4290-4d58-9067-4c4fde242930"],
Cell[CellGroupData[{
Cell[104266, 2426, 313, 7, 30, "Input",ExpressionUUID->"45e8e911-e2b7-487a-a4a7-b283ed2e8e24"],
Cell[104582, 2435, 311, 7, 49, "Output",ExpressionUUID->"a4f46e6a-d151-43f7-a70d-bf8f8422d96c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104930, 2447, 199, 3, 30, "Input",ExpressionUUID->"274f0cfd-ff05-410b-9e80-96163b5d4125"],
Cell[105132, 2452, 166, 2, 34, "Output",ExpressionUUID->"6e3f49e6-c0a9-4bc7-b662-2391dfd8fa7e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105347, 2460, 167, 3, 67, "Section",ExpressionUUID->"8f022b1d-9cb6-47db-98e7-73e35af2cb12"],
Cell[105517, 2465, 438, 10, 30, "Input",ExpressionUUID->"c50985c3-d8e3-4dd5-9e14-0efc09b11494"],
Cell[CellGroupData[{
Cell[105980, 2479, 198, 3, 30, "Input",ExpressionUUID->"7ae5f86c-5e0e-442e-a28a-b6ca6d4ef733"],
Cell[106181, 2484, 148, 2, 34, "Output",ExpressionUUID->"3b0104e0-a6bf-47ff-b0a7-d9e4636bd789"]
}, Open  ]],
Cell[106344, 2489, 213, 4, 35, "Text",ExpressionUUID->"925b8408-ff25-440c-be7b-8ec0c33abc13"],
Cell[106560, 2495, 387, 10, 30, "Input",ExpressionUUID->"19885bde-1c4b-4cea-805d-ef696a9c998a"],
Cell[CellGroupData[{
Cell[106972, 2509, 204, 3, 30, "Input",ExpressionUUID->"07f4a20e-97e9-4199-a483-c5cb1d54b539"],
Cell[107179, 2514, 219, 4, 34, "Output",ExpressionUUID->"2e0ceaf2-d8b7-4305-916c-9014525d8a56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107435, 2523, 228, 4, 30, "Input",ExpressionUUID->"1df8877a-8f8e-49ba-b7db-db1b37172069"],
Cell[107666, 2529, 461, 12, 37, "Output",ExpressionUUID->"02d1deb2-1b94-4b7b-95dc-ab4cfabfb914"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108164, 2546, 282, 6, 30, "Input",ExpressionUUID->"d97d0bc5-6c35-42b2-ae62-e81454d55f4c"],
Cell[108449, 2554, 664, 17, 37, "Output",ExpressionUUID->"d6f91e40-3544-408c-87d7-1635cd3d851f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109150, 2576, 349, 8, 30, "Input",ExpressionUUID->"cf2fe5d5-8b09-4c8f-a26c-a86c3b510863"],
Cell[109502, 2586, 326, 7, 34, "Output",ExpressionUUID->"b052c7dd-a975-4022-ab1b-4d6f9c5550bf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109877, 2599, 169, 3, 67, "Section",ExpressionUUID->"810711e8-4849-419b-8548-c1a61fc17b65"],
Cell[110049, 2604, 507, 12, 104, "Text",ExpressionUUID->"e3e91f11-f94b-4005-894f-915ff3f80fcc"],
Cell[CellGroupData[{
Cell[110581, 2620, 193, 3, 30, "Input",ExpressionUUID->"12869dc0-b7e9-41e0-bede-cd02f3351920"],
Cell[110777, 2625, 18949, 429, 119, "Output",ExpressionUUID->"435f1ce9-160c-41f9-b1de-90fa5b4abe56"]
}, Open  ]],
Cell[129741, 3057, 321, 9, 35, "Text",ExpressionUUID->"985a55ed-8051-4704-8dfa-d7bc7207e0d8"],
Cell[CellGroupData[{
Cell[130087, 3070, 338, 7, 30, "Input",ExpressionUUID->"45537f44-ab6c-4145-bc20-6913918c9435"],
Cell[130428, 3079, 254, 6, 34, "Output",ExpressionUUID->"066bd26f-9e30-41c3-bd30-d293c25d79eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130719, 3090, 269, 5, 30, "Input",ExpressionUUID->"5bb35c53-f72c-40fc-8b16-e31ee1833fe2"],
Cell[130991, 3097, 740, 24, 55, "Output",ExpressionUUID->"6072097f-7f89-4b4b-9294-04b64f177be9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131768, 3126, 386, 9, 30, "Input",ExpressionUUID->"54eb736d-fac2-4ab7-b072-72a91f2ac5ae"],
Cell[132157, 3137, 345, 8, 34, "Output",ExpressionUUID->"9e10bfe3-504a-47a0-a75b-fb3a42516d2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132539, 3150, 254, 5, 30, "Input",ExpressionUUID->"d5f4897a-7f1a-42d3-a120-79852594eb53"],
Cell[132796, 3157, 1811, 61, 87, "Output",ExpressionUUID->"ed7c48c1-366b-4d7a-9f48-2cc5237ff870"]
}, Open  ]],
Cell[134622, 3221, 192, 3, 35, "Text",ExpressionUUID->"40e8b2b7-8ece-4afe-b538-c911ce877bde"],
Cell[CellGroupData[{
Cell[134839, 3228, 234, 4, 30, "Input",ExpressionUUID->"fca85251-8ce8-4329-aa07-88514f27a55a"],
Cell[135076, 3234, 927, 23, 56, "Output",ExpressionUUID->"0a6ede97-3cd7-4003-aad7-e0a304f4634b"]
}, Open  ]],
Cell[136018, 3260, 227, 4, 30, "Input",ExpressionUUID->"bd3707a8-09fe-40ef-bee0-329d2146d4b9"],
Cell[136248, 3266, 247, 4, 35, "Text",ExpressionUUID->"94e5efba-8081-4596-872a-4691cd195462"],
Cell[CellGroupData[{
Cell[136520, 3274, 285, 6, 30, "Input",ExpressionUUID->"5e9a4550-8b5a-4532-81a9-bb6c7992d01e"],
Cell[136808, 3282, 360, 9, 28, "Message",ExpressionUUID->"d5bc3d89-b463-4943-bd36-adc2e8acee2d"],
Cell[137171, 3293, 268, 6, 34, "Output",ExpressionUUID->"8e0a7733-1028-488a-804b-8d0d7001599c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137476, 3304, 260, 6, 30, "Input",ExpressionUUID->"75d88101-2e37-4137-98b5-3c76d0a45d13"],
Cell[137739, 3312, 362, 9, 28, "Message",ExpressionUUID->"0cfc5d35-b20c-49c0-a182-6acf50864c34"],
Cell[138104, 3323, 269, 6, 34, "Output",ExpressionUUID->"63ab751e-8b67-4471-9f2d-45b8e998559f"]
}, Open  ]],
Cell[138388, 3332, 459, 11, 81, "Text",ExpressionUUID->"9843f0b1-ecb1-47d1-976d-d5c51ea14130"],
Cell[CellGroupData[{
Cell[138872, 3347, 198, 3, 30, "Input",ExpressionUUID->"677cdc12-70dd-430d-841a-d89e9a4d4910"],
Cell[139073, 3352, 25546, 529, 168, "Output",ExpressionUUID->"06b8d2e4-631a-4da8-b871-86c87b75fd03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164656, 3886, 335, 8, 30, "Input",ExpressionUUID->"dd6ef867-075c-4a52-ab2d-957fe938a9fa"],
Cell[164994, 3896, 246, 4, 34, "Output",ExpressionUUID->"800a9ef1-0fcc-43a7-a16a-f799837510fc"]
}, Open  ]],
Cell[165255, 3903, 1008, 17, 219, "Text",ExpressionUUID->"cc1c5511-d1d0-4214-a272-47a94636de58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166300, 3925, 174, 3, 67, "Section",ExpressionUUID->"272b28be-f9b4-4c68-94e4-2c698c2f17f8"],
Cell[166477, 3930, 430, 8, 81, "Text",ExpressionUUID->"5630f673-40f2-4621-827c-a652d61ffa98"],
Cell[CellGroupData[{
Cell[166932, 3942, 162, 3, 54, "Subsection",ExpressionUUID->"b0cd9b69-4b32-471b-be32-f2b4059c23dc"],
Cell[CellGroupData[{
Cell[167119, 3949, 192, 3, 30, "Input",ExpressionUUID->"6e4c0b21-4611-4c6d-8ed0-c8b79a1ae919"],
Cell[167314, 3954, 30995, 651, 167, "Output",ExpressionUUID->"e937a2f0-ebb2-49a0-910a-a3d0056d66a1"]
}, Open  ]],
Cell[198324, 4608, 401, 10, 30, "Input",ExpressionUUID->"e7d86969-48b4-4fbe-87db-031d62cfe2bd"],
Cell[CellGroupData[{
Cell[198750, 4622, 678, 16, 52, "Input",ExpressionUUID->"d4ca1e97-6bc4-4401-b4c7-54bdc281c869"],
Cell[199431, 4640, 25863, 443, 231, "Output",ExpressionUUID->"dbd69242-d953-45c3-b9a9-bc2261c1b0d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225343, 5089, 167, 3, 54, "Subsection",ExpressionUUID->"11a176d1-d527-43ff-852d-eef157434fe5"],
Cell[CellGroupData[{
Cell[225535, 5096, 312, 5, 30, "Text",ExpressionUUID->"499b836c-9f8c-479f-a738-1cdb0c792588"],
Cell[225850, 5103, 39342, 767, 245, "Output",ExpressionUUID->"6aa6e83a-c223-4150-95b2-ba88b5410955"]
}, Open  ]],
Cell[265207, 5873, 258, 6, 58, "Text",ExpressionUUID->"7d6ea3c3-c109-421c-bb1a-5950632b9dea"],
Cell[CellGroupData[{
Cell[265490, 5883, 482, 12, 30, "Input",ExpressionUUID->"ad919824-f34f-4dfe-ae53-5037ba6183e0"],
Cell[265975, 5897, 19453, 333, 377, "Output",ExpressionUUID->"8a9dcaed-1a1d-4eea-866b-f9c9a80be5ad"]
}, Open  ]],
Cell[285443, 6233, 226, 5, 35, "Text",ExpressionUUID->"22dc45dc-9293-43a7-af15-c543437b8668"],
Cell[CellGroupData[{
Cell[285694, 6242, 455, 12, 30, "Input",ExpressionUUID->"b105d055-2a60-4f24-a7d7-e4dba69ed495"],
Cell[286152, 6256, 23627, 401, 377, "Output",ExpressionUUID->"cb600e0c-954a-41d1-86f1-75841ef9a064"]
}, Open  ]],
Cell[309794, 6660, 238, 6, 35, "Text",ExpressionUUID->"d972dd76-c8f2-4490-8ed3-86884c7a6495"],
Cell[CellGroupData[{
Cell[310057, 6670, 663, 19, 30, "Input",ExpressionUUID->"89eb55d2-902b-45a9-9eae-55fe8a438af8"],
Cell[310723, 6691, 32409, 545, 252, "Output",ExpressionUUID->"95f4e466-ebb3-4f8c-b952-4a07a2eb9044"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343181, 7242, 173, 3, 54, "Subsection",ExpressionUUID->"d41f0b27-f0d5-42e4-9606-6a2f9bdd39c5"],
Cell[343357, 7247, 628, 11, 127, "Text",ExpressionUUID->"00f7a59c-23b3-4211-83a1-cd37bd1db910"],
Cell[CellGroupData[{
Cell[344010, 7262, 199, 3, 30, "Input",ExpressionUUID->"a4d783e2-6990-488e-8823-da240b365f21"],
Cell[344212, 7267, 33906, 697, 167, "Output",ExpressionUUID->"d107f240-f338-43d9-8020-94639a8ba6e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378155, 7969, 201, 3, 30, "Input",ExpressionUUID->"301e968e-5794-4d89-98dc-b11e07f54244"],
Cell[378359, 7974, 27892, 607, 119, "Output",ExpressionUUID->"2dee76cd-d34c-44e0-883f-64bfded2214f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406288, 8586, 478, 13, 30, "Input",ExpressionUUID->"35e68711-4f5e-43dc-ae5a-bd073cfb6838"],
Cell[406769, 8601, 129139, 2193, 373, "Output",ExpressionUUID->"de731507-e9bb-4653-a77d-38bbe2c37f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535945, 10799, 476, 13, 30, "Input",ExpressionUUID->"ab1237ca-a1fe-4f1c-b7ba-0196b2bfa983"],
Cell[536424, 10814, 33157, 563, 373, "Output",ExpressionUUID->"9d56a96c-3de9-4547-934c-d82a0ca283bf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569630, 11383, 159, 3, 54, "Subsection",ExpressionUUID->"f6d4f956-764c-46a6-b677-ce6266283efa"],
Cell[CellGroupData[{
Cell[569814, 11390, 200, 4, 30, "Input",ExpressionUUID->"14afeb03-2a7f-4686-ac3e-710ae166c52e"],
Cell[570017, 11396, 35209, 731, 167, "Output",ExpressionUUID->"2afb9474-0bfa-426f-97e3-57725ea11bb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605263, 12132, 545, 15, 30, "Input",ExpressionUUID->"55510d4f-afe2-4027-b41c-9c43b29cfffc"],
Cell[605811, 12149, 91892, 1497, 346, "Output",ExpressionUUID->"02f43d60-544b-4cc4-a1da-1cc2b9ad61b4"]
}, Open  ]],
Cell[697718, 13649, 259, 4, 30, "Text",ExpressionUUID->"9108ccd7-e2e2-41ea-9fc9-de52f7922218"],
Cell[CellGroupData[{
Cell[698002, 13657, 210, 4, 30, "Input",ExpressionUUID->"53478e5a-3557-4370-a1b6-fdf0702618e9"],
Cell[698215, 13663, 36093, 737, 218, "Output",ExpressionUUID->"c70f31ea-0d46-403c-9329-735289a522fd"]
}, Open  ]],
Cell[734323, 14403, 176, 3, 35, "Text",ExpressionUUID->"e9e752c1-bcbc-46fd-92c7-8e7c7b6f4bd8"],
Cell[CellGroupData[{
Cell[734524, 14410, 488, 13, 30, "Input",ExpressionUUID->"6fa70a46-dac1-43ed-a2a3-be2e347a1ed8"],
Cell[735015, 14425, 49709, 830, 370, "Output",ExpressionUUID->"42acebbe-f85f-4e41-9ce6-c12cb886193d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[784761, 15260, 722, 21, 30, "Input",ExpressionUUID->"ab816f14-c469-4e80-b1b1-4d1a9074fff0"],
Cell[785486, 15283, 49675, 828, 387, "Output",ExpressionUUID->"65728dd5-be8b-469f-a3d2-7575122a5781"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835198, 16116, 606, 17, 30, "Input",ExpressionUUID->"72990ea7-a121-4a06-a840-076c60917477"],
Cell[835807, 16135, 49746, 830, 528, "Output",ExpressionUUID->"6f817007-396f-4ed9-b283-5337800325ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885590, 16970, 681, 19, 30, "Input",ExpressionUUID->"6126dffb-df9f-4f21-9d55-eca17b27ee33"],
Cell[886274, 16991, 103779, 1699, 372, "Output",ExpressionUUID->"6fd5a12e-80ac-4abd-a632-a7aaf4c426a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[990114, 18697, 161, 3, 67, "Section",ExpressionUUID->"b9ca7190-6e5a-442f-8927-551a43240abb"],
Cell[990278, 18702, 389, 8, 58, "Text",ExpressionUUID->"4b19bc82-35aa-4c53-820f-20a53d4b0cc0"],
Cell[CellGroupData[{
Cell[990692, 18714, 257, 5, 30, "Input",ExpressionUUID->"6c0083e9-7a51-4bbb-b07a-47c9bd755fa5"],
Cell[990952, 18721, 228, 4, 34, "Output",ExpressionUUID->"9b6daad0-d233-4386-94bd-9453ae3303d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991217, 18730, 199, 3, 30, "Input",ExpressionUUID->"080bb0c3-0eed-433b-9239-56eba8608e77"],
Cell[991419, 18735, 148, 2, 34, "Output",ExpressionUUID->"a1a84f52-f3fa-498c-91fc-03efe294e086"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991604, 18742, 198, 3, 30, "Input",ExpressionUUID->"c4a2d02a-3b33-4450-b171-113d98fceb32"],
Cell[991805, 18747, 148, 2, 34, "Output",ExpressionUUID->"f6f8023f-993f-4fea-9746-2d367b426222"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991990, 18754, 208, 3, 30, "Input",ExpressionUUID->"90ff8ed1-0bcc-4895-a14a-29766ba0678a"],
Cell[992201, 18759, 207, 4, 34, "Output",ExpressionUUID->"7709c20d-b947-4455-be3f-a5258cb13555"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992445, 18768, 200, 3, 30, "Input",ExpressionUUID->"0ff97a13-1f9f-49d9-b6d4-37d46884bcf7"],
Cell[992648, 18773, 148, 2, 34, "Output",ExpressionUUID->"b7447658-8723-490d-a681-119e69902d21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992833, 18780, 201, 3, 30, "Input",ExpressionUUID->"565b1a9d-95ae-4511-a6e1-8afa96c433b9"],
Cell[993037, 18785, 226, 4, 50, "Output",ExpressionUUID->"073df008-13c2-45c5-8534-5c952cb242d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993300, 18794, 347, 8, 30, "Input",ExpressionUUID->"e7af8383-30d6-47fc-aac7-6ac2968c70bd"],
Cell[993650, 18804, 280, 6, 34, "Output",ExpressionUUID->"af5b5494-440f-4283-8fc8-03c22eeb2f70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993967, 18815, 210, 3, 30, "Input",ExpressionUUID->"9529144f-2de7-4410-961e-39b0d9ec47d3"],
Cell[994180, 18820, 334, 7, 34, "Output",ExpressionUUID->"8c5d53f8-66f4-4259-9ba1-ae55e5bb81af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[994551, 18832, 308, 7, 30, "Input",ExpressionUUID->"bfe9c9a6-4418-4cf6-bf6c-8a6f3b5abf62"],
Cell[994862, 18841, 1203, 34, 56, "Output",ExpressionUUID->"14d16e7d-825f-4e09-ae08-98652c4cb497"]
}, Open  ]],
Cell[996080, 18878, 696, 16, 41, "Text",ExpressionUUID->"4eef11ab-3476-4a27-98f3-834510b397a6"],
Cell[CellGroupData[{
Cell[996801, 18898, 744, 18, 52, "Input",ExpressionUUID->"202c11a0-9622-413e-b80b-2ba2567de99c"],
Cell[997548, 18918, 471, 12, 55, "Output",ExpressionUUID->"b484354e-46fc-43ce-8702-313413eb892a"]
}, Open  ]],
Cell[998034, 18933, 838, 21, 52, "Input",ExpressionUUID->"f0e826f4-65f7-4df8-81e8-0d52e8a5899a"],
Cell[998875, 18956, 343, 7, 35, "Text",ExpressionUUID->"0084c9ad-9abf-44d4-bf9a-9263e7582d2e"],
Cell[CellGroupData[{
Cell[999243, 18967, 486, 11, 30, "Input",ExpressionUUID->"89b260b5-4268-49a9-89e9-42164cd21bd1"],
Cell[999732, 18980, 511, 12, 49, "Output",ExpressionUUID->"21d5f5ab-4bda-4dc3-985c-dd1a0075b411"]
}, Open  ]],
Cell[1000258, 18995, 456, 11, 30, "Input",ExpressionUUID->"14c6bc3f-b826-46a4-a0da-465c256cbb67"],
Cell[1000717, 19008, 506, 14, 41, "Text",ExpressionUUID->"65f2b608-9e8b-46aa-9550-9359cc69abbc"],
Cell[CellGroupData[{
Cell[1001248, 19026, 530, 13, 30, "Input",ExpressionUUID->"f030f9bc-c10c-4abd-aa08-26204b8f480e"],
Cell[1001781, 19041, 47384, 797, 245, "Output",ExpressionUUID->"231b3fff-26ab-4dd9-9980-0132f7cb8353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049202, 19843, 691, 17, 73, "Input",ExpressionUUID->"1509c41e-567b-4c6a-bd2e-1934303052cb"],
Cell[1049896, 19862, 47605, 805, 272, "Output",ExpressionUUID->"32e21820-9459-48e2-a0bb-6378f4f84a89"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097550, 20673, 173, 3, 67, "Section",ExpressionUUID->"4847a984-80f1-41e2-9da3-270b8eeaeec1"],
Cell[1097726, 20678, 371, 7, 81, "Text",ExpressionUUID->"b29d8ab5-3085-4040-b7ae-5c52decb530f"],
Cell[CellGroupData[{
Cell[1098122, 20689, 197, 3, 30, "Input",ExpressionUUID->"e757b368-705c-4827-9c2c-80b61b35ea7d"],
Cell[1098322, 20694, 30400, 630, 167, "Output",ExpressionUUID->"5e78e851-7c7c-44aa-bd18-e23ca9524679"]
}, Open  ]],
Cell[1128737, 21327, 863, 25, 47, "Text",ExpressionUUID->"c04e65a7-d3b3-47e0-ae74-5d24a1dbf99a"],
Cell[1129603, 21354, 541, 13, 30, "Input",ExpressionUUID->"df43413b-e448-4bf7-bc9d-40ce287c79aa"],
Cell[CellGroupData[{
Cell[1130169, 21371, 549, 15, 30, "Input",ExpressionUUID->"c1a3dac9-d6c1-4ab1-81d1-11b15911beb8"],
Cell[1130721, 21388, 2062, 43, 307, "Output",ExpressionUUID->"518de116-aa79-406f-908d-9109d497d293"]
}, Open  ]],
Cell[1132798, 21434, 152, 3, 30, "Input",ExpressionUUID->"6c130c8e-0a57-404a-8e95-08f96fb13477"],
Cell[CellGroupData[{
Cell[1132975, 21441, 695, 20, 30, "Input",ExpressionUUID->"63abd497-21b5-459c-b75c-9fbc5c8168f7"],
Cell[1133673, 21463, 2119, 43, 434, "Output",ExpressionUUID->"14401c75-44dc-437c-a126-f89294fd693a"]
}, Open  ]],
Cell[1135807, 21509, 152, 3, 30, "Input",ExpressionUUID->"e5891e2c-dc11-439a-91d7-2a4a06914dd0"]
}, Open  ]],
Cell[1135974, 21515, 232, 4, 69, "Chapter",ExpressionUUID->"45283982-e8cd-402a-8779-c65504d4cffe"]
}, Open  ]],
Cell[1136221, 21522, 72, 0, 98, "Title",ExpressionUUID->"97b11c47-0cd7-4321-937a-ed64078b151a"]
}
]
*)

